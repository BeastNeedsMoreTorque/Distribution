package typings.dateDashFns

import typings.std.Date
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

// FP Functions
@JSImport("date-fns/fp", JSImport.Namespace)
@js.native
object fpMod extends js.Object {
  val addBusinessDays: CurriedFn2[Double, Date | Double, Date] = js.native
  val addDays: CurriedFn2[Double, Date | Double, Date] = js.native
  val addHours: CurriedFn2[Double, Date | Double, Date] = js.native
  val addISOWeekYears: CurriedFn2[Double, Date | Double, Date] = js.native
  val addMilliseconds: CurriedFn2[Double, Date | Double, Date] = js.native
  val addMinutes: CurriedFn2[Double, Date | Double, Date] = js.native
  val addMonths: CurriedFn2[Double, Date | Double, Date] = js.native
  val addQuarters: CurriedFn2[Double, Date | Double, Date] = js.native
  val addSeconds: CurriedFn2[Double, Date | Double, Date] = js.native
  val addWeeks: CurriedFn2[Double, Date | Double, Date] = js.native
  val addYears: CurriedFn2[Double, Date | Double, Date] = js.native
  val areIntervalsOverlapping: CurriedFn2[Interval, Interval, Boolean] = js.native
  val closestIndexTo: CurriedFn2[js.Array[Date | Double], Date | Double, Double] = js.native
  val closestTo: CurriedFn2[js.Array[Date | Double], Date | Double, Date] = js.native
  val compareAsc: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val compareDesc: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInBusinessDays: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarDays: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarISOWeekYears: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarISOWeeks: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarMonths: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarQuarters: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarWeeks: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarWeeksWithOptions: CurriedFn3[js.Object, Date | Double, Date | Double, Double] = js.native
  val differenceInCalendarYears: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInDays: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInHours: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInISOWeekYears: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInMilliseconds: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInMinutes: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInMonths: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInQuarters: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInSeconds: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInWeeks: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val differenceInYears: CurriedFn2[Date | Double, Date | Double, Double] = js.native
  val eachDayOfInterval: CurriedFn1[Interval, js.Array[Date]] = js.native
  val eachDayOfIntervalWithOptions: CurriedFn2[js.Object, Interval, js.Array[Date]] = js.native
  val eachWeekOfInterval: CurriedFn1[Interval, js.Array[Date]] = js.native
  val eachWeekOfIntervalWithOptions: CurriedFn2[js.Object, Interval, js.Array[Date]] = js.native
  val eachWeekendOfInterval: CurriedFn1[Interval, js.Array[Date]] = js.native
  val eachWeekendOfMonth: CurriedFn1[Date | Double, js.Array[Date]] = js.native
  val eachWeekendOfYear: CurriedFn1[Date | Double, js.Array[Date]] = js.native
  val endOfDay: CurriedFn1[Date | Double, Date] = js.native
  val endOfDecade: CurriedFn1[Date | Double, Date] = js.native
  val endOfDecadeWithOptions: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val endOfHour: CurriedFn1[Date | Double, Date] = js.native
  val endOfISOWeek: CurriedFn1[Date | Double, Date] = js.native
  val endOfISOWeekYear: CurriedFn1[Date | Double, Date] = js.native
  val endOfMinute: CurriedFn1[Date | Double, Date] = js.native
  val endOfMonth: CurriedFn1[Date | Double, Date] = js.native
  val endOfQuarter: CurriedFn1[Date | Double, Date] = js.native
  val endOfSecond: CurriedFn1[Date | Double, Date] = js.native
  val endOfWeek: CurriedFn1[Date | Double, Date] = js.native
  val endOfWeekWithOptions: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val endOfYear: CurriedFn1[Date | Double, Date] = js.native
  val format: CurriedFn2[String, Date | Double, String] = js.native
  val formatDistance: CurriedFn2[Date | Double, Date | Double, String] = js.native
  val formatDistanceStrict: CurriedFn2[Date | Double, Date | Double, String] = js.native
  val formatDistanceStrictWithOptions: CurriedFn3[js.Object, Date | Double, Date | Double, String] = js.native
  val formatDistanceWithOptions: CurriedFn3[js.Object, Date | Double, Date | Double, String] = js.native
  val formatRelative: CurriedFn2[Date | Double, Date | Double, String] = js.native
  val formatRelativeWithOptions: CurriedFn3[js.Object, Date | Double, Date | Double, String] = js.native
  val formatWithOptions: CurriedFn3[js.Object, String, Date | Double, String] = js.native
  val fromUnixTime: CurriedFn1[Double, Date] = js.native
  val getDate: CurriedFn1[Date | Double, Double] = js.native
  val getDay: CurriedFn1[Date | Double, Double] = js.native
  val getDayOfYear: CurriedFn1[Date | Double, Double] = js.native
  val getDaysInMonth: CurriedFn1[Date | Double, Double] = js.native
  val getDaysInYear: CurriedFn1[Date | Double, Double] = js.native
  val getDecade: CurriedFn1[Date | Double, Double] = js.native
  val getHours: CurriedFn1[Date | Double, Double] = js.native
  val getISODay: CurriedFn1[Date | Double, Double] = js.native
  val getISOWeek: CurriedFn1[Date | Double, Double] = js.native
  val getISOWeekYear: CurriedFn1[Date | Double, Double] = js.native
  val getISOWeeksInYear: CurriedFn1[Date | Double, Double] = js.native
  val getMilliseconds: CurriedFn1[Date | Double, Double] = js.native
  val getMinutes: CurriedFn1[Date | Double, Double] = js.native
  val getMonth: CurriedFn1[Date | Double, Double] = js.native
  val getOverlappingDaysInIntervals: CurriedFn2[Interval, Interval, Double] = js.native
  val getQuarter: CurriedFn1[Date | Double, Double] = js.native
  val getSeconds: CurriedFn1[Date | Double, Double] = js.native
  val getTime: CurriedFn1[Date | Double, Double] = js.native
  val getUnixTime: CurriedFn1[Date | Double, Double] = js.native
  val getWeek: CurriedFn1[Date | Double, Double] = js.native
  val getWeekOfMonth: CurriedFn1[Date | Double, Double] = js.native
  val getWeekOfMonthWithOptions: CurriedFn2[js.Object, Date | Double, Double] = js.native
  val getWeekWithOptions: CurriedFn2[js.Object, Date | Double, Double] = js.native
  val getWeekYear: CurriedFn1[Date | Double, Double] = js.native
  val getWeekYearWithOptions: CurriedFn2[js.Object, Date | Double, Double] = js.native
  val getWeeksInMonth: CurriedFn1[Date | Double, Double] = js.native
  val getWeeksInMonthWithOptions: CurriedFn2[js.Object, Date | Double, Double] = js.native
  val getYear: CurriedFn1[Date | Double, Double] = js.native
  val isAfter: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isBefore: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isDate: CurriedFn1[js.Any, Boolean] = js.native
  val isEqual: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isFirstDayOfMonth: CurriedFn1[Date | Double, Boolean] = js.native
  val isFriday: CurriedFn1[Date | Double, Boolean] = js.native
  val isLastDayOfMonth: CurriedFn1[Date | Double, Boolean] = js.native
  val isLeapYear: CurriedFn1[Date | Double, Boolean] = js.native
  val isMonday: CurriedFn1[Date | Double, Boolean] = js.native
  val isSameDay: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameHour: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameISOWeek: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameISOWeekYear: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameMinute: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameMonth: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameQuarter: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameSecond: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameWeek: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSameWeekWithOptions: CurriedFn3[js.Object, Date | Double, Date | Double, Boolean] = js.native
  val isSameYear: CurriedFn2[Date | Double, Date | Double, Boolean] = js.native
  val isSaturday: CurriedFn1[Date | Double, Boolean] = js.native
  val isSunday: CurriedFn1[Date | Double, Boolean] = js.native
  val isThursday: CurriedFn1[Date | Double, Boolean] = js.native
  val isTuesday: CurriedFn1[Date | Double, Boolean] = js.native
  val isValid: CurriedFn1[js.Any, Boolean] = js.native
  val isWednesday: CurriedFn1[Date | Double, Boolean] = js.native
  val isWeekend: CurriedFn1[Date | Double, Boolean] = js.native
  val isWithinInterval: CurriedFn2[Interval, Date | Double, Boolean] = js.native
  val lastDayOfDecade: CurriedFn1[Date | Double, Date] = js.native
  val lastDayOfISOWeek: CurriedFn1[Date | Double, Date] = js.native
  val lastDayOfISOWeekYear: CurriedFn1[Date | Double, Date] = js.native
  val lastDayOfMonth: CurriedFn1[Date | Double, Date] = js.native
  val lastDayOfQuarter: CurriedFn1[Date | Double, Date] = js.native
  val lastDayOfQuarterWithOptions: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val lastDayOfWeek: CurriedFn1[Date | Double, Date] = js.native
  val lastDayOfWeekWithOptions: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val lastDayOfYear: CurriedFn1[Date | Double, Date] = js.native
  val lightFormat: CurriedFn2[String, Date | Double, String] = js.native
  val max: CurriedFn1[js.Array[Date | Double], Date] = js.native
  val maxTime: Double = js.native
  val min: CurriedFn1[js.Array[Date | Double], Date] = js.native
  val minTime: Double = js.native
  val parse: CurriedFn3[Date | Double, String, String, Date] = js.native
  val parseISO: CurriedFn1[String, Date] = js.native
  val parseISOWithOptions: CurriedFn2[js.Object, String, Date] = js.native
  val parseWithOptions: CurriedFn4[js.Object, Date | Double, String, String, Date] = js.native
  val roundToNearestMinutes: CurriedFn1[Date | Double, Date] = js.native
  val roundToNearestMinutesWithOptions: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val set: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val setDate: CurriedFn2[Double, Date | Double, Date] = js.native
  val setDay: CurriedFn2[Double, Date | Double, Date] = js.native
  val setDayOfYear: CurriedFn2[Double, Date | Double, Date] = js.native
  val setDayWithOptions: CurriedFn3[js.Object, Double, Date | Double, Date] = js.native
  val setHours: CurriedFn2[Double, Date | Double, Date] = js.native
  val setISODay: CurriedFn2[Double, Date | Double, Date] = js.native
  val setISOWeek: CurriedFn2[Double, Date | Double, Date] = js.native
  val setISOWeekYear: CurriedFn2[Double, Date | Double, Date] = js.native
  val setMilliseconds: CurriedFn2[Double, Date | Double, Date] = js.native
  val setMinutes: CurriedFn2[Double, Date | Double, Date] = js.native
  val setMonth: CurriedFn2[Double, Date | Double, Date] = js.native
  val setQuarter: CurriedFn2[Double, Date | Double, Date] = js.native
  val setSeconds: CurriedFn2[Double, Date | Double, Date] = js.native
  val setWeek: CurriedFn2[Double, Date | Double, Date] = js.native
  val setWeekWithOptions: CurriedFn3[js.Object, Double, Date | Double, Date] = js.native
  val setWeekYear: CurriedFn2[Double, Date | Double, Date] = js.native
  val setWeekYearWithOptions: CurriedFn3[js.Object, Double, Date | Double, Date] = js.native
  val setYear: CurriedFn2[Double, Date | Double, Date] = js.native
  val startOfDay: CurriedFn1[Date | Double, Date] = js.native
  val startOfDecade: CurriedFn1[Date | Double, Date] = js.native
  val startOfHour: CurriedFn1[Date | Double, Date] = js.native
  val startOfISOWeek: CurriedFn1[Date | Double, Date] = js.native
  val startOfISOWeekYear: CurriedFn1[Date | Double, Date] = js.native
  val startOfMinute: CurriedFn1[Date | Double, Date] = js.native
  val startOfMonth: CurriedFn1[Date | Double, Date] = js.native
  val startOfQuarter: CurriedFn1[Date | Double, Date] = js.native
  val startOfSecond: CurriedFn1[Date | Double, Date] = js.native
  val startOfWeek: CurriedFn1[Date | Double, Date] = js.native
  val startOfWeekWithOptions: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val startOfWeekYear: CurriedFn1[Date | Double, Date] = js.native
  val startOfWeekYearWithOptions: CurriedFn2[js.Object, Date | Double, Date] = js.native
  val startOfYear: CurriedFn1[Date | Double, Date] = js.native
  val subDays: CurriedFn2[Double, Date | Double, Date] = js.native
  val subHours: CurriedFn2[Double, Date | Double, Date] = js.native
  val subISOWeekYears: CurriedFn2[Double, Date | Double, Date] = js.native
  val subMilliseconds: CurriedFn2[Double, Date | Double, Date] = js.native
  val subMinutes: CurriedFn2[Double, Date | Double, Date] = js.native
  val subMonths: CurriedFn2[Double, Date | Double, Date] = js.native
  val subQuarters: CurriedFn2[Double, Date | Double, Date] = js.native
  val subSeconds: CurriedFn2[Double, Date | Double, Date] = js.native
  val subWeeks: CurriedFn2[Double, Date | Double, Date] = js.native
  val subYears: CurriedFn2[Double, Date | Double, Date] = js.native
  val toDate: CurriedFn1[Date | Double, Date] = js.native
}

