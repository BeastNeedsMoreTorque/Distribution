package typings
package dexieLib

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Anon_Abort extends js.Object {
  var Abort: dexieLib.dexieLibStrings.AbortError
  var Constraint: dexieLib.dexieLibStrings.ConstraintError
  var Data: dexieLib.dexieLibStrings.DataError
  var DataClone: dexieLib.dexieLibStrings.DataCloneError
  var DatabaseClosed: dexieLib.dexieLibStrings.DatabaseClosedError
  var Internal: dexieLib.dexieLibStrings.InternalError
  var InvalidAccess: dexieLib.dexieLibStrings.InvalidAccessError
  var InvalidArgument: dexieLib.dexieLibStrings.InvalidArgumentError
  var InvalidState: dexieLib.dexieLibStrings.InvalidStateError
  var InvalidTable: dexieLib.dexieLibStrings.InvalidTableError
  var MissingAPI: dexieLib.dexieLibStrings.MissingAPIError
  // Dexie-specific error names:
  var Modify: dexieLib.dexieLibStrings.ModifyError
  var NoSuchDatabase: dexieLib.dexieLibStrings.NoSuchDatabaseError
  var NotFound: dexieLib.dexieLibStrings.NotFoundError
  var OpenFailed: dexieLib.dexieLibStrings.OpenFailedError
  var QuotaExceeded: dexieLib.dexieLibStrings.QuotaExceededError
  var ReadOnly: dexieLib.dexieLibStrings.ReadOnlyError
  var Schema: dexieLib.dexieLibStrings.SchemaError
  var SubTransaction: dexieLib.dexieLibStrings.Error
  var Syntax: dexieLib.dexieLibStrings.SyntaxError
  var Timeout: dexieLib.dexieLibStrings.TimeoutError
  var TransactionInactive: dexieLib.dexieLibStrings.TransactionInactiveError
  // Error names generated by indexedDB:
  var Unknown: dexieLib.dexieLibStrings.UnknownError
  var Unsupported: dexieLib.dexieLibStrings.UnsupportedError
  var Upgrade: dexieLib.dexieLibStrings.UpgradeError
  var Version: dexieLib.dexieLibStrings.VersionError
  var VersionChange: dexieLib.dexieLibStrings.VersionChangeError
}

object Anon_Abort {
  @scala.inline
  def apply(
    Abort: dexieLib.dexieLibStrings.AbortError,
    Constraint: dexieLib.dexieLibStrings.ConstraintError,
    Data: dexieLib.dexieLibStrings.DataError,
    DataClone: dexieLib.dexieLibStrings.DataCloneError,
    DatabaseClosed: dexieLib.dexieLibStrings.DatabaseClosedError,
    Internal: dexieLib.dexieLibStrings.InternalError,
    InvalidAccess: dexieLib.dexieLibStrings.InvalidAccessError,
    InvalidArgument: dexieLib.dexieLibStrings.InvalidArgumentError,
    InvalidState: dexieLib.dexieLibStrings.InvalidStateError,
    InvalidTable: dexieLib.dexieLibStrings.InvalidTableError,
    MissingAPI: dexieLib.dexieLibStrings.MissingAPIError,
    Modify: dexieLib.dexieLibStrings.ModifyError,
    NoSuchDatabase: dexieLib.dexieLibStrings.NoSuchDatabaseError,
    NotFound: dexieLib.dexieLibStrings.NotFoundError,
    OpenFailed: dexieLib.dexieLibStrings.OpenFailedError,
    QuotaExceeded: dexieLib.dexieLibStrings.QuotaExceededError,
    ReadOnly: dexieLib.dexieLibStrings.ReadOnlyError,
    Schema: dexieLib.dexieLibStrings.SchemaError,
    SubTransaction: dexieLib.dexieLibStrings.Error,
    Syntax: dexieLib.dexieLibStrings.SyntaxError,
    Timeout: dexieLib.dexieLibStrings.TimeoutError,
    TransactionInactive: dexieLib.dexieLibStrings.TransactionInactiveError,
    Unknown: dexieLib.dexieLibStrings.UnknownError,
    Unsupported: dexieLib.dexieLibStrings.UnsupportedError,
    Upgrade: dexieLib.dexieLibStrings.UpgradeError,
    Version: dexieLib.dexieLibStrings.VersionError,
    VersionChange: dexieLib.dexieLibStrings.VersionChangeError
  ): Anon_Abort = {
    val __obj = js.Dynamic.literal(Abort = Abort, Constraint = Constraint, Data = Data, DataClone = DataClone, DatabaseClosed = DatabaseClosed, Internal = Internal, InvalidAccess = InvalidAccess, InvalidArgument = InvalidArgument, InvalidState = InvalidState, InvalidTable = InvalidTable, MissingAPI = MissingAPI, Modify = Modify, NoSuchDatabase = NoSuchDatabase, NotFound = NotFound, OpenFailed = OpenFailed, QuotaExceeded = QuotaExceeded, ReadOnly = ReadOnly, Schema = Schema, SubTransaction = SubTransaction, Syntax = Syntax, Timeout = Timeout, TransactionInactive = TransactionInactive, Unknown = Unknown, Unsupported = Unsupported, Upgrade = Upgrade, Version = Version, VersionChange = VersionChange)
  
    __obj.asInstanceOf[Anon_Abort]
  }
}

