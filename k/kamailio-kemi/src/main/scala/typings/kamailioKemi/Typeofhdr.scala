package typings.kamailioKemi

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Typeofhdr extends js.Object {
  // Append header to current SIP message (request or reply). It will be added after the last header.
  def append(hdr: String): Double
  // Append header to current SIP message (request or reply).
  // It will be added after the first header matching the name hdrName.
  def append_after(hdr: String, hdrName: String): Double
  // Add a header to the SIP response to be generated by Kamailio for the current SIP request.
  def append_to_reply(hdr: String): Double
  // Insert header to current SIP message (request or reply).
  // It will be added before the first header.
  def insert(hdr: String): Double
  // Insert header to current SIP message (request or reply).
  // It will be added before the header matching the name hdrName.
  def insert_before(hdr: String, hdrName: String): Double
  // Return greater than 0 if a header with the name hdrName exists and less than 0 if there is no such header.
  def is_present(hdrName: String): Double
  // Remove all the headers with the name hdrName.
  def remove(hdrName: String): Double
}

object Typeofhdr {
  @scala.inline
  def apply(
    append: String => Double,
    append_after: (String, String) => Double,
    append_to_reply: String => Double,
    insert: String => Double,
    insert_before: (String, String) => Double,
    is_present: String => Double,
    remove: String => Double
  ): Typeofhdr = {
    val __obj = js.Dynamic.literal(append = js.Any.fromFunction1(append), append_after = js.Any.fromFunction2(append_after), append_to_reply = js.Any.fromFunction1(append_to_reply), insert = js.Any.fromFunction1(insert), insert_before = js.Any.fromFunction2(insert_before), is_present = js.Any.fromFunction1(is_present), remove = js.Any.fromFunction1(remove))
    __obj.asInstanceOf[Typeofhdr]
  }
}

