[info ] ResolveExternalReferences.scala:82 Inferred augmented module None (TsIdentModule(None,List(hapi))) [file => ../types/schwifty/index.d.ts, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(hapi)), id => schwifty] 
[debug] PhaseRunner.scala:78 Success [id => schwifty, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/schwifty/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/schwifty),TsIdentLibrarySimple(schwifty)),TsIdentModule(None,List(schwifty))) [id => schwifty, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(schwifty)) [id => schwifty, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibrarySimple(schwifty) [id => schwifty, phase => typescript] 
[info ] ResolveTypeQueries.scala:92 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(schwifty), TsIdentModule(None,List(schwifty)), TsIdentSimple(Model)))) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(ModelClass) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:92 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(objection), TsIdentModule(None,List(objection)), TsIdentSimple(Model)))) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(ModelClass) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:92 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(schwifty), TsIdentModule(None,List(schwifty)), TsIdentSimple(Model)))) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsExport() / TsExporteeTree() / TsDeclFunction(assertCompatible) / TsFunSig() / TsFunParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:92 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(schwifty), TsIdentModule(None,List(schwifty)), TsIdentSimple(Model)))) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsExport() / TsExporteeTree() / TsDeclFunction(assertCompatible) / TsFunSig() / TsFunParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:92 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(schwifty), TsIdentModule(None,List(schwifty)), TsIdentSimple(Model)))) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsAugmentedModule(hapi) / TsDeclInterface(Server) / TsMemberFunction(models) / TsFunSig() / TsTypeObject() / TsMemberIndex() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:92 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(schwifty), TsIdentModule(None,List(schwifty)), TsIdentSimple(Model)))) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsAugmentedModule(hapi) / TsDeclInterface(Request) / TsMemberFunction(models) / TsFunSig() / TsTypeObject() / TsMemberIndex() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:92 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(schwifty), TsIdentModule(None,List(schwifty)), TsIdentSimple(Model)))) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsAugmentedModule(hapi) / TsDeclInterface(ResponseToolkit) / TsMemberFunction(models) / TsFunSig() / TsTypeObject() / TsMemberIndex() / TsTypeQuery())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Models) [id => schwifty, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(schwifty) / TsAugmentedModule(hapi) / TsDeclInterface(Server) / TsMemberFunction(schwifty) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[debug] PhaseRunner.scala:78 Success [id => schwifty, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:34 Processing schwifty [id => schwifty, phase => scala.js] 
[debug] PhaseRunner.scala:78 Success [id => schwifty, phase => scala.js] 
[warn ] PhaseRunner.scala:64 Failed because of, [objection => Compilation failed] [id => schwifty, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [objection => Compilation failed] [id => schwifty, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [objection => Compilation failed] [id => schwifty, phase => publish] 
