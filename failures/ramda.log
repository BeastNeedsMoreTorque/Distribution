[warn ] Phase1ReadTypescript.scala:153 Could not resolve declared dependency ts-toolbelt [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:92 Ignored [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:92 Ignored [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[info ] Phase1ReadTypescript.scala:170 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/ramda/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/ramda),TsIdentLibrarySimple(ramda)),TsIdentModule(None,List(ramda))) [id => ramda, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(ramda)) [id => ramda, phase => typescript] 
[info ] Phase1ReadTypescript.scala:170 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/ramda/tools.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/ramda),TsIdentLibrarySimple(ramda)),TsIdentModule(None,List(ramda, tools))) [id => ramda, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibrarySimple(ramda) [id => ramda, phase => typescript] 
[warn ] QualifyReferences.scala:32 Couldn't qualify A.x [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(Placeholder) / TsTypeIntersect() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : (item : T, idx : number, list ? : Array<T>): U, b : ReadonlyArray<T>): Array<U>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(addIndex) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : (item : T, idx : number, list ? : Array<T>): void, b : ReadonlyArray<T>): Array<T>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(addIndex) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : (acc : U, item : T, idx : number, list ? : Array<T>): U, b : U, c : ReadonlyArray<T>): U> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(addIndex) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : T, b : U): U> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(assocPath) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : T, b : T): boolean> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(eqBy) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify T.Merge<[P[1], P[0]], P> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(flip) / TsFunSig() / TsTypeRef() / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : T, b : T): T> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(maxBy) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : T, b : T): T> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(minBy) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : any, b : any): boolean> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(pathEq) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : Path, b : any): T> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(pathOr) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : Path, b : U): boolean> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(pathSatisfies) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : string, b : U): boolean> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(propSatisfies) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : (elem : T): string, b : ReadonlyArray<T>): {[index: string] : TResult}> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(reduceBy) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : TResult, b : (elem : T): string, c : ReadonlyArray<T>): {[index: string] : TResult}> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(reduceBy) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : TResult, b : ReadonlyArray<T>): TResult> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(reduceWhile) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : (acc : TResult, elem : T): TResult, b : TResult, c : ReadonlyArray<T>): TResult> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(reduceWhile) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : ReadonlyArray<T>, b : ReadonlyArray<T>): Array<T>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(symmetricDifferenceWith) / TsFunSig() / TsTypeRef())] 
[warn ] QualifyReferences.scala:32 Couldn't qualify F.Curry<(a : ReadonlyArray<T>, b : ReadonlyArray<T>): Array<T>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsExport() / TsExporteeTree() / TsDeclInterface(Static) / TsMemberFunction(unionWith) / TsFunSig() / TsTypeRef())] 
[info ] PreferTypeAlias.scala:168 Could not simplify ramda.ramda.Evolver to function type alias because of circular references Vector(TsQIdent(List(TsIdentLibrarySimple(ramda), TsIdentModule(None,List(ramda)), TsIdentSimple(Evolver)))) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Evolver))] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(AssocPartialOne) / TsTypeParam() / TsTypeKeyOf())] 
[info ] ExpandTypeParams.scala:61 Expanding 5 members for TsIdentSimple(and) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[info ] ExpandTypeParams.scala:61 Expanding 5 members for TsIdentSimple(and) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[info ] ExpandTypeParams.scala:61 Expanding 4 members for TsIdentSimple(max) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[info ] ExpandTypeParams.scala:61 Expanding 4 members for TsIdentSimple(max) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[info ] ExpandTypeParams.scala:61 Expanding 4 members for TsIdentSimple(min) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[info ] ExpandTypeParams.scala:61 Expanding 4 members for TsIdentSimple(min) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias ramda.Tools.Last<ramda.Tools.Tail<T>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Last) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(0) / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias ramda.Tools.Drop<N, ramda.Tools.Tail<T>, ramda.Tools.Prepend<any, I>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Drop) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(0) / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias ramda.Tools.Iterator<Index, ramda.Tools.Next<From>, ramda.Tools.Next<I>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Iterator) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(0) / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias ramda.Tools.Reverse<T, ramda.Tools.Prepend<T[ramda.Tools.Pos<I>], R>, ramda.Tools.Next<I>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Reverse) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(0) / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias ramda.Curry.GapsOf<T1, T2, ramda.Curry.GapOf<T1, T2, TN, I> extends infer G ? ramda.Tools.Cast<G, std.Array<any>> : never, ramda.Tools.Next<I>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Curry) / TsDeclTypeAlias(GapsOf) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(0) / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias ramda.Curry.Curry<(args : ramda.Curry.GapsOf<T, std.Parameters<F>, [], []> extends infer G ? ramda.Tools.Cast<G, std.Array<any>> : never): std.ReturnType<F>> [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Curry) / TsDeclTypeAlias(Curry) / TsTypeFunction() / TsFunSig() / TsTypeConditional() / TsTypeRef())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Functionalplaceholder) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclTypeAlias(Placeholder) / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_A) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(and) / TsFunSig() / TsTypeParam() / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_A) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(and) / TsFunSig() / TsTypeParam() / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AT) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(construct) / TsFunSig() / TsFunParam() / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AT) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(constructN) / TsFunSig() / TsFunParam() / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Xs) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(drop) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_XsArray) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(dropLast) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Obj) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(lensProp) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_List) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(move) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AOr) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(or) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_AOr) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(or) / TsFunSig() / TsTypeParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Obj) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(propEq) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Name) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(propIs) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_ListArray) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(slice) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_B) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(slice) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_ListArrayReadonlyArray) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(splitAt) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_ListArrayReadonlyArrayString) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(splitEvery) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_XsArrayReadonlyArray) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(take) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_XsArrayReadonlyArrayString) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(takeLast) / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_0) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Last) / TsTypeLookup() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_01) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Drop) / TsTypeLookup() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_01From) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Iterator) / TsTypeLookup() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_01Object) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Reverse) / TsTypeLookup() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_01Any) [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Curry) / TsDeclTypeAlias(GapsOf) / TsTypeLookup() / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded filter into 5 methods [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[info ] ExpandCallables.scala:48 Expanded reject into 5 methods [id => ramda, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static))] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:43 Processing ramda [id => ramda, phase => scala.js] 
[info ] ImportType.scala:245 Failed type conversion: ramda.Anon_01Object<R>[ramda.Tools.Pos<I> extends ramda.Tools.Length<T> ? 1 : 0] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Reverse) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: ramda.Anon_01From<From>[ramda.Tools.Pos<I> extends Index ? 1 : 0] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Iterator) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T['length'] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Length) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[0] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Head) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: ramda.Anon_0<T>[ramda.Tools.HasTail<T> extends true ? 0 : 1] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Last) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: ramda.Anon_01<T>[ramda.Tools.Length<I> extends N ? 1 : 0] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Tools) / TsDeclTypeAlias(Drop) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[keyof T] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(forEachObjIndexed) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[keyof T] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(forEachObjIndexed) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[keyof T & keyof U] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(map) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: U[keyof T & keyof U] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(map) / TsFunParam() / TsTypeFunction() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[keyof T & keyof U] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(map) / TsFunParam() / TsTypeFunction() / TsFunParam() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: U[keyof T & keyof U] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(map) / TsFunParam() / TsTypeFunction() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[K] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(pluck) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[keyof T] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(prop) / TsTypeFunction() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[P] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(prop) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T[K] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Static) / TsMemberFunction(values) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportTree.scala:392 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(K),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ramda), TsIdentModule(None,List(ramda)), TsIdentSimple(CommonPropsThatAreObjects))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List()), TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List()))),Noop,TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ramda), TsIdentModule(None,List(ramda)), TsIdentSimple(MergeDeep))),List(TsTypeLookup(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List()),TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(K))),List())), TsTypeLookup(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List()),TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(K))),List()))))) [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(MergeDeep) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:392 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(K),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(std), TsIdentSimple(Exclude))),List(TsTypeKeyOf(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List())), TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ramda), TsIdentModule(None,List(ramda)), TsIdentSimple(CommonPropsThatAreObjects))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List()), TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List()))))),Noop,TsTypeLookup(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List()),TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(K))),List()))) [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(MergeDeep) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:392 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(K),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(std), TsIdentSimple(Exclude))),List(TsTypeKeyOf(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List())), TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ramda), TsIdentModule(None,List(ramda)), TsIdentSimple(CommonKeys))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List()), TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List()))))),Noop,TsTypeLookup(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List()),TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(K))),List()))) [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(MergeDeep) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:392 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(K),TsTypeKeyOf(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List())),Noop,TsTypeLookup(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List()),TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(K))),List()))) [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Merge) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:392 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(K),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(std), TsIdentSimple(Exclude))),List(TsTypeKeyOf(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List())), TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(ramda), TsIdentModule(None,List(ramda)), TsIdentSimple(CommonKeys))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Primary))),List()), TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List()))))),Noop,TsTypeLookup(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(Secondary))),List()),TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(K))),List()))) [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(ramda) / TsDeclInterface(Merge) / TsMemberTypeMapped())] 
[info ] ImportType.scala:245 Failed type conversion: ramda.Anon_01Any<TN, I, T2>[ramda.Tools.Pos<I> extends ramda.Tools.Length<T1> ? 1 : 0] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Curry) / TsDeclTypeAlias(GapsOf) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: T2[ramda.Tools.Pos<I>] [id => ramda, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclNamespace(Curry) / TsDeclTypeAlias(GapOf) / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(typings) / Name(ramda) / Name(ramdaMod) / Name(Filter) [id => ramda, phase => scala.js, this => Name(typings) / Name(ramda) / Name(ramdaMod) / Name(Filter)] 
[info ] CombineOverloads.scala:82 Dropping 1 incompatible `apply` overloads (have no way to express this) at Name(typings) / Name(ramda) / Name(ramdaMod) / Name(Filter) [id => ramda, phase => scala.js, this => Name(typings) / Name(ramda) / Name(ramdaMod) / Name(Filter)] 
[debug] PhaseRunner.scala:84 Success [id => ramda, phase => scala.js] 
[warn ] Phase3Compile.scala:208 Building ramda... [id => ramda, phase => build] 
[error] Phase3Compile.scala:234 [E] [E5] src/main/scala/typings/ramda/ramdaMod/Static.scala:2252:75
[E]      not found: type Curry
[E]      L2252:   def thunkify[F /* <: js.Function1[/* repeated */ js.Any, _] */](fn: F): Curry[js.Function1[/* args */ Parameters[F], js.Function0[ReturnType[F]]]] = js.native
[E]                                                                                       ^
[E] [E4] src/main/scala/typings/ramda/ramdaMod/Static.scala:729:103
[E]      not found: type Curry
[E]      L729:   def flip[F /* <: js.Function1[/* args */ js.Any, _] */, P /* <: typings.F.Parameters[F] */](fn: F): Curry[
[E]                                                                                                                  ^
[E] [E3] src/main/scala/typings/ramda/ramdaMod/Static.scala:544:67
[E]      not found: type Curry
[E]      L544:   def curry[F /* <: js.Function1[/* args */ js.Any, _] */](f: F): Curry[F] = js.native
[E]                                                                              ^
[E] [E2] src/main/scala/typings/ramda/ramdaMod/Static.scala:6:16
[E]      object F is not a member of package typings
[E]      L6: import typings.F.Return
[E]                         ^
[E] [E1] src/main/scala/typings/ramda/ramdaMod/Static.scala:5:16
[E]      object F is not a member of package typings
[E]      L5: import typings.F.Curry
[E]                         ^
[E] src/main/scala/typings/ramda/ramdaMod/package.scala: L4 [E6], L4 [E7]
[E] src/main/scala/typings/ramda/ramdaMod/Static.scala: L5 [E1], L6 [E2], L544 [E3], L729 [E4], L2252 [E5]
[E] Failed to compile 'ramda'
 [id => ramda, phase => build] 
[error] PhaseRunner.scala:88 Failure, [ramda => Compilation failed] [id => ramda, phase => build] 
[error] PhaseRunner.scala:88 Failure, [ramda => Compilation failed] [id => ramda, phase => publish] 
