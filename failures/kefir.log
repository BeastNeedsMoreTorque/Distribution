[info ] InferredDependency.scala:20 Inferred dependencies Set(TsIdentLibrarySimple(node)) for TsIdentLibrarySimple(kefir) [id => kefir, phase => typescript, file => ../types/kefir/index.d.ts] 
[debug] PhaseRunner.scala:78 Success [id => kefir, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/kefir/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/kefir),TsIdentLibrarySimple(kefir)),TsIdentModule(None,List(kefir))) [id => kefir, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(kefir)) [id => kefir, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibrarySimple(kefir) [id => kefir, phase => typescript] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Convert) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(errorsToValues) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(bufferBy) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEndFlushOnChange) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(bufferWhileBy) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(bufferWithCount) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(bufferWithTimeOrCount) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Trailing) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(throttle) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ConvertError) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(valuesToErrors) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Immediate) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Stream) / TsMemberFunction(debounce) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Type) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Emitter) / TsMemberFunction(emitEvent) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_On) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(fromEvents) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_On) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(fromEvents) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Convert) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(errorsToValues) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(bufferBy) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEndFlushOnChange) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(bufferWhileBy) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(bufferWithCount) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_FlushOnEnd) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(bufferWithTimeOrCount) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Trailing) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(throttle) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ConvertError) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(valuesToErrors) / TsFunSig() / TsFunParam() / TsTypeFunction() / TsFunSig() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Immediate) [id => kefir, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclInterface(Property) / TsMemberFunction(debounce) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[debug] PhaseRunner.scala:78 Success [id => kefir, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:34 Processing kefir [id => kefir, phase => scala.js] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple())) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclTypeAlias(ValueOfAnObservable) / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(2))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(3))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(4))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(5))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(6))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(7))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(2))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(3))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(4))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(5))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(6))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(2))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(3))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(4))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(5))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(2))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(3))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(4))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(2))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(3))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(2))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(1))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:190 Failed type conversion: TsTypeLookup(TsTypeRef(TsQIdent(List(TsIdentSimple(T))),List()),Left(TsIdentSimple(0))) [id => kefir, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(kefir) / TsDeclFunction(combine) / TsTypeRef() / TsTypeTuple() / TsTypeRef() / TsTypeLookup())] 
[debug] PhaseRunner.scala:78 Success [id => kefir, phase => scala.js] 
[error] kefirModMembers.scala:59 method combine_TArray is defined twice;
  the conflicting method combine_TArray was defined at line 57:7,   def combine_TArray[T /* <: js.Array[Observable[_, _]] */](obss: T): Stream[ [id => kefir, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [kefir => Compilation failed] [id => kefir, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [kefir => Compilation failed] [id => kefir, phase => publish] 
