[info ] InferredDependency.scala:22 Inferred dependencies Set(TsIdentLibrarySimple(node)) for TsIdentLibrarySimple(child-process-promise) [id => child-process-promise, phase => typescript, file => ../types/child-process-promise/index.d.ts] 
[debug] PhaseRunner.scala:84 Success [id => child-process-promise, phase => typescript] 
[info ] Phase1ReadTypescript.scala:160 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/child-process-promise/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/child-process-promise),TsIdentLibrarySimple(child-process-promise)),TsIdentModule(None,List(child-process-promise))) [id => child-process-promise, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(child-process-promise)) [id => child-process-promise, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:185 Processing TsIdentLibrarySimple(child-process-promise) [id => child-process-promise, phase => typescript] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(exec) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(exec) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(exec) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(exec) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(execFile) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(execFile) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(execFile) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(execFile) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(execFile) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(execFile) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(spawn) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExpandTypeParams.scala:74 Expanding 1 members for TsIdentSimple(fork) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise))] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Buffer) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise) / TsDeclFunction(exec) / TsFunSig() / TsFunParam() / TsTypeRef() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_Encoding) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise) / TsDeclFunction(exec) / TsFunSig() / TsFunParam() / TsTypeRef() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_EncodingString) [id => child-process-promise, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(child-process-promise) / TsDeclFunction(exec) / TsFunSig() / TsFunParam() / TsTypeRef() / TsTypeIntersect() / TsTypeObject())] 
[debug] PhaseRunner.scala:84 Success [id => child-process-promise, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:43 Processing child-process-promise [id => child-process-promise, phase => scala.js] 
[error] PhaseRes.scala:76 Caught exception: transpose requires all collections have the same size [id => child-process-promise, phase => scala.js] java.lang.IllegalArgumentException: transpose requires all collections have the same size
	at scala.collection.generic.GenericTraversableTemplate.fail$1(GenericTraversableTemplate.scala:215)
	at scala.collection.generic.GenericTraversableTemplate.$anonfun$transpose$2(GenericTraversableTemplate.scala:227)
	at scala.collection.generic.GenericTraversableTemplate.$anonfun$transpose$2$adapted(GenericTraversableTemplate.scala:219)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.GenericTraversableTemplate.transpose(GenericTraversableTemplate.scala:219)
	at scala.collection.generic.GenericTraversableTemplate.transpose$(GenericTraversableTemplate.scala:211)
	at scala.collection.AbstractTraversable.transpose(Traversable.scala:108)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.asUnionType(CombineOverloads.scala:107)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.$anonfun$combineSameErasureSameTypeParams$4(CombineOverloads.scala:58)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:238)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableLike.map(TraversableLike.scala:238)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:231)
	at scala.collection.immutable.List.map(List.scala:298)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.$anonfun$combineSameErasureSameTypeParams$3(CombineOverloads.scala:56)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:238)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableLike.map(TraversableLike.scala:238)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:231)
	at scala.collection.immutable.List.map(List.scala:298)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.combineSameErasureSameTypeParams(CombineOverloads.scala:54)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.combineSameErasure(CombineOverloads.scala:77)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.$anonfun$combineOverloads$2(CombineOverloads.scala:122)
	at scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:245)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:159)
	at scala.collection.TraversableLike.flatMap(TraversableLike.scala:245)
	at scala.collection.TraversableLike.flatMap$(TraversableLike.scala:242)
	at scala.collection.AbstractTraversable.flatMap(Traversable.scala:108)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.combineOverloads(CombineOverloads.scala:123)
	at com.olvind.tso.scalajs.transforms.CombineOverloads$.leaveModuleTree(CombineOverloads.scala:37)
	at com.olvind.tso.scalajs.TreeTransformation.visitModuleTree(TreeTransformation.scala:80)
	at com.olvind.tso.scalajs.TreeTransformation.visitContainerTree(TreeTransformation.scala:142)
	at com.olvind.tso.scalajs.TreeTransformation.visitTree(TreeTransformation.scala:155)
	at com.olvind.tso.scalajs.TreeTransformation.$anonfun$visitPackageTree$1(TreeTransformation.scala:88)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:238)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:238)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:231)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at com.olvind.tso.scalajs.TreeTransformation.visitPackageTree(TreeTransformation.scala:88)
	at com.olvind.tso.scalajs.TreeTransformation.visitContainerTree(TreeTransformation.scala:141)
	at com.olvind.tso.scalajs.TreeTransformation.visitTree(TreeTransformation.scala:155)
	at com.olvind.tso.scalajs.TreeTransformation.$anonfun$visitPackageTree$1(TreeTransformation.scala:88)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:238)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:238)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:231)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at com.olvind.tso.scalajs.TreeTransformation.visitPackageTree(TreeTransformation.scala:88)
	at com.olvind.tso.scalajs.TreeTransformation.visitContainerTree(TreeTransformation.scala:141)
	at com.olvind.tso.scalajs.TreeTransformation.visitTree(TreeTransformation.scala:155)
	at com.olvind.tso.scalajs.TreeTransformation.$anonfun$visitPackageTree$1(TreeTransformation.scala:88)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:238)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableLike.map(TraversableLike.scala:238)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:231)
	at scala.collection.immutable.List.map(List.scala:298)
	at com.olvind.tso.scalajs.TreeTransformation.visitPackageTree(TreeTransformation.scala:88)
	at com.olvind.tso.importer.Phase2ToScalaJs.$anonfun$apply$12(Phase2ToScalaJs.scala:68)
	at com.olvind.tso.importer.Phase2ToScalaJs.$anonfun$apply$17(Phase2ToScalaJs.scala:77)
	at scala.collection.LinearSeqOptimized.foldLeft(LinearSeqOptimized.scala:126)
	at scala.collection.LinearSeqOptimized.foldLeft$(LinearSeqOptimized.scala:122)
	at scala.collection.immutable.List.foldLeft(List.scala:89)
	at com.olvind.tso.importer.Phase2ToScalaJs.$anonfun$apply$2(Phase2ToScalaJs.scala:76)
	at com.olvind.tso.phases.PhaseRes.map(PhaseRes.scala:16)
	at com.olvind.tso.phases.PhaseRes.map$(PhaseRes.scala:14)
	at com.olvind.tso.phases.PhaseRes$Ok.map(PhaseRes.scala:30)
	at com.olvind.tso.importer.Phase2ToScalaJs.apply(Phase2ToScalaJs.scala:32)
	at com.olvind.tso.importer.Phase2ToScalaJs.apply(Phase2ToScalaJs.scala:13)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$5(PhaseRunner.scala:78)
	at com.olvind.tso.phases.PhaseRes$.attempt(PhaseRes.scala:71)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$4(PhaseRunner.scala:78)
	at com.olvind.tso.phases.PhaseRes.flatMap(PhaseRes.scala:23)
	at com.olvind.tso.phases.PhaseRes.flatMap$(PhaseRes.scala:21)
	at com.olvind.tso.phases.PhaseRes$Ok.flatMap(PhaseRes.scala:30)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$1(PhaseRunner.scala:78)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$1$adapted(PhaseRunner.scala:49)
	at com.olvind.tso.phases.PhaseCache.$anonfun$getOrElse$1(PhaseCache.scala:40)
	at scala.Option.foreach(Option.scala:407)
	at com.olvind.tso.phases.PhaseCache.getOrElse(PhaseCache.scala:39)
	at com.olvind.tso.phases.PhaseRunner$.doNext(PhaseRunner.scala:49)
	at com.olvind.tso.phases.PhaseRunner$.go(PhaseRunner.scala:30)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$1(PhaseRunner.scala:54)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$1$adapted(PhaseRunner.scala:49)
	at com.olvind.tso.phases.PhaseCache.$anonfun$getOrElse$1(PhaseCache.scala:40)
	at scala.Option.foreach(Option.scala:407)
	at com.olvind.tso.phases.PhaseCache.getOrElse(PhaseCache.scala:39)
	at com.olvind.tso.phases.PhaseRunner$.doNext(PhaseRunner.scala:49)
	at com.olvind.tso.phases.PhaseRunner$.go(PhaseRunner.scala:30)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$1(PhaseRunner.scala:54)
	at com.olvind.tso.phases.PhaseRunner$.$anonfun$doNext$1$adapted(PhaseRunner.scala:49)
	at com.olvind.tso.phases.PhaseCache.$anonfun$getOrElse$1(PhaseCache.scala:40)
	at scala.Option.foreach(Option.scala:407)
	at com.olvind.tso.phases.PhaseCache.getOrElse(PhaseCache.scala:39)
	at com.olvind.tso.phases.PhaseRunner$.doNext(PhaseRunner.scala:49)
	at com.olvind.tso.phases.PhaseRunner$.go(PhaseRunner.scala:30)
	at com.olvind.tso.importer.Main.$anonfun$run$21(Main.scala:215)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:238)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:238)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:231)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at com.olvind.tso.importer.Main.run(Main.scala:215)
	at com.olvind.tso.importer.Main$.main(Main.scala:332)
	at com.olvind.tso.importer.Main.main(Main.scala)

[error] PhaseRunner.scala:88 Failure, [child-process-promise => java.lang.IllegalArgumentException: transpose requires all collections have the same size] [id => child-process-promise, phase => scala.js] 
[error] PhaseRunner.scala:88 Failure, [child-process-promise => java.lang.IllegalArgumentException: transpose requires all collections have the same size] [id => child-process-promise, phase => build] 
[error] PhaseRunner.scala:88 Failure, [child-process-promise => java.lang.IllegalArgumentException: transpose requires all collections have the same size] [id => child-process-promise, phase => publish] 
