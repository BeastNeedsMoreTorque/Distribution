[debug] PhaseRunner.scala:92 Ignored [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:92 Ignored [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:92 Ignored [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:92 Ignored [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/Model.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, Model))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, Model)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/ORM.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, ORM))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, ORM)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/QuerySet.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, QuerySet))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, QuerySet)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/Session.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, Session))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, Session)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/constants.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, constants))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, constants)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/db/Database.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, db, Database))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, db, Database)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/db/Table.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, db, Table))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, db, Table)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/db/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, db))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, db)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/fields.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, fields))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, fields)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/helpers.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, helpers))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, helpers)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm)) [id => redux-orm, phase => typescript] 
[info ] Phase1ReadTypescript.scala:171 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm/redux.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/redux-orm),TsIdentLibrarySimple(redux-orm)),TsIdentModule(None,List(redux-orm, redux))) [id => redux-orm, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(redux-orm, redux)) [id => redux-orm, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:189 Processing TsIdentLibrarySimple(redux-orm) [id => redux-orm, phase => typescript] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsExport() / TsExporteeTree() / TsDeclClass(Model) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(QuerySet)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsExport() / TsExporteeTree() / TsDeclClass(Model) / TsMemberProperty(querySetClass) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(IndexedModelClasses) / TsTypeParam() / TsTypeObject() / TsMemberTypeMapped() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(FILTER)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(QueryType) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(EXCLUDE)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(QueryType) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(ORDER_BY)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(QueryType) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(CREATE)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(UpdateType) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(UPDATE)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(UpdateType) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(DELETE)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(UpdateType) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(SUCCESS)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(UpdateStatus) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(FAILURE)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(UpdateStatus) / TsTypeUnion() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(createDatabase)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(DatabaseCreator) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(ExtractModelOption) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(IdAttribute) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(ArrName) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(MapName) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclInterface(ModelTableOpts) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclClass(Table) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(TableIndexes) / TsTypeParam() / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:139 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(AnyModel)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsExport() / TsExporteeTree() / TsDeclTypeAlias(TableState) / TsTypeParam() / TsTypeQuery())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias redux-orm.redux-orm/Model.Serializable [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(Serializable) / TsTypeUnion() / TsTypeObject() / TsMemberIndex() / TsTypeUnion() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias redux-orm.redux-orm/Model.Serializable [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(Serializable) / TsTypeUnion() / TsTypeObject() / TsMemberIndex() / TsTypeUnion() / TsTypeRef() / TsTypeRef())] 
[info ] PreferTypeAlias.scala:168 Could not simplify redux-orm.redux-orm/Model.ModelFieldMap to function type alias because of circular references Vector(TsQIdent(List(TsIdentLibrarySimple(redux-orm), TsIdentModule(None,List(redux-orm, Model)), TsIdentSimple(ModelFieldMap)))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclInterface(Model))] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclTypeAlias(OrmState) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclTypeAlias(OrmState) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(ORM) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(ORM) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclClass(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclClass(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclTypeAlias(OrmSession) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclTypeAlias(OrmSession) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclInterface(Session) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclInterface(Session) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(DatabaseCreator) / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(DatabaseCreator) / TsMemberCall() / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclFunction(default) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclFunction(default) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibrarySimple(redux-orm), TsIdentModule(None,List(redux-orm, db, Table)), TsIdentSimple(TableOpts))) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsDeclTypeAlias(ExtractModelOption) / TsTypeParam() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclFunction(default) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclFunction(default) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(Session) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(Session) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createDatabase) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createSelector) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createSelector) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createReducer) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createReducer) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(defaultUpdater) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(defaultUpdater) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(ORMSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(ORMSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(ORMReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(ORMReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclClass(ORM) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclClass(ORM) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(OrmState) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(OrmState) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] PreferTypeAlias.scala:73 Simplified to function type alias [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclInterface(ORMReducer))] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(ORMReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(ORMReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(defaultUpdater) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(defaultUpdater) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclFunction(createReducer) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclFunction(createReducer) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] PreferTypeAlias.scala:73 Simplified to function type alias [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclInterface(ORMSelector))] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(ORMSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(ORMSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclFunction(createSelector) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentSimple(any))): None [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclFunction(createSelector) / TsFunSig() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup() / TsTypeLookup() / TsTypeKeyOf())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_GetId) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(IdOrModelLike) / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_TableOpts) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclClass(default) / TsMemberProperty(options) / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassQuerySet) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclClass(default) / TsMemberProperty(querySetClass) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_Row) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/QuerySet) / TsDeclTypeAlias(SortIteratee) / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Anon_From) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/fields) / TsDeclInterface(RelationalFieldOpts) / TsMemberProperty(throughFields) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_TableOpts) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclClass(Model) / TsMemberProperty(options) / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassQuerySet) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclClass(Model) / TsMemberProperty(querySetClass) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(Fn_TableOpts) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclClass(default) / TsMemberProperty(options) / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:41 Extracted anonymous interface TsIdentSimple(TypeofClassQuerySet) [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclClass(default) / TsMemberProperty(querySetClass) / TsTypeObject())] 
[info ] ExpandCallables.scala:48 Expanded createDatabase into 1 methods [id => redux-orm, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclInterface(ORMOpts))] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:42 Processing redux-orm [id => redux-orm, phase => scala.js] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclClass(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclTypeAlias(OrmSession) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: I[keyof I] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclInterface(Session) / TsMemberProperty(sessionBoundModels) / TsTypeRef() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Session) / TsDeclInterface(Session) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: Fields[redux-orm.redux-orm/db/Table.IdAttribute<MClass>] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclInterface(Model) / TsMemberFunction(getId) / TsTypeParam() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: M['getClass'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(ModelClass) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: redux-orm.redux-orm/Model.Ref<M>[K] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(RefPropOrSimple) / TsTypeUnion() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: redux-orm.redux-orm/Model.ModelFields<M>[K] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(SessionBoundModelField) / TsTypeUnion() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: redux-orm.redux-orm/Model.ModelFields<M>[K] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(SessionBoundModelField) / TsTypeUnion() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: redux-orm.redux-orm/Model.ModelClass<M>['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclInterface(ModelType) / TsMemberProperty(modelName) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: redux-orm.redux-orm/Model.ModelClass<M>['fields'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclInterface(ModelType) / TsMemberProperty(fields) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: redux-orm.redux-orm/Model.ModelFields<M>[any] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/Model) / TsDeclTypeAlias(IdType) / TsTypeUnion() / TsTypeUnion() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclFunction(createDatabase) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclFunction(createDatabase) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclFunction(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclNamespace(default) / TsDeclTypeAlias(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db) / TsDeclTypeAlias(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: MClass['fields'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsDeclInterface(ModelTableOpts) / TsMemberProperty(fields) / TsTypeLookup())] 
[info ] ImportTree.scala:389 Dropping TsMemberTypeMapped(NoComments,Default,true,TsIdentSimple(K),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(redux-orm), TsIdentModule(None,List(redux-orm, db, Table)), TsIdentSimple(ArrName))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(MClass))),List()))),Noop,TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(std), TsIdentSimple(ReadonlyArray))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(redux-orm), TsIdentModule(None,List(redux-orm, Model)), TsIdentSimple(IdType))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(std), TsIdentSimple(InstanceType))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(MClass))),List())))))))) [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsDeclInterface(TableState) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:389 Dropping TsMemberTypeMapped(NoComments,Default,true,TsIdentSimple(K),TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(redux-orm), TsIdentModule(None,List(redux-orm, db, Table)), TsIdentSimple(MapName))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(MClass))),List()))),Noop,TsTypeObject(NoComments,List(TsMemberIndex(NoComments,true,Default,IndexingDict(TsIdentSimple(K),TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(string))),List())),false,Some(TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(redux-orm), TsIdentModule(None,List(redux-orm, Model)), TsIdentSimple(Ref))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentLibrarySimple(std), TsIdentSimple(InstanceType))),List(TsTypeRef(NoComments,TsQIdent(List(TsIdentSimple(MClass))),List())))))))))) [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Table) / TsDeclInterface(TableState) / TsMemberTypeMapped())] 
[info ] ImportType.scala:245 Failed type conversion: {[ K in keyof T ]: -? {} extends std.Pick<T, K>? K : never}[keyof T] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/helpers) / TsDeclTypeAlias(OptionalKeys) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: {[ Key in keyof T ]: T[Key] extends ValueType? Key : never}[keyof T] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/helpers) / TsDeclTypeAlias(PickByValue) / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(OrmState) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclClass(ORM) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(Session) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createDatabase) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(defaultUpdater) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(ORMReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclFunction(createReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm) / TsDeclTypeAlias(ORMSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclTypeAlias(OrmState) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclInterface(ORMOpts) / TsMemberFunction(createDatabase) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: I[ModelNames] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(ORM) / TsMemberFunction(register) / TsFunParam() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: I[K] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(ORM) / TsMemberFunction(get) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(ORM) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/ORM) / TsDeclClass(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclFunction(createSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(defaultUpdater) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(ORMReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclFunction(createReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclFunction(createReducer) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/redux) / TsDeclTypeAlias(ORMSelector) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: Tables[K] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(Database) / TsMemberFunction(describe) / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(Database) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(DatabaseCreator) / TsMemberCall() / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(SchemaSpec) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclFunction(createDatabase) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclFunction(default) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] ImportType.scala:245 Failed type conversion: any[keyof any]['modelName'] [id => redux-orm, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(redux-orm/db/Database) / TsDeclInterface(UpdateResult) / TsTypeParam() / TsTypeRef() / TsTypeRef() / TsTypeLookup())] 
[info ] CompleteClass.scala:64 Completed implementations Vector(state, sessionBoundModels, applyUpdate, query) [id => redux-orm, phase => scala.js, this => Name(reduxDashOrmLib) / Name(sessionMod) / Name(default)] 
[debug] PhaseRunner.scala:84 Success [id => redux-orm, phase => scala.js] 
[warn ] Phase3Compile.scala:204 Building redux-orm... [id => redux-orm, phase => build] 
[error] Phase3Compile.scala:230 [E] [E10] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/OneToOne.scala:14:1
[E]       Unmatched closing brace '}' ignored here
[E]       L14: }
[E]            ^
[E] [E9] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/OneToOne.scala:13:2
[E]      expected class or object definition
[E]      L13:  reduxDashOrmLib.TypeofClassModel, fieldName: java.lang.String, orm: ORM[ORMCommonState]): scala.Unit = js.native
[E]            ^
[E] [E8] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ORM.scala:35:1
[E]      Unmatched closing brace '}' ignored here
[E]      L35: }
[E]           ^
[E] [E7] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ORM.scala:23:1
[E]      expected class or object definition
[E]      L23: String): reduxDashOrmLib.TypeofClassModel = js.native
[E]           ^
[E] [E6] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ManyToMany.scala:14:1
[E]      Unmatched closing brace '}' ignored here
[E]      L14: }
[E]           ^
[E] [E5] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ManyToMany.scala:13:1
[E]      expected class or object definition
[E]      L13: eduxDashOrmLib.TypeofClassModel, fieldName: java.lang.String, orm: ORM[ORMCommonState]): scala.Unit = js.native
[E]           ^
[E] [E4] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ForeignKey.scala:14:1
[E]      Unmatched closing brace '}' ignored here
[E]      L14: }
[E]           ^
[E] [E3] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ForeignKey.scala:13:1
[E]      expected class or object definition
[E]      L13: eduxDashOrmLib.TypeofClassModel, fieldName: java.lang.String, orm: ORM[ORMCommonState]): scala.Unit = js.native
[E]           ^
[E] [E2] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/Attribute.scala:16:1
[E]      Unmatched closing brace '}' ignored here
[E]      L16: }
[E]           ^
[E] [E1] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/Attribute.scala:15:1
[E]      expected class or object definition
[E]      L15: sModel, fieldName: java.lang.String, orm: ORM[ORMCommonState]): scala.Unit = js.native
[E]           ^
[E] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ForeignKey.scala: L13 [E3], L14 [E4]
[E] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ORM.scala: L23 [E7], L35 [E8]
[E] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/OneToOne.scala: L13 [E9], L14 [E10]
[E] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/ManyToMany.scala: L13 [E5], L14 [E6]
[E] src/main/scala/typings/reduxDashOrmLib/reduxDashOrmMod/Attribute.scala: L15 [E1], L16 [E2]
[E] Failed to compile 'redux-orm'
 [id => redux-orm, phase => build] 
[error] PhaseRunner.scala:88 Failure, [redux-orm => Compilation failed] [id => redux-orm, phase => build] 
[error] PhaseRunner.scala:88 Failure, [redux-orm => Compilation failed] [id => redux-orm, phase => publish] 
