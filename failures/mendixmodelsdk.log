[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:86 Ignored [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/common.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, common))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, common)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/mendix-model.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, mendix-model))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, mendix-model)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/model-sdk-client.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, model-sdk-client))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, model-sdk-client)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/version.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, version))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, version)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/all-model-classes.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, all-model-classes))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, all-model-classes)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/appservices.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, appservices))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, appservices)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/base-model.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, base-model))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, base-model)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/constants.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, constants))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, constants)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/customwidgets.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, customwidgets))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, customwidgets)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/datasets.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, datasets))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, datasets)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/datatypes.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, datatypes))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, datatypes)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/documenttemplates.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, documenttemplates))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, documenttemplates)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/domainmodels.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, domainmodels))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, domainmodels)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/enumerations.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, enumerations))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, enumerations)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/exportmappings.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, exportmappings))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, exportmappings)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/expressions-types.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, expressions-types))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, expressions-types)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/expressions.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, expressions))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, expressions)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/images.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, images))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, images)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/importmappings.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, importmappings))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, importmappings)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/javaactions.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, javaactions))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, javaactions)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/jsonstructures.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, jsonstructures))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, jsonstructures)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/mappings.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, mappings))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, mappings)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/menus.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, menus))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, menus)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/messagedefinitions.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, messagedefinitions))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, messagedefinitions)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/metamodelversion.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, metamodelversion))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, metamodelversion)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/microflows.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, microflows))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, microflows)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/navigation.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, navigation))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, navigation)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/pages.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, pages))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, pages)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/pluginwidgets.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, pluginwidgets))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, pluginwidgets)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/projects.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, projects))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, projects)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/regularexpressions.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, regularexpressions))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, regularexpressions)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/reports.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, reports))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, reports)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/rest.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, rest))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, rest)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/scheduledevents.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, scheduledevents))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, scheduledevents)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/security.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, security))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, security)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/services.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, services))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, services)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/settings.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, settings))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, settings)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/texts.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, texts))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, texts)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/webservices.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, webservices))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, webservices)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/gen/xmlschemas.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, gen, xmlschemas))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, gen, xmlschemas)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/config.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, config))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, config)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/utils.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, utils))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, utils)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/checks/base-types.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, base-types))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, base-types)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/checks/checks-index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-index))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-index)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/checks/checks-runner.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-runner))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-runner)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/checks/checks-types.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-types))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-types)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/checks/name-util.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, name-util))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, name-util)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/checks/queries.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, queries))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, queries)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/checks/versioning.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, versioning))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, versioning)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/abstract-model.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, abstract-model))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, abstract-model)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/elements.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, elements))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, elements)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/instances.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, instances))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, instances)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/model-server-client.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, model-server-client))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, model-server-client)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/references.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, references))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, references)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/structures.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, structures))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, structures)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/transport-interfaces.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, transport-interfaces))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, transport-interfaces)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/transportation.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, transportation))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, transportation)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/undo-manager.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, undo-manager))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, undo-manager)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/units.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, units))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, units)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/version-checks.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, version-checks))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, version-checks)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/deltas/delta-manager.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, delta-manager))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, delta-manager)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/deltas/delta-processor.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, delta-processor))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, delta-processor)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/deltas/delta-sender.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, delta-sender))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, delta-sender)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/deltas/deltas.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, deltas))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas, deltas)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/deltas/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, deltas)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties/abstract-property.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, abstract-property))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, abstract-property)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties/by-id-reference.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, by-id-reference))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, by-id-reference)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties/by-name-reference.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, by-name-reference))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, by-name-reference)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties/local-by-name-reference.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, local-by-name-reference))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, local-by-name-reference)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties/part.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, part))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, part)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties/primitives.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, primitives))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, primitives)) [id => mendixmodelsdk, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk/dist/sdk/internal/properties/structural.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/mendixmodelsdk),TsIdentLibrarySimple(mendixmodelsdk)),TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, structural))) [id => mendixmodelsdk, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(mendixmodelsdk, dist, sdk, internal, properties, structural)) [id => mendixmodelsdk, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibrarySimple(mendixmodelsdk) [id => mendixmodelsdk, phase => typescript] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(mendixmodelsdk), TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-runner)), TsIdentSimple(runChecksOn)))) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/checks/checks-index) / TsExport() / TsExporteeTree() / TsDeclNamespace(checks) / TsDeclVar(runChecksOn) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(mendixmodelsdk), TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, checks-runner)), TsIdentSimple(makeChecksResolver)))) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/checks/checks-index) / TsExport() / TsExporteeTree() / TsDeclNamespace(checks) / TsDeclVar(makeChecksResolver) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(mendixmodelsdk), TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, queries)), TsIdentSimple(makeQueryResolver)))) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/checks/checks-index) / TsExport() / TsExporteeTree() / TsDeclNamespace(checks) / TsDeclVar(makeQueryResolver) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(mendixmodelsdk), TsIdentModule(None,List(mendixmodelsdk, dist, sdk, checks, name-util)), TsIdentSimple(validateSyntax)))) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/checks/checks-index) / TsExport() / TsExporteeTree() / TsDeclNamespace(checks) / TsDeclVar(validateNameSyntax) / TsTypeQuery())] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/common) / TsDeclNamespace(common) / TsDeclInterface(IVoidCallback))] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/common) / TsDeclNamespace(common) / TsDeclInterface(IErrorCallback))] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/common) / TsDeclNamespace(common) / TsDeclInterface(ICallback))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxBuiltInVariableDeclaration))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxFeatureCall))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxFollowExcluding))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxFollowIncluding))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxIteratorVariableDeclaration))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxLiteralExpression))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxPrimitiveLiteralExpression))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxSingleLiteralExpression))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxThisExpression))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxTypeLiteralExpression))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxUndefinedExpression))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/gen/expressions-types) / TsDeclNamespace(expressionsTypes) / TsDeclInterface(MxUnspecifiedExpression))] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibrarySimple(mendixmodelsdk), TsIdentModule(None,List(mendixmodelsdk, dist, sdk, config)), TsIdentNamespace(configuration), TsIdentSimple(ICreateWorkingCopyParameters))) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/config) / TsDeclNamespace(configuration) / TsDeclTypeAlias(ICreateWorkingCopyFromTeamServerParameters) / TsTypeRef() / TsTypeRef() / TsTypeKeyOf())] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/abstract-model) / TsDeclInterface(ISubResolver))] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/transportation) / TsDeclInterface(IResponseCallback))] 
[info ] PreferTypeAlias.scala:112 Simplified to type alias [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/units) / TsDeclInterface(IStructuralUnit))] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Client) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/model-sdk-client) / TsDeclClass(ModelSdkClientImpl) / TsMemberFunction(constructor) / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Name) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/transport-interfaces) / TsDeclTypeAlias(IEnvironmentStatus) / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_State) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/transport-interfaces) / TsDeclTypeAlias(IEnvironmentStatus) / TsTypeUnion() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/properties/primitives) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/properties/primitives) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/properties) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ToRawChangeValue) [id => mendixmodelsdk, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(mendixmodelsdk/dist/sdk/internal/properties) / TsDeclFunction(sendListChangeDeltas) / TsFunSig() / TsFunParam() / TsTypeIntersect() / TsTypeObject())] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:34 Processing TsIdentLibrarySimple(mendixmodelsdk) [id => mendixmodelsdk, phase => scala.js] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.INanoflow because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(Nanoflow)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.IRuleParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(RuleParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.IRule because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(Rule)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.IServerSideMicroflow because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(ServerSideMicroflow)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.IMicroflowBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(MicroflowBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.IMicroflowParameterBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(MicroflowParameterBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.IMicroflowParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(MicroflowParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.INanoflowParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(NanoflowParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.IMicroflow because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMicroflowsMod) / Name(microflowsNs) / Name(Microflow)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenNavigationMod.navigationNs.INavigationProfile because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenNavigationMod) / Name(navigationNs) / Name(NavigationProfile)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenNavigationMod.navigationNs.INavigationDocument because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenNavigationMod) / Name(navigationNs) / Name(NavigationDocument)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenRegularexpressionsMod.regularexpressionsNs.IRegularExpression because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenRegularexpressionsMod) / Name(regularexpressionsNs) / Name(RegularExpression)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenSecurityMod.securityNs.IModuleSecurity because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenSecurityMod) / Name(securityNs) / Name(ModuleSecurity)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenSecurityMod.securityNs.IModuleRole because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenSecurityMod) / Name(securityNs) / Name(ModuleRole)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenSecurityMod.securityNs.IUserRole because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenSecurityMod) / Name(securityNs) / Name(UserRole)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenSecurityMod.securityNs.IProjectSecurity because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenSecurityMod) / Name(securityNs) / Name(ProjectSecurity)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenImportmappingsMod.importmappingsNs.IImportMapping because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenImportmappingsMod) / Name(importmappingsNs) / Name(ImportMapping)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMessagedefinitionsMod.messagedefinitionsNs.IMessageDefinition because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMessagedefinitionsMod) / Name(messagedefinitionsNs) / Name(MessageDefinition)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMessagedefinitionsMod.messagedefinitionsNs.IMessageDefinitionCollection because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMessagedefinitionsMod) / Name(messagedefinitionsNs) / Name(MessageDefinitionCollection)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMessagedefinitionsMod.messagedefinitionsNs.IEntityMessageDefinition because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMessagedefinitionsMod) / Name(messagedefinitionsNs) / Name(EntityMessageDefinition)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDocumenttemplatesMod.documenttemplatesNs.IDocumentTemplate because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDocumenttemplatesMod) / Name(documenttemplatesNs) / Name(DocumentTemplate)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDocumenttemplatesMod.documenttemplatesNs.IDocumentTemplateParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDocumenttemplatesMod) / Name(documenttemplatesNs) / Name(DocumentTemplateParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenImagesMod.imagesNs.IImage because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenImagesMod) / Name(imagesNs) / Name(Image)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenImagesMod.imagesNs.IImageCollection because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenImagesMod) / Name(imagesNs) / Name(ImageCollection)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenExportmappingsMod.exportmappingsNs.IExportMapping because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenExportmappingsMod) / Name(exportmappingsNs) / Name(ExportMapping)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IStringType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(StringType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IExportMappingParameterType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(ExportMappingParameterType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IEntityTypeParameterType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(EntityTypeParameterType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IIntegerType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(IntegerType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IParameterType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(ParameterType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IEnumerationType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(EnumerationType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.ITypeParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(TypeParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IBasicParameterType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(BasicParameterType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IImportMappingParameterType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(ImportMappingParameterType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IParameterizedEntityType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(ParameterizedEntityType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IJavaActionParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(JavaActionParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IMicroflowParameterType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(MicroflowParameterType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IEntityType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(EntityType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IDateTimeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(DateTimeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IListType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(ListType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IPrimitiveType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(PrimitiveType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IDecimalType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(DecimalType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IBooleanType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(BooleanType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IJavaAction because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(JavaAction)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IConcreteEntityType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(ConcreteEntityType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IFloatType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(FloatType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IMicroflowActionInfo because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(MicroflowActionInfo)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJavaactionsMod.javaactionsNs.IType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJavaactionsMod) / Name(javaactionsNs) / Name(Type)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distSdkInternalElementsMod.IElement because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalElementsMod) / Name(Element)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distSdkInternalElementsMod.IAbstractElement because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalElementsMod) / Name(AbstractElement)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenSettingsMod.settingsNs.IProjectSettings because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenSettingsMod) / Name(settingsNs) / Name(ProjectSettings)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenAppservicesMod.appservicesNs.IConsumedAppService because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenAppservicesMod) / Name(appservicesNs) / Name(ConsumedAppService)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenAppservicesMod.appservicesNs.IAppServiceActionParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenAppservicesMod) / Name(appservicesNs) / Name(AppServiceActionParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenAppservicesMod.appservicesNs.IAppServiceAction because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenAppservicesMod) / Name(appservicesNs) / Name(AppServiceAction)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenWebservicesMod.webservicesNs.IPublishedServiceBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenWebservicesMod) / Name(webservicesNs) / Name(PublishedServiceBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenWebservicesMod.webservicesNs.IPublishedAppService because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenWebservicesMod) / Name(webservicesNs) / Name(PublishedAppService)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenWebservicesMod.webservicesNs.IImportedWebService because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenWebservicesMod) / Name(webservicesNs) / Name(ImportedWebService)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenWebservicesMod.webservicesNs.IPublishedWebService because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenWebservicesMod) / Name(webservicesNs) / Name(PublishedWebService)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenConstantsMod.constantsNs.IConstant because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenConstantsMod) / Name(constantsNs) / Name(Constant)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IStringType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(StringType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IUnknownType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(UnknownType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IIntegerType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(IntegerType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IEnumerationType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(EnumerationType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IEmptyType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(EmptyType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IEntityType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(EntityType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IBinaryType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(BinaryType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IDateTimeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(DateTimeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IListType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(ListType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IDecimalType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(DecimalType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IBooleanType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(BooleanType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IVoidType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(VoidType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IDataType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(DataType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IObjectType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(ObjectType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatatypesMod.datatypesNs.IFloatType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatatypesMod) / Name(datatypesNs) / Name(FloatType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distSdkInternalElementsMod.IAbstractElement because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalUnitsMod) / Name(IModelUnit)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distSdkInternalUnitsMod.IStructuralUnit because Already inherited) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalUnitsMod) / Name(StructuralUnit)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distSdkInternalUnitsMod.IAbstractUnit because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalUnitsMod) / Name(AbstractUnit)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distSdkInternalUnitsMod.IModelUnit because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalUnitsMod) / Name(ModelUnit)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(FolderBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolder because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded, documents, folders)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(Folder)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IModuleDocument because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(ModuleDocument)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IProject because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(Project)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IProjectConversion because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(ProjectConversion)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IProjectDocument because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(ProjectDocument)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IModule because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded, documents, folders)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(Module)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenProjectsMod.projectsNs.IDocument because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenProjectsMod) / Name(projectsNs) / Name(Document)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenTextsMod.textsNs.ISystemTextCollection because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenTextsMod) / Name(textsNs) / Name(SystemTextCollection)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distMendixDashModelMod.IModel because Would inherit conflicting mutable fields List(mxVersionForModel, id, workingCopy, metaModelVersion)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distMendixDashModelMod) / Name(Model)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenBaseDashModelMod.IBaseModel because Would inherit conflicting mutable fields List(mxVersionForModel, id, workingCopy, metaModelVersion)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenBaseDashModelMod) / Name(BaseModel)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMenusMod.menusNs.IMenuDocument because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMenusMod) / Name(menusNs) / Name(MenuDocument)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenMappingsMod.mappingsNs.IMappingDocument because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenMappingsMod) / Name(mappingsNs) / Name(MappingDocument)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenJsonstructuresMod.jsonstructuresNs.IJsonStructure because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenJsonstructuresMod) / Name(jsonstructuresNs) / Name(JsonStructure)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenConstantsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenCustomwidgetsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenDatasetsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenDatatypesMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenDocumenttemplatesMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenDomainmodelsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenEnumerationsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenExportmappingsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenExpressionsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenImagesMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenImportmappingsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenJavaactionsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenJsonstructuresMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenMappingsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenMenusMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenMessagedefinitionsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenMicroflowsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenNavigationMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenPluginwidgetsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenProjectsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenRegularexpressionsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenReportsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenRestMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenScheduledeventsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenSecurityMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenServicesMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenSettingsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenTextsMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenWebservicesMod.StructureVersionInfo because Inheritance from two classes, mendixmodelsdkLib.distGenXmlschemasMod.StructureVersionInfo because Inheritance from two classes) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenAllDashModelDashClassesMod) / Name(StructureVersionInfo)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenXmlschemasMod.xmlschemasNs.IXmlSchema because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenXmlschemasMod) / Name(xmlschemasNs) / Name(XmlSchema)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenXmlschemasMod.xmlschemasNs.IMxSchema because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenXmlschemasMod) / Name(xmlschemasNs) / Name(MxSchema)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenRestMod.restNs.IPublishedRestService because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenRestMod) / Name(restNs) / Name(PublishedRestService)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenRestMod.restNs.IConsumedODataService because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenRestMod) / Name(restNs) / Name(ConsumedODataService)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenRestMod.restNs.IPublishedODataService because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenRestMod) / Name(restNs) / Name(PublishedODataService)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.ILayout because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(Layout)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.IBuildingBlock because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(BuildingBlock)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.ISnippet because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(Snippet)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.ILayoutCall because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(LayoutCall)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.IPageTemplate because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(PageTemplate)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.IPage because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(Page)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.IFormBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(FormBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.ILayoutParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(LayoutParameter)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenPagesMod.pagesNs.ITemplateFormBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenPagesMod) / Name(pagesNs) / Name(TemplateFormBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IStringAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(StringAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IDecimalAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(DecimalAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IStoredValue because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(StoredValue)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.INumericAttributeTypeBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(NumericAttributeTypeBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IBinaryAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(BinaryAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IValueType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(ValueType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IHashedStringAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(HashedStringAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IEntity because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(Entity)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.ICalculatedValue because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(CalculatedValue)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IAutoNumberAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(AutoNumberAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IGeneralizationBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(GeneralizationBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.INoGeneralization because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(NoGeneralization)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IAssociationBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(AssociationBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IFloatAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(FloatAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IBooleanAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(BooleanAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IDateTimeAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(DateTimeAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IAssociation because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(Association)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.ICurrencyAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(CurrencyAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.ILongAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(LongAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IIntegerAttributeTypeBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(IntegerAttributeTypeBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.ICrossAssociation because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(CrossAssociation)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IIntegerAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(IntegerAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IFloatAttributeTypeBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(FloatAttributeTypeBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IGeneralization because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(Generalization)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IAttribute because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(Attribute)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IEnumerationAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(EnumerationAttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IDecimalAttributeTypeBase because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(DecimalAttributeTypeBase)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IAttributeType because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(AttributeType)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDomainmodelsMod.domainmodelsNs.IDomainModel because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDomainmodelsMod) / Name(domainmodelsNs) / Name(DomainModel)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenEnumerationsMod.enumerationsNs.IEnumerationValue because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenEnumerationsMod) / Name(enumerationsNs) / Name(EnumerationValue)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenEnumerationsMod.enumerationsNs.IEnumeration because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenEnumerationsMod) / Name(enumerationsNs) / Name(Enumeration)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenScheduledeventsMod.scheduledeventsNs.IScheduledEvent because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenScheduledeventsMod) / Name(scheduledeventsNs) / Name(ScheduledEvent)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatasetsMod.datasetsNs.IDataSet because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatasetsMod) / Name(datasetsNs) / Name(DataSet)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(mendixmodelsdkLib.distGenDatasetsMod.datasetsNs.IDataSetParameter because Would inherit conflicting mutable fields List(model, structureTypeName, id, unit, isLoaded)) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distGenDatasetsMod) / Name(datasetsNs) / Name(DataSetParameter)] 
[info ] CompleteClass.scala:60 Completed implementations Vector(model, container, structureTypeName, id, unit, isLoaded, traversePublicParts, loadedProperties, traverseFind, allProperties, publicProperties, traverse, toJSON) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalStructuresMod) / Name(Structure)] 
[info ] CompleteClass.scala:60 Completed implementations Vector(request, retryableRequest, requestMultipartBinaryFileUpload, requestFileDownload) [id => mendixmodelsdk, phase => scala.js, this => Name(mendixmodelsdkLib) / Name(distSdkInternalTransportationMod) / Name(RestTransportation)] 
[debug] PhaseRunner.scala:78 Success [id => mendixmodelsdk, phase => scala.js] 
[warn ] PhaseRunner.scala:64 Failed because of, [node => Compilation failed] [id => mendixmodelsdk, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [node => Compilation failed] [id => mendixmodelsdk, phase => build] 
