[debug] PhaseRunner.scala:81 Success [id => globalize-compiler, phase => typescript] 
[info ] Phase1ReadTypescript.scala:153 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/globalize-compiler/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/globalize-compiler),TsIdentLibrarySimple(globalize-compiler)),TsIdentModule(None,List(globalize-compiler))) [id => globalize-compiler, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(globalize-compiler)) [id => globalize-compiler, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:191 Processing TsIdentLibrarySimple(globalize-compiler) [id => globalize-compiler, phase => typescript] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => globalize-compiler, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(globalize-compiler) / TsDeclInterface(FormatterOrParserFunction))] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => globalize-compiler, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(globalize-compiler) / TsDeclInterface(ExtractFunction))] 
[info ] ExpandCallables.scala:57 Expanded extracts into 1 methods [id => globalize-compiler, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(globalize-compiler) / TsDeclInterface(CompileExtractsAttributes))] 
[debug] PhaseRunner.scala:81 Success [id => globalize-compiler, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:36 Processing globalize-compiler [id => globalize-compiler, phase => scala.js] 
[debug] PhaseRunner.scala:81 Success [id => globalize-compiler, phase => scala.js] 
[warn ] PhaseRunner.scala:67 Failed because of, [globalize => Compilation failed] [id => globalize-compiler, phase => build] 
[debug] PhaseRunner.scala:85 Failure, [globalize => Compilation failed] [id => globalize-compiler, phase => build] 
[debug] PhaseRunner.scala:85 Failure, [globalize => Compilation failed] [id => globalize-compiler, phase => publish] 
