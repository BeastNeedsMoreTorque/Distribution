[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/MergeStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, MergeStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, MergeStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/version.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, version))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, version)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/classNames/AnimationClassNames.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, classNames, AnimationClassNames))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, classNames, AnimationClassNames)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/classNames/ColorClassNames.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, classNames, ColorClassNames))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, classNames, ColorClassNames)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/classNames/FontClassNames.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, classNames, FontClassNames))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, classNames, FontClassNames)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/classNames/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, classNames))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, classNames)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/IAnimationStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/IFontStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/IPalette.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IPalette))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IPalette)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/ISemanticColors.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISemanticColors))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISemanticColors)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/ISemanticTextColors.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISemanticTextColors))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISemanticTextColors)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/ISpacing.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISpacing))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISpacing)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/ITheme.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ITheme))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ITheme)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/ITypography.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ITypography))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ITypography)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/interfaces/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, interfaces))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, interfaces)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/AnimationStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, AnimationStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, AnimationStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/CommonStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, CommonStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, CommonStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/DefaultFontStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, DefaultFontStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, DefaultFontStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/DefaultPalette.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, DefaultPalette))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, DefaultPalette)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/GeneralStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, GeneralStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, GeneralStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/PulsingBeaconAnimationStyles.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, PulsingBeaconAnimationStyles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, PulsingBeaconAnimationStyles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/fonts.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, fonts))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, fonts)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/getFadedOverflowStyle.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, getFadedOverflowStyle))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, getFadedOverflowStyle)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/getFocusStyle.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, getFocusStyle))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, getFocusStyle)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/getGlobalClassNames.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, getGlobalClassNames))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, getGlobalClassNames)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/hiddenContentStyle.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, hiddenContentStyle))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, hiddenContentStyle)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/scheme.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, scheme))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, scheme)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/theme.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, theme))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, theme)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/styles/zIndexes.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, styles, zIndexes))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, styles, zIndexes)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/utilities/buildClassMap.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, utilities, buildClassMap))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, utilities, buildClassMap)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/utilities/getIconClassName.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, utilities, getIconClassName))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, utilities, getIconClassName)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/utilities/icons.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, utilities, icons))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, utilities, icons)) [id => @uifabric/styling, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling/lib/utilities/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/@uifabric/styling),TsIdentLibraryScoped(uifabric,Some(styling))),TsIdentModule(Some(uifabric),List(styling, lib, utilities))) [id => @uifabric/styling, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(Some(uifabric),List(styling, lib, utilities)) [id => @uifabric/styling, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibraryScoped(uifabric,Some(styling)) [id => @uifabric/styling, phase => typescript] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IAnimationStyles))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IAnimationStyles),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles)), TsIdentSimple(IAnimationStyles))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IAnimationStyles)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling) / TsDeclVar(AnimationClassNames) / TsTypeObject() / TsMemberTypeMapped() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IFontStyles))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IFontStyles),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles)), TsIdentSimple(IFontStyles))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IFontStyles)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling) / TsDeclVar(FontClassNames) / TsTypeObject() / TsMemberTypeMapped() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IPalette))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IPalette),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IPalette)), TsIdentSimple(IPalette))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IPalette)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling) / TsDeclFunction(getFadedOverflowStyle) / TsFunSig() / TsFunParam() / TsTypeKeyOf() / TsTypeUnion() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IAnimationStyles))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IAnimationStyles),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles)), TsIdentSimple(IAnimationStyles))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IAnimationStyles)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames/AnimationClassNames) / TsDeclVar(AnimationClassNames) / TsTypeObject() / TsMemberTypeMapped() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IFontStyles))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IFontStyles),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles)), TsIdentSimple(IFontStyles))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IFontStyles)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames/FontClassNames) / TsDeclVar(FontClassNames) / TsTypeObject() / TsMemberTypeMapped() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IAnimationStyles))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IAnimationStyles),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles)), TsIdentSimple(IAnimationStyles))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IAnimationStyles)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames) / TsDeclVar(AnimationClassNames) / TsTypeObject() / TsMemberTypeMapped() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IFontStyles))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IFontStyles),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles)), TsIdentSimple(IFontStyles))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IFontStyles)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames) / TsDeclVar(FontClassNames) / TsTypeObject() / TsMemberTypeMapped() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISemanticTextColors)), TsIdentSimple(ISemanticTextColors))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/interfaces/ITypography) / TsDeclInterface(IFontVariant) / TsMemberProperty(color) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISemanticTextColors)), TsIdentSimple(ISemanticTextColors))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/interfaces/ITypography) / TsDeclInterface(IFontVariant) / TsMemberProperty(hoverColor) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ISemanticTextColors)), TsIdentSimple(ISemanticTextColors))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/interfaces/ITypography) / TsDeclInterface(IFontVariant) / TsMemberProperty(disabledColor) / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:11 Expanded keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, ITypography)), TsIdentSimple(ITypography))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/interfaces/ITypography) / TsDeclTypeAlias(IPartialTypography) / TsTypeObject() / TsMemberTypeMapped() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IPalette))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IPalette),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IPalette)), TsIdentSimple(IPalette))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IPalette)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/styles/getFadedOverflowStyle) / TsDeclFunction(getFadedOverflowStyle) / TsFunSig() / TsFunParam() / TsTypeKeyOf() / TsTypeUnion() / TsTypeKeyOf())] 
[info ] UnionTypesFromKeyOf.scala:23 Could not expand keyof TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IPalette))): Some(TsDeclTypeAlias(Comments(1),true,TsIdentSimple(IPalette),List(),TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IPalette)), TsIdentSimple(IPalette))),List()),HasPath(TsIdentLibraryScoped(uifabric,Some(styling)),TsQIdent(List(TsIdentModule(Some(uifabric),List(styling, lib, interfaces)), TsIdentSimple(IPalette)))))) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/styles) / TsDeclFunction(getFadedOverflowStyle) / TsFunSig() / TsFunParam() / TsTypeKeyOf() / TsTypeUnion() / TsTypeKeyOf())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_CreateDefaultAnimation) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/styles) / TsDeclVar(PulsingBeaconAnimationStyles) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_CreateDefaultAnimation) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/styles/PulsingBeaconAnimationStyles) / TsDeclVar(PulsingBeaconAnimationStyles) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_CreateDefaultAnimation) [id => @uifabric/styling, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling) / TsDeclVar(PulsingBeaconAnimationStyles) / TsTypeObject())] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:34 Processing TsIdentLibraryScoped(uifabric,Some(styling)) [id => @uifabric/styling, phase => scala.js] 
[info ] ImportTree.scala:398 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(key),TsTypeKeyOf(TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles)), TsIdentSimple(IFontStyles))),List())),Optionalize,TsTypeRef(TsQIdent(List(TsIdentSimple(string))),List())) [id => @uifabric/styling, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames) / TsDeclVar(FontClassNames) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:398 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(key),TsTypeKeyOf(TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles)), TsIdentSimple(IAnimationStyles))),List())),Optionalize,TsTypeRef(TsQIdent(List(TsIdentSimple(string))),List())) [id => @uifabric/styling, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames) / TsDeclVar(AnimationClassNames) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:398 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(key),TsTypeKeyOf(TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles)), TsIdentSimple(IFontStyles))),List())),Optionalize,TsTypeRef(TsQIdent(List(TsIdentSimple(string))),List())) [id => @uifabric/styling, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames/FontClassNames) / TsDeclVar(FontClassNames) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:398 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(key),TsTypeKeyOf(TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles)), TsIdentSimple(IAnimationStyles))),List())),Optionalize,TsTypeRef(TsQIdent(List(TsIdentSimple(string))),List())) [id => @uifabric/styling, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling) / TsDeclVar(AnimationClassNames) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:398 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(key),TsTypeKeyOf(TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IFontStyles)), TsIdentSimple(IFontStyles))),List())),Optionalize,TsTypeRef(TsQIdent(List(TsIdentSimple(string))),List())) [id => @uifabric/styling, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling) / TsDeclVar(FontClassNames) / TsMemberTypeMapped())] 
[info ] ImportTree.scala:398 Dropping TsMemberTypeMapped(NoComments,Default,false,TsIdentSimple(key),TsTypeKeyOf(TsTypeRef(TsQIdent(List(TsIdentLibraryScoped(uifabric,Some(styling)), TsIdentModule(Some(uifabric),List(styling, lib, interfaces, IAnimationStyles)), TsIdentSimple(IAnimationStyles))),List())),Optionalize,TsTypeRef(TsQIdent(List(TsIdentSimple(string))),List())) [id => @uifabric/styling, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(@uifabric/styling/lib/classNames/AnimationClassNames) / TsDeclVar(AnimationClassNames) / TsMemberTypeMapped())] 
[debug] PhaseRunner.scala:78 Success [id => @uifabric/styling, phase => scala.js] 
[warn ] PhaseRunner.scala:64 Failed because of, [node => Compilation failed] [id => @uifabric/styling, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [node => Compilation failed] [id => @uifabric/styling, phase => build] 
