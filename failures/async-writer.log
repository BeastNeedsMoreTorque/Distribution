[info ] InferredDependency.scala:20 Inferred dependencies Set(TsIdentLibrarySimple(node)) for TsIdentLibrarySimple(async-writer) [id => async-writer, phase => typescript, file => ../types/async-writer/index.d.ts] 
[debug] PhaseRunner.scala:78 Success [id => async-writer, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/async-writer/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/async-writer),TsIdentLibrarySimple(async-writer)),TsIdentModule(None,List(async-writer))) [id => async-writer, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(async-writer)) [id => async-writer, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibrarySimple(async-writer) [id => async-writer, phase => typescript] 
[info ] PreferTypeAlias.scala:118 Simplified to function type alias [id => async-writer, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(async-writer) / TsDeclNamespace(async_writer) / TsDeclInterface(EventFunction))] 
[debug] PhaseRunner.scala:78 Success [id => async-writer, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:34 Processing TsIdentLibrarySimple(async-writer) [id => async-writer, phase => scala.js] 
[info ] CompleteClass.scala:60 Completed implementations Vector(write, flush, once, on, end, clear) [id => async-writer, phase => scala.js, this => Name(asyncDashWriterLib) / Name(asyncDashWriterMod) / Name(BufferedWriter)] 
[info ] CompleteClass.scala:60 Completed implementations Vector(end, write) [id => async-writer, phase => scala.js, this => Name(asyncDashWriterLib) / Name(asyncDashWriterMod) / Name(StringWriter)] 
[debug] PhaseRunner.scala:78 Success [id => async-writer, phase => scala.js] 
[warn ] PhaseRunner.scala:64 Failed because of, [node => Compilation failed] [id => async-writer, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [node => Compilation failed] [id => async-writer, phase => build] 
