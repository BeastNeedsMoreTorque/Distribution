[debug] PhaseRunner.scala:82 Success [id => typescript-tuple, phase => typescript] 
[debug] PhaseRunner.scala:82 Success [id => typescript-tuple, phase => typescript] 
[debug] PhaseRunner.scala:82 Success [id => typescript-tuple, phase => typescript] 
[info ] Phase1ReadTypescript.scala:160 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/typescript-tuple/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/typescript-tuple),TsIdentLibrarySimple(typescript-tuple)),TsIdentModule(None,List(typescript-tuple))) [id => typescript-tuple, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(typescript-tuple)) [id => typescript-tuple, phase => typescript] 
[info ] Phase1ReadTypescript.scala:160 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/typescript-tuple/lib/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/typescript-tuple),TsIdentLibrarySimple(typescript-tuple)),TsIdentModule(None,List(typescript-tuple, lib))) [id => typescript-tuple, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(typescript-tuple, lib)) [id => typescript-tuple, phase => typescript] 
[info ] Phase1ReadTypescript.scala:160 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/typescript-tuple/lib/utils.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/typescript-tuple),TsIdentLibrarySimple(typescript-tuple)),TsIdentModule(None,List(typescript-tuple, lib, utils))) [id => typescript-tuple, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(typescript-tuple, lib, utils)) [id => typescript-tuple, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:200 Processing TsIdentLibrarySimple(typescript-tuple) [id => typescript-tuple, phase => typescript] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.IsFinite<Rest, Finite, Infinite> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(IsFinite) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils._SplitInfiniteTuple<Rest, typescript-tuple.typescript-tuple/lib/utils.Prepend<Holder, First>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(_SplitInfiniteTuple) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(unmatched) / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.Last<Next> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(Last) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(multi) / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.FirstIndexEqual<Type, Rest, NotFound, typescript-tuple.typescript-tuple/lib/utils.Prepend<Count, any>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(FirstIndexEqual) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.FirstIndexEqual<Type, Finite, Infinite extends Array<Type> ? Array<Type> extends Infinite ? Finite['length'] : NotFound : NotFound> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(FirstIndexEqual) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(infinite) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.FirstIndexSubset<Type, Rest, NotFound, typescript-tuple.typescript-tuple/lib/utils.Prepend<Count, any>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(FirstIndexSubset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.FirstIndexSubset<Type, Finite, Infinite extends Array<Type> ? Finite['length'] : NotFound> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(FirstIndexSubset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(infinite) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.FirstIndexSuperset<Type, Rest, NotFound, typescript-tuple.typescript-tuple/lib/utils.Prepend<Count, any>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(FirstIndexSuperset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.FirstIndexSuperset<Type, Finite, Extends<Array<Type>, Infinite> extends true ? Finite['length'] : NotFound> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(FirstIndexSuperset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(infinite) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils._AllIndexesEqual<Type, Rest, Equal<First, Type> extends true ? typescript-tuple.typescript-tuple/lib/utils.Prepend<Holder, Count['length']> : Holder, typescript-tuple.typescript-tuple/lib/utils.Prepend<Count, any>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(_AllIndexesEqual) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils._AllIndexesEqual<Type, Finite, Equal<Last, Type> extends true ? std.Array<Finite['length']> : []> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(_AllIndexesEqual) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(infinite) / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils._AllIndexesSubset<Type, Rest, Extends<First, Type> extends true ? typescript-tuple.typescript-tuple/lib/utils.Prepend<Holder, Count['length']> : Holder, typescript-tuple.typescript-tuple/lib/utils.Prepend<Count, any>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(_AllIndexesSubset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils._AllIndexesSubset<Type, Finite, Extends<Last, Type> extends true ? std.Array<Finite['length']> : []> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(_AllIndexesSubset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(infinite) / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils._AllIndexesSuperset<Type, Rest, Type extends First ? typescript-tuple.typescript-tuple/lib/utils.Prepend<Holder, Count['length']> : Holder, typescript-tuple.typescript-tuple/lib/utils.Prepend<Count, any>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(_AllIndexesSuperset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils._AllIndexesSuperset<Type, Finite, Type extends Last ? std.Array<Finite['length']> : []> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(_AllIndexesSuperset) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(infinite) / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.Reverse<Next, typescript-tuple.typescript-tuple/lib/utils.Prepend<Prefix, First>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(Reverse) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.Concat<typescript-tuple.typescript-tuple/lib/utils.Reverse<ReversedLeftRest>, typescript-tuple.typescript-tuple/lib/utils.Prepend<Right, LeftLast>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(Concat) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(multiLeft) / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.Repeat<Type, Count, typescript-tuple.typescript-tuple/lib/utils.Prepend<Holder, Type>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(Repeat) / TsTypeConditional() / TsTypeConditional() / TsTypeLookup() / TsTypeObject() / TsMemberProperty(unfit) / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.Repeat<Type, Holder['length']> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(Repeat) / TsTypeConditional() / TsTypeConditional() / TsTypeLookup() / TsTypeObject() / TsMemberProperty(union) / TsTypeConditional() / TsTypeConditional() / TsTypeUnion() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.Repeat<Type, Rest> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(Repeat) / TsTypeConditional() / TsTypeConditional() / TsTypeLookup() / TsTypeObject() / TsMemberProperty(union) / TsTypeConditional() / TsTypeConditional() / TsTypeUnion() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.ConcatMultiple<typescript-tuple.typescript-tuple/lib/utils.Reverse<ReversedRest>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(ConcatMultiple) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeRef() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.SingleTupleSet<typescript-tuple.typescript-tuple/lib/utils.Reverse<ReversedRest>, typescript-tuple.typescript-tuple/lib/utils.Prepend<Holder, [Last]>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(SingleTupleSet) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.SingleTupleSet<Finite, std.Array<[RepeatedElement]>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(SingleTupleSet) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(infinite) / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.FillTuple<Rest, Replacement, typescript-tuple.typescript-tuple/lib/utils.Prepend<Holder, Replacement>> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(FillTuple) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.CompareLength<LeftRest, RightRest> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(CompareLength) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(unfit) / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.ShortestTuple<Tail, typescript-tuple.typescript-tuple/lib/utils.SortTwoTuple<Shortest, Head>[0]> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(ShortestTuple) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[warn ] SimplifyRecursiveTypeAlias.scala:14 Simplified recursive type alias typescript-tuple.typescript-tuple/lib/utils.LongestTuple<Tail, typescript-tuple.typescript-tuple/lib/utils.SortTwoTuple<Longest, Head>[1]> [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(LongestTuple) / TsTypeLookup() / TsTypeObject() / TsMemberProperty(nonEmpty) / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeConditional() / TsTypeRef())] 
[info ] ExtractInterfaces.scala:37 Extracted anonymous interface TsIdentSimple(Anon_Equal) [id => typescript-tuple, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(SortTwoTuple) / TsTypeLookup() / TsTypeObject())] 
[debug] PhaseRunner.scala:82 Success [id => typescript-tuple, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:40 Processing typescript-tuple [id => typescript-tuple, phase => scala.js] 
[info ] ImportType.scala:199 Failed type conversion: Tuple[0] [id => typescript-tuple, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib) / TsDeclTypeAlias(First) / TsTypeLookup())] 
[info ] ImportType.scala:199 Failed type conversion: Tuple[0] [id => typescript-tuple, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(First) / TsTypeUnion() / TsTypeLookup())] 
[info ] ImportType.scala:199 Failed type conversion: typescript-tuple.Anon_Equal<WhenEqual, Left, Right>[typescript-tuple.typescript-tuple/lib/utils.CompareLength<Left, Right>] [id => typescript-tuple, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(SortTwoTuple) / TsTypeLookup())] 
[info ] ImportType.scala:199 Failed type conversion: typescript-tuple.typescript-tuple/lib/utils.SortTwoTuple<Shortest, any, [Shortest, any]>[0] [id => typescript-tuple, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(ShortestTuple) / TsTypeUnion() / TsTypeLookup())] 
[info ] ImportType.scala:199 Failed type conversion: typescript-tuple.typescript-tuple/lib/utils.SortTwoTuple<Longest, any, [Longest, any]>[1] [id => typescript-tuple, phase => scala.js, scope => TreeScope(TsParsedFile() / TsDeclModule(typescript-tuple/lib/utils) / TsDeclTypeAlias(LongestTuple) / TsTypeUnion() / TsTypeLookup())] 
[debug] PhaseRunner.scala:82 Success [id => typescript-tuple, phase => scala.js] 
[error] package.scala:33 class Array takes type parameters,   type _IndexesNormalize[Indexes /* <: js.Array[_] */] = IsFinite[Indexes, Reverse[Indexes, js.Array], Concat[Reverse[js.Any, js.Array], js.Any]] [id => typescript-tuple, phase => build] 
[error] package.scala:33 class Array takes type parameters,   type _IndexesNormalize[Indexes /* <: js.Array[_] */] = IsFinite[Indexes, Reverse[Indexes, js.Array], Concat[Reverse[js.Any, js.Array], js.Any]] [id => typescript-tuple, phase => build] 
[error] package.scala:10 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesEqual[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:10 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesEqual[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:10 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesEqual[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:10 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesEqual[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:13 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSubset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:13 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSubset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:13 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSubset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:13 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSubset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:16 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSuperset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:16 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSuperset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:16 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSuperset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:16 class Array takes type parameters,     typescriptDashTupleLib.libUtilsMod._AllIndexesSuperset[Type, Tuple, js.Array, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:35 class Array takes type parameters,   type Reverse[Tuple /* <: js.Array[_] */] = typescriptDashTupleLib.libUtilsMod.Reverse[Tuple, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:11 class Array takes type parameters,   type ConcatMultiple[TupleSet /* <: js.Array[js.Array[_]] */] = js.Array [id => typescript-tuple, phase => build] 
[error] package.scala:22 class Array takes type parameters,   type FillTuple[Tuple /* <: js.Array[_] */, Replacement] = typescriptDashTupleLib.libUtilsMod.FillTuple[Tuple, Replacement, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:22 class Array takes type parameters,   type FillTuple[Tuple /* <: js.Array[_] */, Replacement] = typescriptDashTupleLib.libUtilsMod.FillTuple[Tuple, Replacement, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:24 class Array takes type parameters,   type FirstIndexEqual[Type, Tuple /* <: js.Array[_] */, NotFound] = typescriptDashTupleLib.libUtilsMod.FirstIndexEqual[Type, Tuple, NotFound, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:24 class Array takes type parameters,   type FirstIndexEqual[Type, Tuple /* <: js.Array[_] */, NotFound] = typescriptDashTupleLib.libUtilsMod.FirstIndexEqual[Type, Tuple, NotFound, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:25 class Array takes type parameters,   type FirstIndexSubset[Type, Tuple /* <: js.Array[_] */, NotFound] = typescriptDashTupleLib.libUtilsMod.FirstIndexSubset[Type, Tuple, NotFound, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:25 class Array takes type parameters,   type FirstIndexSubset[Type, Tuple /* <: js.Array[_] */, NotFound] = typescriptDashTupleLib.libUtilsMod.FirstIndexSubset[Type, Tuple, NotFound, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:26 class Array takes type parameters,   type FirstIndexSuperset[Type, Tuple /* <: js.Array[_] */, NotFound] = typescriptDashTupleLib.libUtilsMod.FirstIndexSuperset[Type, Tuple, NotFound, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:26 class Array takes type parameters,   type FirstIndexSuperset[Type, Tuple /* <: js.Array[_] */, NotFound] = typescriptDashTupleLib.libUtilsMod.FirstIndexSuperset[Type, Tuple, NotFound, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:19 class Array takes type parameters,   type LastIndexEqual[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesEqual[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:19 class Array takes type parameters,   type LastIndexEqual[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesEqual[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:20 class Array takes type parameters,   type LastIndexSubset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSubset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:20 class Array takes type parameters,   type LastIndexSubset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSubset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:21 class Array takes type parameters,   type LastIndexSuperset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSuperset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:21 class Array takes type parameters,   type LastIndexSuperset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSuperset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:32 class Array takes type parameters,   type LongestTuple[TupleSet /* <: js.Array[js.Array[_]] */] = typescriptDashTupleLib.libUtilsMod.LongestTuple[TupleSet, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:32 class Array takes type parameters,   type LongestTuple[TupleSet /* <: js.Array[js.Array[_]] */] = typescriptDashTupleLib.libUtilsMod.LongestTuple[TupleSet, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:34 class Array takes type parameters,   type Repeat[Type, Count /* <: scala.Double */] = typescriptDashTupleLib.libUtilsMod.Repeat[Type, Count, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:34 class Array takes type parameters,   type Repeat[Type, Count /* <: scala.Double */] = typescriptDashTupleLib.libUtilsMod.Repeat[Type, Count, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:35 class Array takes type parameters,   type Reverse[Tuple /* <: js.Array[_] */] = typescriptDashTupleLib.libUtilsMod.Reverse[Tuple, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:37 class Array takes type parameters,   type SingleTupleSet[Types /* <: js.Array[_] */] = typescriptDashTupleLib.libUtilsMod.SingleTupleSet[Types, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:37 class Array takes type parameters,   type SingleTupleSet[Types /* <: js.Array[_] */] = typescriptDashTupleLib.libUtilsMod.SingleTupleSet[Types, js.Array] [id => typescript-tuple, phase => build] 
[error] package.scala:29 class Array takes type parameters,   type SplitInfiniteTuple[Tuple /* <: js.Array[_] */] = js.Tuple2[Reverse[js.Any, js.Array], js.Any] [id => typescript-tuple, phase => build] 
[error] package.scala:11 class Array takes type parameters,   type ConcatMultiple[TupleSet /* <: js.Array[js.Array[_]] */] = js.Array [id => typescript-tuple, phase => build] 
[error] package.scala:19 class Array takes type parameters,   type LastIndexEqual[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesEqual[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:19 class Array takes type parameters,   type LastIndexEqual[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesEqual[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:20 class Array takes type parameters,   type LastIndexSubset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSubset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:20 class Array takes type parameters,   type LastIndexSubset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSubset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:21 class Array takes type parameters,   type LastIndexSuperset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSuperset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:21 class Array takes type parameters,   type LastIndexSuperset[Type, Tuple /* <: js.Array[_] */, NotFound] = _LastIndexFirst[_AllIndexesSuperset[Type, Tuple, js.Array, js.Array], NotFound] [id => typescript-tuple, phase => build] 
[error] package.scala:29 class Array takes type parameters,   type SplitInfiniteTuple[Tuple /* <: js.Array[_] */] = js.Tuple2[Reverse[js.Any, js.Array], js.Any] [id => typescript-tuple, phase => build] 
[error] package.scala:33 class Array takes type parameters,   type _IndexesNormalize[Indexes /* <: js.Array[_] */] = IsFinite[Indexes, Reverse[Indexes, js.Array], Concat[Reverse[js.Any, js.Array], js.Any]] [id => typescript-tuple, phase => build] 
[error] package.scala:33 class Array takes type parameters,   type _IndexesNormalize[Indexes /* <: js.Array[_] */] = IsFinite[Indexes, Reverse[Indexes, js.Array], Concat[Reverse[js.Any, js.Array], js.Any]] [id => typescript-tuple, phase => build] 
[error] PhaseRunner.scala:86 Failure, [typescript-tuple => Compilation failed] [id => typescript-tuple, phase => build] 
[error] PhaseRunner.scala:86 Failure, [typescript-tuple => Compilation failed] [id => typescript-tuple, phase => publish] 
