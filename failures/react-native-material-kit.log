[info ] InferredDependency.scala:20 Inferred dependencies Set(TsIdentLibrarySimple(react)) for TsIdentLibrarySimple(react-native-material-kit) [id => react-native-material-kit, phase => typescript, file => ../types/react-native-material-kit/index.d.ts] 
[debug] PhaseRunner.scala:78 Success [id => react-native-material-kit, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/react-native-material-kit/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/react-native-material-kit),TsIdentLibrarySimple(react-native-material-kit)),TsIdentModule(None,List(react-native-material-kit))) [id => react-native-material-kit, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(react-native-material-kit)) [id => react-native-material-kit, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibrarySimple(react-native-material-kit) [id => react-native-material-kit, phase => typescript] 
[debug] DefaultedTParams.scala:29 Defaulting type parameter TsIdentSimple(SS) at TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclClass(MKComponent) / TsTypeRef()) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclClass(MKComponent) / TsTypeRef())] 
[debug] DefaultedTParams.scala:29 Defaulting type parameter TsIdentSimple(S) at TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclNamespace(MKProgress) / TsDeclClass(Indeterminate) / TsTypeRef()) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclNamespace(MKProgress) / TsDeclClass(Indeterminate) / TsTypeRef())] 
[debug] DefaultedTParams.scala:29 Defaulting type parameter TsIdentSimple(SS) at TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclNamespace(MKProgress) / TsDeclClass(Indeterminate) / TsTypeRef()) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclNamespace(MKProgress) / TsDeclClass(Indeterminate) / TsTypeRef())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Max) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclInterface(MKRangeSliderProperties) / TsMemberProperty(onChange) / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Max) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclInterface(MKRangeSliderProperties) / TsMemberProperty(onConfirm) / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Yellow) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclInterface(MKColorStatic) / TsMemberProperty(default) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Checked) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclInterface(MKCheckboxProperties) / TsMemberProperty(onCheckedChange) / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Height) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclInterface(CardStyle) / TsMemberProperty(shadowOffset) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Color) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclInterface(TextFieldStyle) / TsMemberProperty(textInputStyle) / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Checked) [id => react-native-material-kit, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(react-native-material-kit) / TsDeclInterface(MKRadioButtonProperties) / TsMemberProperty(onCheckedChange) / TsTypeFunction() / TsFunSig() / TsFunParam() / TsTypeObject())] 
[debug] PhaseRunner.scala:78 Success [id => react-native-material-kit, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:34 Processing TsIdentLibrarySimple(react-native-material-kit) [id => react-native-material-kit, phase => scala.js] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(reactDashNativeLib.reactDashNativeMod.TouchableWithoutFeedbackProps because Would inherit conflicting mutable fields List(accessibilityComponentType, accessibilityLiveRegion, importantForAccessibility, accessibilityElementsHidden, accessibilityIgnoresInvertColors, accessibilityTraits, onAccessibilityTap, onMagicTap, accessibilityHint, accessibilityLabel, accessibilityRole, accessibilityStates, accessible, hitSlop, onLayout, style, testID), reactDashNativeDashMaterialDashKitLib.reactDashNativeDashMaterialDashKitMod.TickProperties because Would inherit conflicting mutable fields List(accessibilityComponentType, accessibilityLiveRegion, importantForAccessibility, accessibilityElementsHidden, accessibilityIgnoresInvertColors, accessibilityTraits, onAccessibilityTap, onMagicTap, accessibilityHint, accessibilityLabel, accessibilityRole, accessibilityStates, accessible, collapsable, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityActions, accessibilityViewIsModal, onAccessibilityAction, shouldRasterizeIOS, onMoveShouldSetResponder, onMoveShouldSetResponderCapture, onResponderEnd, onResponderGrant, onResponderMove, onResponderReject, onResponderRelease, onResponderStart, onResponderTerminate, onResponderTerminationRequest, onStartShouldSetResponder, onStartShouldSetResponderCapture, onTouchCancel, onTouchEnd, onTouchEndCapture, onTouchMove, onTouchStart, hitSlop, onLayout, pointerEvents, removeClippedSubviews, style, testID)) [id => react-native-material-kit, phase => scala.js, this => Name(reactDashNativeDashMaterialDashKitLib) / Name(reactDashNativeDashMaterialDashKitMod) / Name(MKCheckboxProperties)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(reactDashNativeLib.reactDashNativeMod.TouchableWithoutFeedbackProps because Would inherit conflicting mutable fields List(accessibilityComponentType, accessibilityLiveRegion, importantForAccessibility, accessibilityElementsHidden, accessibilityIgnoresInvertColors, accessibilityTraits, onAccessibilityTap, onMagicTap, accessibilityHint, accessibilityLabel, accessibilityRole, accessibilityStates, accessible, hitSlop, onLayout, style, testID)) [id => react-native-material-kit, phase => scala.js, this => Name(reactDashNativeDashMaterialDashKitLib) / Name(reactDashNativeDashMaterialDashKitMod) / Name(MKButtonProperties)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(reactDashNativeDashMaterialDashKitLib.reactDashNativeDashMaterialDashKitMod.FloatingLabelProperties because Would inherit conflicting mutable fields List(allowFontScaling)) [id => react-native-material-kit, phase => scala.js, this => Name(reactDashNativeDashMaterialDashKitLib) / Name(reactDashNativeDashMaterialDashKitMod) / Name(MKTextFieldProperties)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(reactDashNativeLib.reactDashNativeMod.TouchableWithoutFeedbackProps because Would inherit conflicting mutable fields List(accessibilityComponentType, accessibilityLiveRegion, importantForAccessibility, accessibilityElementsHidden, accessibilityIgnoresInvertColors, accessibilityTraits, onAccessibilityTap, onMagicTap, accessibilityHint, accessibilityLabel, accessibilityRole, accessibilityStates, accessible, hitSlop, onLayout, style, testID)) [id => react-native-material-kit, phase => scala.js, this => Name(reactDashNativeDashMaterialDashKitLib) / Name(reactDashNativeDashMaterialDashKitMod) / Name(MKRadioButtonProperties)] 
[info ] RemoveMultipleInheritance.scala:39 Dropped parents List(reactDashNativeLib.reactDashNativeMod.TouchableWithoutFeedbackProps because Would inherit conflicting mutable fields List(accessibilityComponentType, accessibilityLiveRegion, importantForAccessibility, accessibilityElementsHidden, accessibilityIgnoresInvertColors, accessibilityTraits, onAccessibilityTap, onMagicTap, accessibilityHint, accessibilityLabel, accessibilityRole, accessibilityStates, accessible, hitSlop, onLayout, style, testID)) [id => react-native-material-kit, phase => scala.js, this => Name(reactDashNativeDashMaterialDashKitLib) / Name(reactDashNativeDashMaterialDashKitMod) / Name(MKIconToggleProperties)] 
[info ] CompleteClass.scala:60 Completed implementations Vector(buttons) [id => react-native-material-kit, phase => scala.js, this => Name(reactDashNativeDashMaterialDashKitLib) / Name(reactDashNativeDashMaterialDashKitMod) / Name(MKRadioButtonNs) / Name(Group)] 
[debug] PhaseRunner.scala:78 Success [id => react-native-material-kit, phase => scala.js] 
[warn ] PhaseRunner.scala:64 Failed because of, [react-native => Compilation failed] [id => react-native-material-kit, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [react-native => Compilation failed] [id => react-native-material-kit, phase => build] 
