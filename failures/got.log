[info ] InferredDependency.scala:20 Inferred dependencies Set(TsIdentLibrarySimple(node)) for TsIdentLibrarySimple(got) [id => got, phase => typescript, file => ../types/got/index.d.ts] 
[debug] PhaseRunner.scala:78 Success [id => got, phase => typescript] 
[info ] Phase1ReadTypescript.scala:152 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/DefinitelyTyped/types/got/index.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/DefinitelyTyped/types/got),TsIdentLibrarySimple(got)),TsIdentModule(None,List(got))) [id => got, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(got)) [id => got, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:190 Processing TsIdentLibrarySimple(got) [id => got, phase => typescript] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(got), TsIdentModule(None,List(got)), TsIdentSimple(RequestError)))) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(got) / TsTypeIntersect() / TsTypeObject() / TsMemberProperty(RequestError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(got), TsIdentModule(None,List(got)), TsIdentSimple(ReadError)))) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(got) / TsTypeIntersect() / TsTypeObject() / TsMemberProperty(ReadError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(got), TsIdentModule(None,List(got)), TsIdentSimple(ParseError)))) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(got) / TsTypeIntersect() / TsTypeObject() / TsMemberProperty(ParseError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(got), TsIdentModule(None,List(got)), TsIdentSimple(HTTPError)))) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(got) / TsTypeIntersect() / TsTypeObject() / TsMemberProperty(HTTPError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(got), TsIdentModule(None,List(got)), TsIdentSimple(MaxRedirectsError)))) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(got) / TsTypeIntersect() / TsTypeObject() / TsMemberProperty(MaxRedirectsError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(got), TsIdentModule(None,List(got)), TsIdentSimple(UnsupportedProtocolError)))) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(got) / TsTypeIntersect() / TsTypeObject() / TsMemberProperty(UnsupportedProtocolError) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:94 Resolved TsTypeQuery(TsQIdent(List(TsIdentLibrarySimple(got), TsIdentModule(None,List(got)), TsIdentSimple(CancelError)))) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(got) / TsTypeIntersect() / TsTypeObject() / TsMemberProperty(CancelError) / TsTypeQuery())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_Cancel) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclNamespace(got) / TsDeclTypeAlias(GotPromise) / TsTypeIntersect() / TsTypeObject())] 
[info ] ExtractInterfaces.scala:30 Extracted anonymous interface TsIdentSimple(Anon_ParseError) [id => got, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(got) / TsDeclVar(namespaced) / TsTypeIntersect() / TsTypeObject())] 
[debug] PhaseRunner.scala:78 Success [id => got, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:34 Processing TsIdentLibrarySimple(got) [id => got, phase => scala.js] 
[debug] PhaseRunner.scala:78 Success [id => got, phase => scala.js] 
[warn ] PhaseRunner.scala:64 Failed because of, [node => Compilation failed] [id => got, phase => build] 
[debug] PhaseRunner.scala:82 Failure, [node => Compilation failed] [id => got, phase => build] 
