package typings.googlepay.google.payments.api

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Detailed information about the transaction.
  */
trait TransactionInfo extends js.Object {
  /**
    * Optional checkout option parameter. Whether to use the 'Continue' or
    * the 'Pay Now' button for a buy flow.
    *
    * If omitted, defaults to [[CheckoutOption|`DEFAULT`]] and renders
    * the 'Continue' button for a buy flow.
    *
    * @default "DEFAULT"
    */
  var checkoutOption: js.UndefOr[CheckoutOption] = js.undefined
  /**
    * ISO 3166-1 alpha-2 country code for the country where the transaction
    * will be completed/processed.
    *
    * This is an optional field. We recommend setting this field to allow
    * country-specific customizations (for example, in some countries we
    * may need to provide extra information to you or your processor in
    * order to complete a transaction).
    */
  var countryCode: js.UndefOr[String] = js.undefined
  /**
    * ISO 4217 alphabetic currency code of the transaction.
    *
    * This is a required field.
    */
  var currencyCode: String
  /**
    * This can be used to display a high level breakdown of the total
    * price. e.g. 'subtotal', 'discount'.
    */
  var displayItems: js.UndefOr[js.Array[DisplayItem]] = js.undefined
  /**
    * Total price of this transaction.
    *
    * The format of this string should follow the regular expression
    * format:
    * `[0-9]+(\.[0-9][0-9])?` (e.g., `"10.45"`)
    *
    * This field is required if
    * [[CheckoutOption.TransactionInfo.totalPriceStatus|`CheckoutOption.TransactionInfo.totalPriceStatus`]]
    * is set to
    * [[TotalPriceStatus|`ESTIMATED`]] or
    * [[TotalPriceStatus|`FINAL`]].
    */
  var totalPrice: String
  /**
    * Total price label of this transaction.
    *
    * The string will be shown as the total price label on the cart modal
    * dialog page.
    *
    * This field is optional, but required if developer wants to show cart
    * information. Otherwise the cart modal dialog will not be rendered
    * even if transactionInfo.displayItems is set.
    */
  var totalPriceLabel: js.UndefOr[String] = js.undefined
  /**
    * Status of this transaction's total price.
    *
    * This field is required.
    *
    * Note: some payment methods require that this field be set to
    * [[TotalPriceStatus|`FINAL`]] and that
    * the total price to be specified and final.
    */
  var totalPriceStatus: TotalPriceStatus
  /**
    * Correlation ID to refer to this transaction.
    *
    * This field is optional. It is generated by the merchant and is used
    * for referring to this transaction later on (e.g. for debugging issues
    * when communicating with Google).
    */
  var transactionId: js.UndefOr[String] = js.undefined
  /**
    * Transaction note.
    *
    * This field is optional except when the following payment methods are
    * used:
    *
    * - [[PaymentMethodType|`UPI`]]
    *   this will be passed to NPCI (National Payments Corporation of
    *   India) and can seen as the transaction description in the order
    *   screen. The note should have details related to the order or the
    *   reservation details. The maximum length allowed for this field
    *   is 80.
    */
  var transactionNote: js.UndefOr[String] = js.undefined
}

object TransactionInfo {
  @scala.inline
  def apply(
    currencyCode: String,
    totalPrice: String,
    totalPriceStatus: TotalPriceStatus,
    checkoutOption: CheckoutOption = null,
    countryCode: String = null,
    displayItems: js.Array[DisplayItem] = null,
    totalPriceLabel: String = null,
    transactionId: String = null,
    transactionNote: String = null
  ): TransactionInfo = {
    val __obj = js.Dynamic.literal(currencyCode = currencyCode.asInstanceOf[js.Any], totalPrice = totalPrice.asInstanceOf[js.Any], totalPriceStatus = totalPriceStatus.asInstanceOf[js.Any])
    if (checkoutOption != null) __obj.updateDynamic("checkoutOption")(checkoutOption.asInstanceOf[js.Any])
    if (countryCode != null) __obj.updateDynamic("countryCode")(countryCode.asInstanceOf[js.Any])
    if (displayItems != null) __obj.updateDynamic("displayItems")(displayItems.asInstanceOf[js.Any])
    if (totalPriceLabel != null) __obj.updateDynamic("totalPriceLabel")(totalPriceLabel.asInstanceOf[js.Any])
    if (transactionId != null) __obj.updateDynamic("transactionId")(transactionId.asInstanceOf[js.Any])
    if (transactionNote != null) __obj.updateDynamic("transactionNote")(transactionNote.asInstanceOf[js.Any])
    __obj.asInstanceOf[TransactionInfo]
  }
}

