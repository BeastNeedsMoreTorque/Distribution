package typings.gitana.anon

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait TYPEACCESSPOLICY extends js.Object {
  var TYPE_ACCESS_POLICY: String
  var TYPE_APPLICATION: String
  var TYPE_ARCHIVE: String
  var TYPE_ASSOCIATION: String
  var TYPE_AUTHENTICATION_GRANT: String
  var TYPE_AUTO_CLIENT_MAPPING: String
  var TYPE_BILLING_PROVIDERS_CONFIGURATION: String
  var TYPE_BRANCH: String
  var TYPE_CHANGESET: String
  var TYPE_CLIENT: String
  var TYPE_CLUSTER: String
  var TYPE_CONNECTION: String
  var TYPE_DELETION: String
  var TYPE_DEPLOYED_APPLICATION: String
  var TYPE_DEPLOYMENT_PACKAGE: String
  var TYPE_DEPLOYMENT_RECEIVER: String
  var TYPE_DEPLOYMENT_STRATEGY: String
  var TYPE_DEPLOYMENT_TARGET: String
  var TYPE_DESCRIPTOR: String
  var TYPE_DIRECTORY: String
  var TYPE_DOMAIN: String
  var TYPE_DOMAIN_GROUP: String
  var TYPE_DOMAIN_USER: String
  var TYPE_EMAIL: String
  var TYPE_EMAIL_PROVIDER: String
  var TYPE_IDENTITY: String
  var TYPE_JOB: String
  var TYPE_LOG_ENTRY: String
  var TYPE_MERGE_CONFLICT: String
  var TYPE_MESSAGE: String
  var TYPE_METER: String
  var TYPE_NODE: String
  var TYPE_PAGE_RENDITION: String
  var TYPE_PLAN: String
  var TYPE_PLATFORM: String
  var TYPE_PROJECT: String
  var TYPE_REGISTRAR: String
  var TYPE_REGISTRATION: String
  var TYPE_RELEASE: String
  var TYPE_REPORT: String
  var TYPE_REPOSITORY: String
  var TYPE_SCHEDULED_WORK: String
  var TYPE_SETTINGS: String
  var TYPE_STACK: String
  var TYPE_TENANT: String
  var TYPE_TRUSTED_DOMAIN_MAPPING: String
  var TYPE_UICONFIG: String
  var TYPE_VAULT: String
  var TYPE_VIEW: String
  var TYPE_WEB_HOST: String
  var TYPE_WORKFLOW_COMMENT: String
  var TYPE_WORKFLOW_INSTANCE: String
  var TYPE_WORKFLOW_MODEL: String
  var TYPE_WORKFLOW_TASK: String
}

object TYPEACCESSPOLICY {
  @scala.inline
  def apply(
    TYPE_ACCESS_POLICY: String,
    TYPE_APPLICATION: String,
    TYPE_ARCHIVE: String,
    TYPE_ASSOCIATION: String,
    TYPE_AUTHENTICATION_GRANT: String,
    TYPE_AUTO_CLIENT_MAPPING: String,
    TYPE_BILLING_PROVIDERS_CONFIGURATION: String,
    TYPE_BRANCH: String,
    TYPE_CHANGESET: String,
    TYPE_CLIENT: String,
    TYPE_CLUSTER: String,
    TYPE_CONNECTION: String,
    TYPE_DELETION: String,
    TYPE_DEPLOYED_APPLICATION: String,
    TYPE_DEPLOYMENT_PACKAGE: String,
    TYPE_DEPLOYMENT_RECEIVER: String,
    TYPE_DEPLOYMENT_STRATEGY: String,
    TYPE_DEPLOYMENT_TARGET: String,
    TYPE_DESCRIPTOR: String,
    TYPE_DIRECTORY: String,
    TYPE_DOMAIN: String,
    TYPE_DOMAIN_GROUP: String,
    TYPE_DOMAIN_USER: String,
    TYPE_EMAIL: String,
    TYPE_EMAIL_PROVIDER: String,
    TYPE_IDENTITY: String,
    TYPE_JOB: String,
    TYPE_LOG_ENTRY: String,
    TYPE_MERGE_CONFLICT: String,
    TYPE_MESSAGE: String,
    TYPE_METER: String,
    TYPE_NODE: String,
    TYPE_PAGE_RENDITION: String,
    TYPE_PLAN: String,
    TYPE_PLATFORM: String,
    TYPE_PROJECT: String,
    TYPE_REGISTRAR: String,
    TYPE_REGISTRATION: String,
    TYPE_RELEASE: String,
    TYPE_REPORT: String,
    TYPE_REPOSITORY: String,
    TYPE_SCHEDULED_WORK: String,
    TYPE_SETTINGS: String,
    TYPE_STACK: String,
    TYPE_TENANT: String,
    TYPE_TRUSTED_DOMAIN_MAPPING: String,
    TYPE_UICONFIG: String,
    TYPE_VAULT: String,
    TYPE_VIEW: String,
    TYPE_WEB_HOST: String,
    TYPE_WORKFLOW_COMMENT: String,
    TYPE_WORKFLOW_INSTANCE: String,
    TYPE_WORKFLOW_MODEL: String,
    TYPE_WORKFLOW_TASK: String
  ): TYPEACCESSPOLICY = {
    val __obj = js.Dynamic.literal(TYPE_ACCESS_POLICY = TYPE_ACCESS_POLICY.asInstanceOf[js.Any], TYPE_APPLICATION = TYPE_APPLICATION.asInstanceOf[js.Any], TYPE_ARCHIVE = TYPE_ARCHIVE.asInstanceOf[js.Any], TYPE_ASSOCIATION = TYPE_ASSOCIATION.asInstanceOf[js.Any], TYPE_AUTHENTICATION_GRANT = TYPE_AUTHENTICATION_GRANT.asInstanceOf[js.Any], TYPE_AUTO_CLIENT_MAPPING = TYPE_AUTO_CLIENT_MAPPING.asInstanceOf[js.Any], TYPE_BILLING_PROVIDERS_CONFIGURATION = TYPE_BILLING_PROVIDERS_CONFIGURATION.asInstanceOf[js.Any], TYPE_BRANCH = TYPE_BRANCH.asInstanceOf[js.Any], TYPE_CHANGESET = TYPE_CHANGESET.asInstanceOf[js.Any], TYPE_CLIENT = TYPE_CLIENT.asInstanceOf[js.Any], TYPE_CLUSTER = TYPE_CLUSTER.asInstanceOf[js.Any], TYPE_CONNECTION = TYPE_CONNECTION.asInstanceOf[js.Any], TYPE_DELETION = TYPE_DELETION.asInstanceOf[js.Any], TYPE_DEPLOYED_APPLICATION = TYPE_DEPLOYED_APPLICATION.asInstanceOf[js.Any], TYPE_DEPLOYMENT_PACKAGE = TYPE_DEPLOYMENT_PACKAGE.asInstanceOf[js.Any], TYPE_DEPLOYMENT_RECEIVER = TYPE_DEPLOYMENT_RECEIVER.asInstanceOf[js.Any], TYPE_DEPLOYMENT_STRATEGY = TYPE_DEPLOYMENT_STRATEGY.asInstanceOf[js.Any], TYPE_DEPLOYMENT_TARGET = TYPE_DEPLOYMENT_TARGET.asInstanceOf[js.Any], TYPE_DESCRIPTOR = TYPE_DESCRIPTOR.asInstanceOf[js.Any], TYPE_DIRECTORY = TYPE_DIRECTORY.asInstanceOf[js.Any], TYPE_DOMAIN = TYPE_DOMAIN.asInstanceOf[js.Any], TYPE_DOMAIN_GROUP = TYPE_DOMAIN_GROUP.asInstanceOf[js.Any], TYPE_DOMAIN_USER = TYPE_DOMAIN_USER.asInstanceOf[js.Any], TYPE_EMAIL = TYPE_EMAIL.asInstanceOf[js.Any], TYPE_EMAIL_PROVIDER = TYPE_EMAIL_PROVIDER.asInstanceOf[js.Any], TYPE_IDENTITY = TYPE_IDENTITY.asInstanceOf[js.Any], TYPE_JOB = TYPE_JOB.asInstanceOf[js.Any], TYPE_LOG_ENTRY = TYPE_LOG_ENTRY.asInstanceOf[js.Any], TYPE_MERGE_CONFLICT = TYPE_MERGE_CONFLICT.asInstanceOf[js.Any], TYPE_MESSAGE = TYPE_MESSAGE.asInstanceOf[js.Any], TYPE_METER = TYPE_METER.asInstanceOf[js.Any], TYPE_NODE = TYPE_NODE.asInstanceOf[js.Any], TYPE_PAGE_RENDITION = TYPE_PAGE_RENDITION.asInstanceOf[js.Any], TYPE_PLAN = TYPE_PLAN.asInstanceOf[js.Any], TYPE_PLATFORM = TYPE_PLATFORM.asInstanceOf[js.Any], TYPE_PROJECT = TYPE_PROJECT.asInstanceOf[js.Any], TYPE_REGISTRAR = TYPE_REGISTRAR.asInstanceOf[js.Any], TYPE_REGISTRATION = TYPE_REGISTRATION.asInstanceOf[js.Any], TYPE_RELEASE = TYPE_RELEASE.asInstanceOf[js.Any], TYPE_REPORT = TYPE_REPORT.asInstanceOf[js.Any], TYPE_REPOSITORY = TYPE_REPOSITORY.asInstanceOf[js.Any], TYPE_SCHEDULED_WORK = TYPE_SCHEDULED_WORK.asInstanceOf[js.Any], TYPE_SETTINGS = TYPE_SETTINGS.asInstanceOf[js.Any], TYPE_STACK = TYPE_STACK.asInstanceOf[js.Any], TYPE_TENANT = TYPE_TENANT.asInstanceOf[js.Any], TYPE_TRUSTED_DOMAIN_MAPPING = TYPE_TRUSTED_DOMAIN_MAPPING.asInstanceOf[js.Any], TYPE_UICONFIG = TYPE_UICONFIG.asInstanceOf[js.Any], TYPE_VAULT = TYPE_VAULT.asInstanceOf[js.Any], TYPE_VIEW = TYPE_VIEW.asInstanceOf[js.Any], TYPE_WEB_HOST = TYPE_WEB_HOST.asInstanceOf[js.Any], TYPE_WORKFLOW_COMMENT = TYPE_WORKFLOW_COMMENT.asInstanceOf[js.Any], TYPE_WORKFLOW_INSTANCE = TYPE_WORKFLOW_INSTANCE.asInstanceOf[js.Any], TYPE_WORKFLOW_MODEL = TYPE_WORKFLOW_MODEL.asInstanceOf[js.Any], TYPE_WORKFLOW_TASK = TYPE_WORKFLOW_TASK.asInstanceOf[js.Any])
    __obj.asInstanceOf[TYPEACCESSPOLICY]
  }
}

