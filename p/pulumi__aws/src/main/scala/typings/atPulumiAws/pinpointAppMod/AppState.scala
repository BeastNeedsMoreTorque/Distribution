package typings.atPulumiAws.pinpointAppMod

import org.scalablytyped.runtime.StringDictionary
import typings.atPulumiAws.Anon_DailyMaximumDuration
import typings.atPulumiAws.Anon_EndStart
import typings.atPulumiAws.Anon_LambdaFunctionNameMode
import typings.atPulumiPulumi.outputMod.Input
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait AppState extends js.Object {
  /**
    * The Application ID of the Pinpoint App.
    */
  val applicationId: js.UndefOr[Input[String]] = js.undefined
  /**
    * Amazon Resource Name (ARN) of the PinPoint Application
    */
  val arn: js.UndefOr[Input[String]] = js.undefined
  /**
    * The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
    */
  val campaignHook: js.UndefOr[Input[Anon_LambdaFunctionNameMode]] = js.undefined
  /**
    * The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
    */
  val limits: js.UndefOr[Input[Anon_DailyMaximumDuration]] = js.undefined
  /**
    * The application name. By default generated by this provider
    */
  val name: js.UndefOr[Input[String]] = js.undefined
  /**
    * The name of the Pinpoint application. Conflicts with `name`
    */
  val namePrefix: js.UndefOr[Input[String]] = js.undefined
  /**
    * The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
    */
  val quietTime: js.UndefOr[Input[Anon_EndStart]] = js.undefined
  /**
    * Key-value mapping of resource tags
    */
  val tags: js.UndefOr[Input[StringDictionary[_]]] = js.undefined
}

object AppState {
  @scala.inline
  def apply(
    applicationId: Input[String] = null,
    arn: Input[String] = null,
    campaignHook: Input[Anon_LambdaFunctionNameMode] = null,
    limits: Input[Anon_DailyMaximumDuration] = null,
    name: Input[String] = null,
    namePrefix: Input[String] = null,
    quietTime: Input[Anon_EndStart] = null,
    tags: Input[StringDictionary[_]] = null
  ): AppState = {
    val __obj = js.Dynamic.literal()
    if (applicationId != null) __obj.updateDynamic("applicationId")(applicationId.asInstanceOf[js.Any])
    if (arn != null) __obj.updateDynamic("arn")(arn.asInstanceOf[js.Any])
    if (campaignHook != null) __obj.updateDynamic("campaignHook")(campaignHook.asInstanceOf[js.Any])
    if (limits != null) __obj.updateDynamic("limits")(limits.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (namePrefix != null) __obj.updateDynamic("namePrefix")(namePrefix.asInstanceOf[js.Any])
    if (quietTime != null) __obj.updateDynamic("quietTime")(quietTime.asInstanceOf[js.Any])
    if (tags != null) __obj.updateDynamic("tags")(tags.asInstanceOf[js.Any])
    __obj.asInstanceOf[AppState]
  }
}

