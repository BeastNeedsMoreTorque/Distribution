package typings
package petitDashDomLib.petitDashDomMod.PetitDomNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/* import warning: RemoveDifficultInheritance.summarizeChanges 
- Dropped {[ P in std.Exclude<'circle' | 'clipPath' | 'defs' | 'desc' | 'ellipse' | 'feBlend' | 'feColorMatrix' | 'feComponentTransfer' | 'feComposite' | 'feConvolveMatrix' | 'feDiffuseLighting' | 'feDisplacementMap' | 'feDistantLight' | 'feFlood' | 'feFuncA' | 'feFuncB' | 'feFuncG' | 'feFuncR' | 'feGaussianBlur' | 'feImage' | 'feMerge' | 'feMergeNode' | 'feMorphology' | 'feOffset' | 'fePointLight' | 'feSpecularLighting' | 'feSpotLight' | 'feTile' | 'feTurbulence' | 'filter' | 'foreignObject' | 'g' | 'image' | 'line' | 'linearGradient' | 'marker' | 'mask' | 'metadata' | 'path' | 'pattern' | 'polygon' | 'polyline' | 'radialGradient' | 'rect' | 'stop' | 'svg' | 'switch' | 'symbol' | 'text' | 'textPath' | 'tspan' | 'use' | 'view', 'a' | 'script' | 'style' | 'title'> ]: std.SVGElementTagNameMap[P]} */ trait DomElements
  extends stdLib.HTMLElementTagNameMap

object DomElements {
  @scala.inline
  def apply(
    a: stdLib.HTMLAnchorElement,
    abbr: stdLib.HTMLElement,
    address: stdLib.HTMLElement,
    applet: stdLib.HTMLAppletElement,
    area: stdLib.HTMLAreaElement,
    article: stdLib.HTMLElement,
    aside: stdLib.HTMLElement,
    audio: stdLib.HTMLAudioElement,
    b: stdLib.HTMLElement,
    base: stdLib.HTMLBaseElement,
    basefont: stdLib.HTMLBaseFontElement,
    bdi: stdLib.HTMLElement,
    bdo: stdLib.HTMLElement,
    blockquote: stdLib.HTMLQuoteElement,
    body: stdLib.HTMLBodyElement,
    br: stdLib.HTMLBRElement,
    button: stdLib.HTMLButtonElement,
    canvas: stdLib.HTMLCanvasElement,
    caption: stdLib.HTMLTableCaptionElement,
    cite: stdLib.HTMLElement,
    code: stdLib.HTMLElement,
    col: stdLib.HTMLTableColElement,
    colgroup: stdLib.HTMLTableColElement,
    data: stdLib.HTMLDataElement,
    datalist: stdLib.HTMLDataListElement,
    dd: stdLib.HTMLElement,
    del: stdLib.HTMLModElement,
    details: stdLib.HTMLDetailsElement,
    dfn: stdLib.HTMLElement,
    dialog: stdLib.HTMLDialogElement,
    dir: stdLib.HTMLDirectoryElement,
    div: stdLib.HTMLDivElement,
    dl: stdLib.HTMLDListElement,
    dt: stdLib.HTMLElement,
    em: stdLib.HTMLElement,
    embed: stdLib.HTMLEmbedElement,
    fieldset: stdLib.HTMLFieldSetElement,
    figcaption: stdLib.HTMLElement,
    figure: stdLib.HTMLElement,
    font: stdLib.HTMLFontElement,
    footer: stdLib.HTMLElement,
    form: stdLib.HTMLFormElement,
    frame: stdLib.HTMLFrameElement,
    frameset: stdLib.HTMLFrameSetElement,
    h1: stdLib.HTMLHeadingElement,
    h2: stdLib.HTMLHeadingElement,
    h3: stdLib.HTMLHeadingElement,
    h4: stdLib.HTMLHeadingElement,
    h5: stdLib.HTMLHeadingElement,
    h6: stdLib.HTMLHeadingElement,
    head: stdLib.HTMLHeadElement,
    header: stdLib.HTMLElement,
    hgroup: stdLib.HTMLElement,
    hr: stdLib.HTMLHRElement,
    html: stdLib.HTMLHtmlElement,
    i: stdLib.HTMLElement,
    iframe: stdLib.HTMLIFrameElement,
    img: stdLib.HTMLImageElement,
    input: stdLib.HTMLInputElement,
    ins: stdLib.HTMLModElement,
    kbd: stdLib.HTMLElement,
    label: stdLib.HTMLLabelElement,
    legend: stdLib.HTMLLegendElement,
    li: stdLib.HTMLLIElement,
    link: stdLib.HTMLLinkElement,
    main: stdLib.HTMLElement,
    map: stdLib.HTMLMapElement,
    mark: stdLib.HTMLElement,
    marquee: stdLib.HTMLMarqueeElement,
    menu: stdLib.HTMLMenuElement,
    meta: stdLib.HTMLMetaElement,
    meter: stdLib.HTMLMeterElement,
    nav: stdLib.HTMLElement,
    noscript: stdLib.HTMLElement,
    `object`: stdLib.HTMLObjectElement,
    ol: stdLib.HTMLOListElement,
    optgroup: stdLib.HTMLOptGroupElement,
    option: stdLib.HTMLOptionElement,
    output: stdLib.HTMLOutputElement,
    p: stdLib.HTMLParagraphElement,
    param: stdLib.HTMLParamElement,
    picture: stdLib.HTMLPictureElement,
    pre: stdLib.HTMLPreElement,
    progress: stdLib.HTMLProgressElement,
    q: stdLib.HTMLQuoteElement,
    rp: stdLib.HTMLElement,
    rt: stdLib.HTMLElement,
    ruby: stdLib.HTMLElement,
    s: stdLib.HTMLElement,
    samp: stdLib.HTMLElement,
    script: stdLib.HTMLScriptElement,
    section: stdLib.HTMLElement,
    select: stdLib.HTMLSelectElement,
    slot: stdLib.HTMLSlotElement,
    small: stdLib.HTMLElement,
    source: stdLib.HTMLSourceElement,
    span: stdLib.HTMLSpanElement,
    strong: stdLib.HTMLElement,
    style: stdLib.HTMLStyleElement,
    sub: stdLib.HTMLElement,
    summary: stdLib.HTMLElement,
    sup: stdLib.HTMLElement,
    table: stdLib.HTMLTableElement,
    tbody: stdLib.HTMLTableSectionElement,
    td: stdLib.HTMLTableDataCellElement,
    template: stdLib.HTMLTemplateElement,
    textarea: stdLib.HTMLTextAreaElement,
    tfoot: stdLib.HTMLTableSectionElement,
    th: stdLib.HTMLTableHeaderCellElement,
    thead: stdLib.HTMLTableSectionElement,
    time: stdLib.HTMLTimeElement,
    title: stdLib.HTMLTitleElement,
    tr: stdLib.HTMLTableRowElement,
    track: stdLib.HTMLTrackElement,
    u: stdLib.HTMLElement,
    ul: stdLib.HTMLUListElement,
    `var`: stdLib.HTMLElement,
    video: stdLib.HTMLVideoElement,
    wbr: stdLib.HTMLElement
  ): DomElements = {
    val __obj = js.Dynamic.literal(a = a, abbr = abbr, address = address, applet = applet, area = area, article = article, aside = aside, audio = audio, b = b, base = base, basefont = basefont, bdi = bdi, bdo = bdo, blockquote = blockquote, body = body, br = br, button = button, canvas = canvas, caption = caption, cite = cite, code = code, col = col, colgroup = colgroup, data = data, datalist = datalist, dd = dd, del = del, details = details, dfn = dfn, dialog = dialog, dir = dir, div = div, dl = dl, dt = dt, em = em, embed = embed, fieldset = fieldset, figcaption = figcaption, figure = figure, font = font, footer = footer, form = form, frame = frame, frameset = frameset, h1 = h1, h2 = h2, h3 = h3, h4 = h4, h5 = h5, h6 = h6, head = head, header = header, hgroup = hgroup, hr = hr, html = html, i = i, iframe = iframe, img = img, input = input, ins = ins, kbd = kbd, label = label, legend = legend, li = li, link = link, main = main, map = map, mark = mark, marquee = marquee, menu = menu, meta = meta, meter = meter, nav = nav, noscript = noscript, ol = ol, optgroup = optgroup, option = option, output = output, p = p, param = param, picture = picture, pre = pre, progress = progress, q = q, rp = rp, rt = rt, ruby = ruby, s = s, samp = samp, script = script, section = section, select = select, slot = slot, small = small, source = source, span = span, strong = strong, style = style, sub = sub, summary = summary, sup = sup, table = table, tbody = tbody, td = td, template = template, textarea = textarea, tfoot = tfoot, th = th, thead = thead, time = time, title = title, tr = tr, track = track, u = u, ul = ul, video = video, wbr = wbr)
    __obj.updateDynamic("object")(`object`)
    __obj.updateDynamic("var")(`var`)
    __obj.asInstanceOf[DomElements]
  }
}

