package typings
package petitDashDomLib.petitDashDomMod.PetitDomNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait DomElements
  extends stdLib.HTMLElementTagNameMap
     with stdLib.SVGElementTagNameMap {
  @JSName("main")
  var main_DomElements: stdLib.HTMLMainElement
}

object DomElements {
  @scala.inline
  def apply(
    a: stdLib.HTMLAnchorElement,
    abbr: stdLib.HTMLElement,
    address: stdLib.HTMLElement,
    applet: stdLib.HTMLAppletElement,
    area: stdLib.HTMLAreaElement,
    article: stdLib.HTMLElement,
    aside: stdLib.HTMLElement,
    audio: stdLib.HTMLAudioElement,
    b: stdLib.HTMLElement,
    base: stdLib.HTMLBaseElement,
    basefont: stdLib.HTMLBaseFontElement,
    bdi: stdLib.HTMLElement,
    bdo: stdLib.HTMLElement,
    blockquote: stdLib.HTMLQuoteElement,
    body: stdLib.HTMLBodyElement,
    br: stdLib.HTMLBRElement,
    button: stdLib.HTMLButtonElement,
    canvas: stdLib.HTMLCanvasElement,
    caption: stdLib.HTMLTableCaptionElement,
    circle: stdLib.SVGCircleElement,
    cite: stdLib.HTMLElement,
    clipPath: stdLib.SVGClipPathElement,
    code: stdLib.HTMLElement,
    col: stdLib.HTMLTableColElement,
    colgroup: stdLib.HTMLTableColElement,
    data: stdLib.HTMLDataElement,
    datalist: stdLib.HTMLDataListElement,
    dd: stdLib.HTMLElement,
    defs: stdLib.SVGDefsElement,
    del: stdLib.HTMLModElement,
    desc: stdLib.SVGDescElement,
    details: stdLib.HTMLDetailsElement,
    dfn: stdLib.HTMLElement,
    dialog: stdLib.HTMLDialogElement,
    dir: stdLib.HTMLDirectoryElement,
    div: stdLib.HTMLDivElement,
    dl: stdLib.HTMLDListElement,
    dt: stdLib.HTMLElement,
    ellipse: stdLib.SVGEllipseElement,
    em: stdLib.HTMLElement,
    embed: stdLib.HTMLEmbedElement,
    feBlend: stdLib.SVGFEBlendElement,
    feColorMatrix: stdLib.SVGFEColorMatrixElement,
    feComponentTransfer: stdLib.SVGFEComponentTransferElement,
    feComposite: stdLib.SVGFECompositeElement,
    feConvolveMatrix: stdLib.SVGFEConvolveMatrixElement,
    feDiffuseLighting: stdLib.SVGFEDiffuseLightingElement,
    feDisplacementMap: stdLib.SVGFEDisplacementMapElement,
    feDistantLight: stdLib.SVGFEDistantLightElement,
    feFlood: stdLib.SVGFEFloodElement,
    feFuncA: stdLib.SVGFEFuncAElement,
    feFuncB: stdLib.SVGFEFuncBElement,
    feFuncG: stdLib.SVGFEFuncGElement,
    feFuncR: stdLib.SVGFEFuncRElement,
    feGaussianBlur: stdLib.SVGFEGaussianBlurElement,
    feImage: stdLib.SVGFEImageElement,
    feMerge: stdLib.SVGFEMergeElement,
    feMergeNode: stdLib.SVGFEMergeNodeElement,
    feMorphology: stdLib.SVGFEMorphologyElement,
    feOffset: stdLib.SVGFEOffsetElement,
    fePointLight: stdLib.SVGFEPointLightElement,
    feSpecularLighting: stdLib.SVGFESpecularLightingElement,
    feSpotLight: stdLib.SVGFESpotLightElement,
    feTile: stdLib.SVGFETileElement,
    feTurbulence: stdLib.SVGFETurbulenceElement,
    fieldset: stdLib.HTMLFieldSetElement,
    figcaption: stdLib.HTMLElement,
    figure: stdLib.HTMLElement,
    filter: stdLib.SVGFilterElement,
    font: stdLib.HTMLFontElement,
    footer: stdLib.HTMLElement,
    foreignObject: stdLib.SVGForeignObjectElement,
    form: stdLib.HTMLFormElement,
    frame: stdLib.HTMLFrameElement,
    frameset: stdLib.HTMLFrameSetElement,
    g: stdLib.SVGGElement,
    h1: stdLib.HTMLHeadingElement,
    h2: stdLib.HTMLHeadingElement,
    h3: stdLib.HTMLHeadingElement,
    h4: stdLib.HTMLHeadingElement,
    h5: stdLib.HTMLHeadingElement,
    h6: stdLib.HTMLHeadingElement,
    head: stdLib.HTMLHeadElement,
    header: stdLib.HTMLElement,
    hgroup: stdLib.HTMLElement,
    hr: stdLib.HTMLHRElement,
    html: stdLib.HTMLHtmlElement,
    i: stdLib.HTMLElement,
    iframe: stdLib.HTMLIFrameElement,
    image: stdLib.SVGImageElement,
    img: stdLib.HTMLImageElement,
    input: stdLib.HTMLInputElement,
    ins: stdLib.HTMLModElement,
    kbd: stdLib.HTMLElement,
    label: stdLib.HTMLLabelElement,
    legend: stdLib.HTMLLegendElement,
    li: stdLib.HTMLLIElement,
    line: stdLib.SVGLineElement,
    linearGradient: stdLib.SVGLinearGradientElement,
    link: stdLib.HTMLLinkElement,
    main: stdLib.HTMLMainElement,
    map: stdLib.HTMLMapElement,
    mark: stdLib.HTMLElement,
    marker: stdLib.SVGMarkerElement,
    marquee: stdLib.HTMLMarqueeElement,
    mask: stdLib.SVGMaskElement,
    menu: stdLib.HTMLMenuElement,
    meta: stdLib.HTMLMetaElement,
    metadata: stdLib.SVGMetadataElement,
    meter: stdLib.HTMLMeterElement,
    nav: stdLib.HTMLElement,
    noscript: stdLib.HTMLElement,
    `object`: stdLib.HTMLObjectElement,
    ol: stdLib.HTMLOListElement,
    optgroup: stdLib.HTMLOptGroupElement,
    option: stdLib.HTMLOptionElement,
    output: stdLib.HTMLOutputElement,
    p: stdLib.HTMLParagraphElement,
    param: stdLib.HTMLParamElement,
    path: stdLib.SVGPathElement,
    pattern: stdLib.SVGPatternElement,
    picture: stdLib.HTMLPictureElement,
    polygon: stdLib.SVGPolygonElement,
    polyline: stdLib.SVGPolylineElement,
    pre: stdLib.HTMLPreElement,
    progress: stdLib.HTMLProgressElement,
    q: stdLib.HTMLQuoteElement,
    radialGradient: stdLib.SVGRadialGradientElement,
    rect: stdLib.SVGRectElement,
    rp: stdLib.HTMLElement,
    rt: stdLib.HTMLElement,
    ruby: stdLib.HTMLElement,
    s: stdLib.HTMLElement,
    samp: stdLib.HTMLElement,
    script: stdLib.HTMLScriptElement,
    section: stdLib.HTMLElement,
    select: stdLib.HTMLSelectElement,
    slot: stdLib.HTMLSlotElement,
    small: stdLib.HTMLElement,
    source: stdLib.HTMLSourceElement,
    span: stdLib.HTMLSpanElement,
    stop: stdLib.SVGStopElement,
    strong: stdLib.HTMLElement,
    style: stdLib.HTMLStyleElement,
    sub: stdLib.HTMLElement,
    summary: stdLib.HTMLElement,
    sup: stdLib.HTMLElement,
    svg: stdLib.SVGSVGElement,
    switch: stdLib.SVGSwitchElement,
    symbol: stdLib.SVGSymbolElement,
    table: stdLib.HTMLTableElement,
    tbody: stdLib.HTMLTableSectionElement,
    td: stdLib.HTMLTableDataCellElement,
    template: stdLib.HTMLTemplateElement,
    text: stdLib.SVGTextElement,
    textPath: stdLib.SVGTextPathElement,
    textarea: stdLib.HTMLTextAreaElement,
    tfoot: stdLib.HTMLTableSectionElement,
    th: stdLib.HTMLTableHeaderCellElement,
    thead: stdLib.HTMLTableSectionElement,
    time: stdLib.HTMLTimeElement,
    title: stdLib.HTMLTitleElement,
    tr: stdLib.HTMLTableRowElement,
    track: stdLib.HTMLTrackElement,
    tspan: stdLib.SVGTSpanElement,
    u: stdLib.HTMLElement,
    ul: stdLib.HTMLUListElement,
    use: stdLib.SVGUseElement,
    `var`: stdLib.HTMLElement,
    video: stdLib.HTMLVideoElement,
    view: stdLib.SVGViewElement,
    wbr: stdLib.HTMLElement
  ): DomElements = {
    val __obj = js.Dynamic.literal(a = a, abbr = abbr, address = address, applet = applet, area = area, article = article, aside = aside, audio = audio, b = b, base = base, basefont = basefont, bdi = bdi, bdo = bdo, blockquote = blockquote, body = body, br = br, button = button, canvas = canvas, caption = caption, circle = circle, cite = cite, clipPath = clipPath, code = code, col = col, colgroup = colgroup, data = data, datalist = datalist, dd = dd, defs = defs, del = del, desc = desc, details = details, dfn = dfn, dialog = dialog, dir = dir, div = div, dl = dl, dt = dt, ellipse = ellipse, em = em, embed = embed, feBlend = feBlend, feColorMatrix = feColorMatrix, feComponentTransfer = feComponentTransfer, feComposite = feComposite, feConvolveMatrix = feConvolveMatrix, feDiffuseLighting = feDiffuseLighting, feDisplacementMap = feDisplacementMap, feDistantLight = feDistantLight, feFlood = feFlood, feFuncA = feFuncA, feFuncB = feFuncB, feFuncG = feFuncG, feFuncR = feFuncR, feGaussianBlur = feGaussianBlur, feImage = feImage, feMerge = feMerge, feMergeNode = feMergeNode, feMorphology = feMorphology, feOffset = feOffset, fePointLight = fePointLight, feSpecularLighting = feSpecularLighting, feSpotLight = feSpotLight, feTile = feTile, feTurbulence = feTurbulence, fieldset = fieldset, figcaption = figcaption, figure = figure, filter = filter, font = font, footer = footer, foreignObject = foreignObject, form = form, frame = frame, frameset = frameset, g = g, h1 = h1, h2 = h2, h3 = h3, h4 = h4, h5 = h5, h6 = h6, head = head, header = header, hgroup = hgroup, hr = hr, html = html, i = i, iframe = iframe, image = image, img = img, input = input, ins = ins, kbd = kbd, label = label, legend = legend, li = li, line = line, linearGradient = linearGradient, link = link, main = main, map = map, mark = mark, marker = marker, marquee = marquee, mask = mask, menu = menu, meta = meta, metadata = metadata, meter = meter, nav = nav, noscript = noscript, ol = ol, optgroup = optgroup, option = option, output = output, p = p, param = param, path = path, pattern = pattern, picture = picture, polygon = polygon, polyline = polyline, pre = pre, progress = progress, q = q, radialGradient = radialGradient, rect = rect, rp = rp, rt = rt, ruby = ruby, s = s, samp = samp, script = script, section = section, select = select, slot = slot, small = small, source = source, span = span, stop = stop, strong = strong, style = style, sub = sub, summary = summary, sup = sup, svg = svg, switch = switch, symbol = symbol, table = table, tbody = tbody, td = td, template = template, text = text, textPath = textPath, textarea = textarea, tfoot = tfoot, th = th, thead = thead, time = time, title = title, tr = tr, track = track, tspan = tspan, u = u, ul = ul, use = use, video = video, view = view, wbr = wbr)
    __obj.updateDynamic("object")(`object`)
    __obj.updateDynamic("var")(`var`)
    __obj.asInstanceOf[DomElements]
  }
}

