package typings
package sugarLib.sugarjsNs.NumberNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait Constructor
  extends sugarLib.sugarjsNs.SugarNamespace
     with org.scalablytyped.runtime.Instantiable0[Chainable[scala.Double]]
     with org.scalablytyped.runtime.Instantiable1[/* raw */ scala.Double, Chainable[scala.Double]] {
  def apply(): Chainable[scala.Double] = js.native
  def apply(raw: scala.Double): Chainable[scala.Double] = js.native
  def abbr(instance: scala.Double): java.lang.String = js.native
  def abbr(instance: scala.Double, precision: scala.Double): java.lang.String = js.native
  def abs(instance: scala.Double): scala.Double = js.native
  def acos(instance: scala.Double): scala.Double = js.native
  def asin(instance: scala.Double): scala.Double = js.native
  def atan(instance: scala.Double): scala.Double = js.native
  def bytes(instance: scala.Double): java.lang.String = js.native
  def bytes(instance: scala.Double, precision: scala.Double): java.lang.String = js.native
  def bytes(instance: scala.Double, precision: scala.Double, binary: scala.Boolean): java.lang.String = js.native
  def bytes(instance: scala.Double, precision: scala.Double, binary: scala.Boolean, units: java.lang.String): java.lang.String = js.native
  def cap(instance: scala.Double): scala.Double = js.native
  def cap(instance: scala.Double, max: scala.Double): scala.Double = js.native
  def ceil(instance: scala.Double): scala.Double = js.native
  def ceil(instance: scala.Double, precision: scala.Double): scala.Double = js.native
  def chr(instance: scala.Double): java.lang.String = js.native
  def clamp(instance: scala.Double): scala.Double = js.native
  def clamp(instance: scala.Double, start: scala.Double): scala.Double = js.native
  def clamp(instance: scala.Double, start: scala.Double, end: scala.Double): scala.Double = js.native
  def cos(instance: scala.Double): scala.Double = js.native
  def day(instance: scala.Double): scala.Double = js.native
  def dayAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def dayAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def dayAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def dayAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def dayAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def dayAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def dayAgo(instance: scala.Double): stdLib.Date = js.native
  def dayBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def dayBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def dayBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def dayBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def dayBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def dayBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def dayFromNow(instance: scala.Double): stdLib.Date = js.native
  def days(instance: scala.Double): scala.Double = js.native
  def daysAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def daysAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def daysAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def daysAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def daysAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def daysAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def daysAgo(instance: scala.Double): stdLib.Date = js.native
  def daysBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def daysBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def daysBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def daysBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def daysBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def daysBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def daysFromNow(instance: scala.Double): stdLib.Date = js.native
  def downto[T](instance: scala.Double, num: scala.Double): js.Array[T] = js.native
  def downto[T](
    instance: scala.Double,
    num: scala.Double,
    everyFn: js.Function3[/* el */ T, /* i */ scala.Double, /* r */ sugarLib.sugarjsNs.Range, scala.Unit]
  ): js.Array[T] = js.native
  def downto[T](instance: scala.Double, num: scala.Double, step: scala.Double): js.Array[T] = js.native
  def downto[T](
    instance: scala.Double,
    num: scala.Double,
    step: scala.Double,
    everyFn: js.Function3[/* el */ T, /* i */ scala.Double, /* r */ sugarLib.sugarjsNs.Range, scala.Unit]
  ): js.Array[T] = js.native
  def duration(instance: scala.Double): java.lang.String = js.native
  def duration(instance: scala.Double, localeCode: java.lang.String): java.lang.String = js.native
  def exp(instance: scala.Double): scala.Double = js.native
  def floor(instance: scala.Double): scala.Double = js.native
  def floor(instance: scala.Double, precision: scala.Double): scala.Double = js.native
  def format(instance: scala.Double): java.lang.String = js.native
  def format(instance: scala.Double, place: scala.Double): java.lang.String = js.native
  def getOption[T](name: java.lang.String): T = js.native
  def hex(instance: scala.Double): java.lang.String = js.native
  def hex(instance: scala.Double, pad: scala.Double): java.lang.String = js.native
  def hour(instance: scala.Double): scala.Double = js.native
  def hourAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def hourAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hourAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def hourAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hourAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def hourAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hourAgo(instance: scala.Double): stdLib.Date = js.native
  def hourBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def hourBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hourBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def hourBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hourBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def hourBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hourFromNow(instance: scala.Double): stdLib.Date = js.native
  def hours(instance: scala.Double): scala.Double = js.native
  def hoursAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def hoursAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hoursAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def hoursAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hoursAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def hoursAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hoursAgo(instance: scala.Double): stdLib.Date = js.native
  def hoursBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def hoursBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hoursBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def hoursBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hoursBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def hoursBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def hoursFromNow(instance: scala.Double): stdLib.Date = js.native
  def isEven(instance: scala.Double): scala.Boolean = js.native
  def isInteger(instance: scala.Double): scala.Boolean = js.native
  def isMultipleOf(instance: scala.Double, num: scala.Double): scala.Boolean = js.native
  def isOdd(instance: scala.Double): scala.Boolean = js.native
  def log(instance: scala.Double): scala.Double = js.native
  def log(instance: scala.Double, base: scala.Double): scala.Double = js.native
  def metric(instance: scala.Double): java.lang.String = js.native
  def metric(instance: scala.Double, precision: scala.Double): java.lang.String = js.native
  def metric(instance: scala.Double, precision: scala.Double, units: java.lang.String): java.lang.String = js.native
  def millisecond(instance: scala.Double): scala.Double = js.native
  def millisecondAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def millisecondAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def millisecondAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def millisecondAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondAgo(instance: scala.Double): stdLib.Date = js.native
  def millisecondBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def millisecondBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def millisecondBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def millisecondBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondFromNow(instance: scala.Double): stdLib.Date = js.native
  def milliseconds(instance: scala.Double): scala.Double = js.native
  def millisecondsAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def millisecondsAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondsAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def millisecondsAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondsAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def millisecondsAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondsAgo(instance: scala.Double): stdLib.Date = js.native
  def millisecondsBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def millisecondsBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondsBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def millisecondsBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondsBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def millisecondsBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def millisecondsFromNow(instance: scala.Double): stdLib.Date = js.native
  def minute(instance: scala.Double): scala.Double = js.native
  def minuteAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def minuteAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minuteAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def minuteAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minuteAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def minuteAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minuteAgo(instance: scala.Double): stdLib.Date = js.native
  def minuteBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def minuteBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minuteBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def minuteBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minuteBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def minuteBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minuteFromNow(instance: scala.Double): stdLib.Date = js.native
  def minutes(instance: scala.Double): scala.Double = js.native
  def minutesAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def minutesAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minutesAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def minutesAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minutesAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def minutesAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minutesAgo(instance: scala.Double): stdLib.Date = js.native
  def minutesBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def minutesBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minutesBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def minutesBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minutesBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def minutesBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def minutesFromNow(instance: scala.Double): stdLib.Date = js.native
  def month(instance: scala.Double): scala.Double = js.native
  def monthAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def monthAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def monthAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def monthAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthAgo(instance: scala.Double): stdLib.Date = js.native
  def monthBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def monthBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def monthBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def monthBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthFromNow(instance: scala.Double): stdLib.Date = js.native
  def months(instance: scala.Double): scala.Double = js.native
  def monthsAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def monthsAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthsAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def monthsAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthsAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def monthsAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthsAgo(instance: scala.Double): stdLib.Date = js.native
  def monthsBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def monthsBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthsBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def monthsBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthsBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def monthsBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def monthsFromNow(instance: scala.Double): stdLib.Date = js.native
  def ordinalize(instance: scala.Double): java.lang.String = js.native
  def pad(instance: scala.Double): java.lang.String = js.native
  def pad(instance: scala.Double, place: scala.Double): java.lang.String = js.native
  def pad(instance: scala.Double, place: scala.Double, sign: scala.Boolean): java.lang.String = js.native
  def pad(instance: scala.Double, place: scala.Double, sign: scala.Boolean, base: scala.Double): java.lang.String = js.native
  def pow(instance: scala.Double): scala.Double = js.native
  def random(): scala.Double = js.native
  def random(n1: scala.Double): scala.Double = js.native
  def random(n1: scala.Double, n2: scala.Double): scala.Double = js.native
  def range(): sugarLib.sugarjsNs.Range = js.native
  def range(start: scala.Double): sugarLib.sugarjsNs.Range = js.native
  def range(start: scala.Double, end: scala.Double): sugarLib.sugarjsNs.Range = js.native
  def round(instance: scala.Double): scala.Double = js.native
  def round(instance: scala.Double, precision: scala.Double): scala.Double = js.native
  def second(instance: scala.Double): scala.Double = js.native
  def secondAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def secondAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def secondAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def secondAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondAgo(instance: scala.Double): stdLib.Date = js.native
  def secondBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def secondBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def secondBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def secondBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondFromNow(instance: scala.Double): stdLib.Date = js.native
  def seconds(instance: scala.Double): scala.Double = js.native
  def secondsAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def secondsAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondsAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def secondsAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondsAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def secondsAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondsAgo(instance: scala.Double): stdLib.Date = js.native
  def secondsBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def secondsBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondsBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def secondsBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondsBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def secondsBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def secondsFromNow(instance: scala.Double): stdLib.Date = js.native
  def setOption(name: java.lang.String, value: js.Any): scala.Unit = js.native
  def setOption(options: NumberOptions): scala.Unit = js.native
  def sin(instance: scala.Double): scala.Double = js.native
  def sqrt(instance: scala.Double): scala.Double = js.native
  def tan(instance: scala.Double): scala.Double = js.native
  def times[T](instance: scala.Double, indexMapFn: js.Function1[/* i */ scala.Double, _]): T = js.native
  def toNumber(instance: scala.Double): scala.Double = js.native
  def upto[T](instance: scala.Double, num: scala.Double): js.Array[T] = js.native
  def upto[T](
    instance: scala.Double,
    num: scala.Double,
    everyFn: js.Function3[/* el */ T, /* i */ scala.Double, /* r */ sugarLib.sugarjsNs.Range, scala.Unit]
  ): js.Array[T] = js.native
  def upto[T](instance: scala.Double, num: scala.Double, step: scala.Double): js.Array[T] = js.native
  def upto[T](
    instance: scala.Double,
    num: scala.Double,
    step: scala.Double,
    everyFn: js.Function3[/* el */ T, /* i */ scala.Double, /* r */ sugarLib.sugarjsNs.Range, scala.Unit]
  ): js.Array[T] = js.native
  def week(instance: scala.Double): scala.Double = js.native
  def weekAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def weekAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weekAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def weekAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weekAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def weekAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weekAgo(instance: scala.Double): stdLib.Date = js.native
  def weekBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def weekBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weekBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def weekBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weekBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def weekBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weekFromNow(instance: scala.Double): stdLib.Date = js.native
  def weeks(instance: scala.Double): scala.Double = js.native
  def weeksAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def weeksAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weeksAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def weeksAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weeksAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def weeksAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weeksAgo(instance: scala.Double): stdLib.Date = js.native
  def weeksBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def weeksBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weeksBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def weeksBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weeksBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def weeksBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def weeksFromNow(instance: scala.Double): stdLib.Date = js.native
  def year(instance: scala.Double): scala.Double = js.native
  def yearAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def yearAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def yearAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def yearAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearAgo(instance: scala.Double): stdLib.Date = js.native
  def yearBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def yearBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def yearBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def yearBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearFromNow(instance: scala.Double): stdLib.Date = js.native
  def years(instance: scala.Double): scala.Double = js.native
  def yearsAfter(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def yearsAfter(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearsAfter(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def yearsAfter(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearsAfter(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def yearsAfter(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearsAgo(instance: scala.Double): stdLib.Date = js.native
  def yearsBefore(instance: scala.Double, d: java.lang.String): stdLib.Date = js.native
  def yearsBefore(instance: scala.Double, d: java.lang.String, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearsBefore(instance: scala.Double, d: scala.Double): stdLib.Date = js.native
  def yearsBefore(instance: scala.Double, d: scala.Double, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearsBefore(instance: scala.Double, d: stdLib.Date): stdLib.Date = js.native
  def yearsBefore(instance: scala.Double, d: stdLib.Date, options: sugarLib.sugarjsNs.DateNs.DateCreateOptions): stdLib.Date = js.native
  def yearsFromNow(instance: scala.Double): stdLib.Date = js.native
}

