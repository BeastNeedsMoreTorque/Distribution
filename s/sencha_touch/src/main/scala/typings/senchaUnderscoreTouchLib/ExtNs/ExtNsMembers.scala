package typings
package senchaUnderscoreTouchLib.ExtNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@JSGlobal("Ext")
@js.native
object ExtNsMembers extends js.Object {
  var SSL_SECURE_URL: scala.Boolean = js.native
  var emptyFn: js.Any = js.native
  var enableGarbageCollector: scala.Boolean = js.native
  var enableListenerCollection: scala.Boolean = js.native
  var enumerables: Array = js.native
  var frameStartTime: js.Any = js.native
  var isSecure: scala.Boolean = js.native
  var version: java.lang.String = js.native
  def application(): scala.Unit = js.native
  def application(config: js.Any): scala.Unit = js.native
  @JSName("apply")
  def apply(): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any, config: js.Any): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any, config: js.Any, defaults: js.Any): js.Any = js.native
  def applyIf(): js.Any = js.native
  def applyIf(`object`: js.Any): js.Any = js.native
  def applyIf(`object`: js.Any, config: js.Any): js.Any = js.native
  def bind(): js.Any = js.native
  def bind(fn: js.Any): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any, args: Array): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any, args: Array, appendArgs: js.Any): js.Any = js.native
  def callback(): scala.Unit = js.native
  def callback(callback: js.Any): scala.Unit = js.native
  def callback(callback: js.Any, scope: js.Any): scala.Unit = js.native
  def callback(callback: js.Any, scope: js.Any, args: Array): scala.Unit = js.native
  def callback(callback: js.Any, scope: js.Any, args: Array, delay: scala.Double): scala.Unit = js.native
  def clean(): Array = js.native
  def clean(array: Array): Array = js.native
  def clone(item: js.Any): js.Any = js.native
  def copyTo(): js.Any = js.native
  def copyTo(dest: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any, names: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any, names: js.Any, usePrototypeKeys: scala.Boolean): js.Any = js.native
  def create(): js.Any = js.native
  def create(name: java.lang.String): js.Any = js.native
  def create(name: java.lang.String, args: js.Any): js.Any = js.native
  def createByAlias(alias: java.lang.String, args: js.Any*): js.Any = js.native
  def createInterceptor(): js.Any = js.native
  def createInterceptor(origFn: js.Any): js.Any = js.native
  def createInterceptor(origFn: js.Any, newFn: js.Any): js.Any = js.native
  def createInterceptor(origFn: js.Any, newFn: js.Any, scope: js.Any): js.Any = js.native
  def createInterceptor(origFn: js.Any, newFn: js.Any, scope: js.Any, returnValue: js.Any): js.Any = js.native
  def createWidget(): scala.Unit = js.native
  def decode(): js.Any = js.native
  def decode(json: java.lang.String): js.Any = js.native
  def decode(json: java.lang.String, safe: scala.Boolean): js.Any = js.native
  def defer(): scala.Double = js.native
  def defer(fn: js.Any): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double, scope: js.Any): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double, scope: js.Any, args: Array): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double, scope: js.Any, args: Array, appendArgs: js.Any): scala.Double = js.native
  def define(): IBase = js.native
  def define(className: java.lang.String): IBase = js.native
  def define(className: java.lang.String, data: js.Any): IBase = js.native
  def define(className: java.lang.String, data: js.Any, createdFn: js.Any): IBase = js.native
  def destroy(args: js.Any*): scala.Unit = js.native
  def dispatch(): scala.Unit = js.native
  def each(): scala.Boolean = js.native
  def each(iterable: js.Any): scala.Boolean = js.native
  def each(iterable: js.Any, fn: js.Any): scala.Boolean = js.native
  def each(iterable: js.Any, fn: js.Any, scope: js.Any): scala.Boolean = js.native
  def each(iterable: js.Any, fn: js.Any, scope: js.Any, reverse: scala.Boolean): scala.Boolean = js.native
  def encode(): java.lang.String = js.native
  def encode(o: js.Any): java.lang.String = js.native
  def exclude(): js.Any = js.native
  def exclude(excludes: Array): js.Any = js.native
  def extend(): js.Any = js.native
  def extend(superclass: js.Any): js.Any = js.native
  def extend(superclass: js.Any, overrides: js.Any): js.Any = js.native
  def factory(): scala.Unit = js.native
  def factory(config: js.Any): scala.Unit = js.native
  def factory(config: js.Any, classReference: java.lang.String): scala.Unit = js.native
  def factory(config: js.Any, classReference: java.lang.String, instance: js.Any): scala.Unit = js.native
  def factory(
    config: js.Any,
    classReference: java.lang.String,
    instance: js.Any,
    aliasNamespace: java.lang.String
  ): scala.Unit = js.native
  def flatten(): Array = js.native
  def flatten(array: Array): Array = js.native
  def fly(): senchaUnderscoreTouchLib.ExtNs.domNs.IElement = js.native
  def fly(element: js.Any): senchaUnderscoreTouchLib.ExtNs.domNs.IElement = js.native
  def fly(element: js.Any, named: java.lang.String): senchaUnderscoreTouchLib.ExtNs.domNs.IElement = js.native
  def get(): senchaUnderscoreTouchLib.ExtNs.domNs.IElement = js.native
  def get(element: js.Any): senchaUnderscoreTouchLib.ExtNs.domNs.IElement = js.native
  def getBody(): IElement = js.native
  def getClassName(): java.lang.String = js.native
  def getClassName(`object`: js.Any): java.lang.String = js.native
  def getCmp(): IComponent = js.native
  def getCmp(id: java.lang.String): IComponent = js.native
  def getDisplayName(): java.lang.String = js.native
  def getDisplayName(`object`: js.Any): java.lang.String = js.native
  def getDoc(): IElement = js.native
  def getDom(): stdLib.HTMLElement = js.native
  def getDom(el: js.Any): stdLib.HTMLElement = js.native
  def getHead(): IElement = js.native
  def getOrientation(): scala.Unit = js.native
  def getStore(): senchaUnderscoreTouchLib.ExtNs.dataNs.IStore = js.native
  def getStore(store: js.Any): senchaUnderscoreTouchLib.ExtNs.dataNs.IStore = js.native
  def htmlDecode(): java.lang.String = js.native
  def htmlDecode(value: java.lang.String): java.lang.String = js.native
  def htmlEncode(): java.lang.String = js.native
  def htmlEncode(value: java.lang.String): java.lang.String = js.native
  def id(): java.lang.String = js.native
  def id(el: js.Any): java.lang.String = js.native
  def id(el: js.Any, prefix: java.lang.String): java.lang.String = js.native
  def isArray(): scala.Boolean = js.native
  def isArray(target: js.Any): scala.Boolean = js.native
  def isBoolean(): scala.Boolean = js.native
  def isBoolean(value: js.Any): scala.Boolean = js.native
  def isDate(): scala.Boolean = js.native
  def isDate(`object`: js.Any): scala.Boolean = js.native
  def isDefined(): scala.Boolean = js.native
  def isDefined(value: js.Any): scala.Boolean = js.native
  def isElement(): scala.Boolean = js.native
  def isElement(value: js.Any): scala.Boolean = js.native
  def isEmpty(): scala.Boolean = js.native
  def isEmpty(value: js.Any): scala.Boolean = js.native
  def isEmpty(value: js.Any, allowEmptyString: scala.Boolean): scala.Boolean = js.native
  def isFunction(): scala.Boolean = js.native
  def isFunction(value: js.Any): scala.Boolean = js.native
  def isIterable(): scala.Boolean = js.native
  def isIterable(value: js.Any): scala.Boolean = js.native
  def isMSDate(): scala.Boolean = js.native
  def isMSDate(value: java.lang.String): scala.Boolean = js.native
  def isNumber(): scala.Boolean = js.native
  def isNumber(value: js.Any): scala.Boolean = js.native
  def isNumeric(): scala.Boolean = js.native
  def isNumeric(value: js.Any): scala.Boolean = js.native
  def isObject(): scala.Boolean = js.native
  def isObject(value: js.Any): scala.Boolean = js.native
  def isPrimitive(): scala.Boolean = js.native
  def isPrimitive(value: js.Any): scala.Boolean = js.native
  def isString(): scala.Boolean = js.native
  def isString(value: js.Any): scala.Boolean = js.native
  def isTextNode(): scala.Boolean = js.native
  def isTextNode(value: js.Any): scala.Boolean = js.native
  def iterate(): scala.Unit = js.native
  def iterate(`object`: js.Any): scala.Unit = js.native
  def iterate(`object`: js.Any, fn: js.Any): scala.Unit = js.native
  def iterate(`object`: js.Any, fn: js.Any, scope: js.Any): scala.Unit = js.native
  def max(): js.Any = js.native
  def max(array: js.Any): js.Any = js.native
  def max(array: js.Any, comparisonFn: js.Any): js.Any = js.native
  def mean(): scala.Double = js.native
  def mean(array: Array): scala.Double = js.native
  def merge(): scala.Unit = js.native
  def min(): js.Any = js.native
  def min(array: js.Any): js.Any = js.native
  def min(array: js.Any, comparisonFn: js.Any): js.Any = js.native
  def namespace(): js.Any = js.native
  def namespace(namespace1: java.lang.String): js.Any = js.native
  def namespace(namespace1: java.lang.String, namespace2: java.lang.String): js.Any = js.native
  def namespace(namespace1: java.lang.String, namespace2: java.lang.String, etc: java.lang.String): js.Any = js.native
  def ns(): scala.Unit = js.native
  def num(): scala.Unit = js.native
  def onReady(): scala.Unit = js.native
  def onReady(fn: js.Any): scala.Unit = js.native
  def onReady(fn: js.Any, scope: js.Any): scala.Unit = js.native
  def onReady(fn: js.Any, scope: js.Any, options: scala.Boolean): scala.Unit = js.native
  def `override`(): scala.Unit = js.native
  def `override`(cls: js.Any): scala.Unit = js.native
  def `override`(cls: js.Any, overrides: js.Any): scala.Unit = js.native
  def pass(): js.Any = js.native
  def pass(fn: js.Any): js.Any = js.native
  def pass(fn: js.Any, args: Array): js.Any = js.native
  def pass(fn: js.Any, args: Array, scope: js.Any): js.Any = js.native
  def pluck(): Array = js.native
  def pluck(array: js.Any): Array = js.native
  def pluck(array: js.Any, propertyName: java.lang.String): Array = js.native
  def preg(): scala.Unit = js.native
  def query(): Array = js.native
  def query(selector: java.lang.String): Array = js.native
  def query(selector: java.lang.String, root: js.Any): Array = js.native
  def redirect(): scala.Unit = js.native
  def reg(): scala.Unit = js.native
  def regApplication(): scala.Unit = js.native
  def regController(): scala.Unit = js.native
  def regLayout(): scala.Unit = js.native
  def regModel(): senchaUnderscoreTouchLib.ExtNs.dataNs.IModel = js.native
  def regModel(name: java.lang.String): senchaUnderscoreTouchLib.ExtNs.dataNs.IModel = js.native
  def regModel(name: java.lang.String, config: js.Any): senchaUnderscoreTouchLib.ExtNs.dataNs.IModel = js.native
  def regStore(): scala.Unit = js.native
  def regStore(id: java.lang.String): scala.Unit = js.native
  def regStore(id: java.lang.String, config: js.Any): scala.Unit = js.native
  def removeNode(): scala.Unit = js.native
  def removeNode(node: stdLib.HTMLElement): scala.Unit = js.native
  def repaint(): scala.Unit = js.native
  def require(): scala.Unit = js.native
  def require(expressions: js.Any): scala.Unit = js.native
  def require(expressions: js.Any, fn: js.Any): scala.Unit = js.native
  def require(expressions: js.Any, fn: js.Any, scope: js.Any): scala.Unit = js.native
  def require(expressions: js.Any, fn: js.Any, scope: js.Any, excludes: js.Any): scala.Unit = js.native
  def select(): senchaUnderscoreTouchLib.ExtNs.domNs.ICompositeElementLite = js.native
  def select(selector: js.Any): senchaUnderscoreTouchLib.ExtNs.domNs.ICompositeElementLite = js.native
  def select(selector: js.Any, composite: scala.Boolean): senchaUnderscoreTouchLib.ExtNs.domNs.ICompositeElementLite = js.native
  def setup(): scala.Unit = js.native
  def setup(config: js.Any): scala.Unit = js.native
  def sum(): scala.Double = js.native
  def sum(array: Array): scala.Double = js.native
  def syncRequire(): scala.Unit = js.native
  def syncRequire(expressions: js.Any): scala.Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any): scala.Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any, scope: js.Any): scala.Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any, scope: js.Any, excludes: js.Any): scala.Unit = js.native
  def toArray(): Array = js.native
  def toArray(iterable: js.Any): Array = js.native
  def toArray(iterable: js.Any, start: scala.Double): Array = js.native
  def toArray(iterable: js.Any, start: scala.Double, end: scala.Double): Array = js.native
  def `type`(): java.lang.String = js.native
  def `type`(value: js.Any): java.lang.String = js.native
  def typeOf(): java.lang.String = js.native
  def typeOf(value: js.Any): java.lang.String = js.native
  def unique(): Array = js.native
  def unique(array: Array): Array = js.native
  def urlAppend(): java.lang.String = js.native
  def urlAppend(url: java.lang.String): java.lang.String = js.native
  def urlAppend(url: java.lang.String, string: java.lang.String): java.lang.String = js.native
  def urlDecode(): scala.Unit = js.native
  def urlEncode(): scala.Unit = js.native
  def valueFrom(): js.Any = js.native
  def valueFrom(value: js.Any): js.Any = js.native
  def valueFrom(value: js.Any, defaultValue: js.Any): js.Any = js.native
  def valueFrom(value: js.Any, defaultValue: js.Any, allowBlank: scala.Boolean): js.Any = js.native
  def widget(): js.Any = js.native
  def widget(name: java.lang.String): js.Any = js.native
}

