package typings.sparkpost.mod

import typings.request.mod.Options
import typings.sparkpost.AnonCallback
import typings.sparkpost.AnonCallbackCreate
import typings.sparkpost.AnonCallbackCreateDelete
import typings.sparkpost.AnonCallbackCreateDeleteDomain
import typings.sparkpost.AnonCallbackCreateDeleteGet
import typings.sparkpost.AnonCallbackCreateDeleteGetGetBatchStatus
import typings.sparkpost.AnonCallbackCreateGet
import typings.sparkpost.AnonCallbackDelete
import typings.sparkpost.AnonCallbackGet
import typings.sparkpost.AnonCallbackParameters
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait SparkPost extends js.Object {
  /** Specifying an inbound domain enables you to customize the address to which inbound messages are sent. */
  var inboundDomains: AnonCallback = js.native
  /** The Message Events API provides the means to search the raw events generated by SparkPost. */
  var messageEvents: AnonCallbackParameters = js.native
  /** A recipient list is a collection of recipients that can be used in a transmission. */
  var recipientLists: AnonCallbackCreate = js.native
  /** Relay Webhooks are a way to instruct SparkPost to accept inbound email on your behalf and forward it to you over HTTP for your own consumption. */
  var relayWebhooks: AnonCallbackCreateDelete = js.native
  var sendingDomains: AnonCallbackCreateDeleteDomain = js.native
  var subaccounts: AnonCallbackCreateGet = js.native
  var suppressionList: AnonCallbackDelete = js.native
  var templates: AnonCallbackCreateDeleteGet = js.native
  var transmissions: AnonCallbackGet = js.native
  var webhooks: AnonCallbackCreateDeleteGetGetBatchStatus = js.native
  def delete(options: Options): js.Promise[Response[_]] = js.native
  def delete(options: Options, callback: Callback[_]): Unit = js.native
  def get(options: Options): js.Promise[Response[_]] = js.native
  def get(options: Options, callback: Callback[_]): Unit = js.native
  def post(options: Options): js.Promise[Response[_]] = js.native
  def post(options: Options, callback: Callback[_]): Unit = js.native
  def put(options: Options): js.Promise[Response[_]] = js.native
  def put(options: Options, callback: Callback[_]): Unit = js.native
  def request(options: Options): js.Promise[Response[_]] = js.native
  def request(options: Options, callback: Callback[_]): Unit = js.native
}

