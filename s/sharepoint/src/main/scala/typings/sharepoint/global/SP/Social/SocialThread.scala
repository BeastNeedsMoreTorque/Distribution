package typings.sharepoint.global.SP.Social

import typings.sharepoint.SP.SerializationContext
import typings.sharepoint.SP.XmlWriter
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/** Specifies a thread that is stored on the server.
  The thread contains a root post and zero or more reply posts. */
@JSGlobal("SP.Social.SocialThread")
@js.native
class SocialThread ()
  extends typings.sharepoint.SP.Social.SocialThread {
  /* CompleteClass */
  override def customFromJson(obj: js.Any): Boolean = js.native
  /* CompleteClass */
  override def customWriteToXml(writer: XmlWriter, serializationContext: SerializationContext): Boolean = js.native
  /* CompleteClass */
  override def fromJson(obj: js.Any): Unit = js.native
  /** Specifies the users who have created a post in the returned thread and also contains any users, documents, sites, and tags that are referenced in any of the posts in the returned thread. */
  /* CompleteClass */
  override def get_actors(): js.Array[typings.sharepoint.SP.Social.SocialActor] = js.native
  /** Specifies attributes of the thread, such as whether the current user can reply or lock the thread and whether the thread is a digest of a thread on the server, whether the number of replies has reached the maximum, and whether the thread is locked. */
  /* CompleteClass */
  override def get_attributes(): typings.sharepoint.SP.Social.SocialThreadAttributes = js.native
  /** Specifies the unique identification of the thread. */
  /* CompleteClass */
  override def get_id(): String = js.native
  /** Specifies the thread owner as an index into the Actors array.
    Typically, the thread owner is the user who created the root post, but the thread owner can be any user included in the Actors array. */
  /* CompleteClass */
  override def get_ownerIndex(): Double = js.native
  /** Specifies a URI that is a permanent reference to the thread, if such a permanent reference is available.  */
  /* CompleteClass */
  override def get_permalink(): String = js.native
  /** Specifies a reference to a post in another thread.
    The PostReference property is available only if the ThreadType has a value of ReplyReference, LikeReference, MentionReference, or TagReference.  */
  /* CompleteClass */
  override def get_postReference(): typings.sharepoint.SP.Social.SocialPostReference = js.native
  /** Returns an array of zero or more reply posts.
    The server can return a subset of the reply posts that are stored on the server. */
  /* CompleteClass */
  override def get_replies(): js.Array[typings.sharepoint.SP.Social.SocialPost] = js.native
  /* CompleteClass */
  override def get_rootPost(): typings.sharepoint.SP.Social.SocialPost = js.native
  /** Provides information about conditions that were encountered retrieving the thread that did not prevent the operation from completing. */
  /* CompleteClass */
  override def get_status(): typings.sharepoint.SP.Social.SocialStatusCode = js.native
  /** Specifies if the thread is a normal thread created by one or more CreatePost calls or a reference post generated by the server when a user replies to a post, likes a post, or creates a post with a tag or mention */
  /* CompleteClass */
  override def get_threadType(): typings.sharepoint.SP.Social.SocialThreadType = js.native
  /* CompleteClass */
  override def get_totalReplyCount(): Double = js.native
  /* CompleteClass */
  override def get_typeId(): String = js.native
  /* CompleteClass */
  override def writeToXml(writer: XmlWriter, serializationContext: SerializationContext): Unit = js.native
}

