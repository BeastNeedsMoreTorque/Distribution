package typings.titanium.Titanium.UI

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
		 * Fired when this email dialog has completed sending an email.
		 */
trait EmailDialogCompleteEvent extends EmailDialogBaseEvent {
  /**
  			 * Error code.
  			 * Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
  			 * was generated by the operating system, that system's error value is used.
  			 * Otherwise, this value will be -1.
  			 */
  var code: Double
  /**
  			 * Error message, if any returned. Will be undefined if `success` is `true`.
  			 */
  var error: String
  /**
  			 * Status of the email send process.
  			 * The `SAVED` and `CANCELLED` constants are iOS only.
  			 * On Android, this property will return `SENT` when the user discards or saves
  			 * a message.
  			 */
  var result: Double
  /**
  			 * Indicates if the email was handled successfully.
  			 * Returns `true` if request succeeded, `false` otherwise. Note that emails being
  			 * deleted or saved for later do count as success.
  			 */
  var success: Boolean
}

object EmailDialogCompleteEvent {
  @scala.inline
  def apply(code: Double, error: String, result: Double, source: EmailDialog, success: Boolean): EmailDialogCompleteEvent = {
    val __obj = js.Dynamic.literal(code = code.asInstanceOf[js.Any], error = error.asInstanceOf[js.Any], result = result.asInstanceOf[js.Any], source = source.asInstanceOf[js.Any], success = success.asInstanceOf[js.Any])
    __obj.asInstanceOf[EmailDialogCompleteEvent]
  }
}

