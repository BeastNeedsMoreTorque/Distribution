package typings.titanium.Titanium.Media

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
		 * Fired when movie playback ends or a user exits playback.
		 */
trait VideoPlayerCompleteEvent extends VideoPlayerBaseEvent {
  /**
  			 * Error code.
  			 * Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
  			 * was generated by the operating system, that system's error value is used.
  			 * Otherwise, this value will be -1.
  			 */
  var code: Double
  /**
  			 * Error message, if any returned. Will be undefined if `success` is `true`.
  			 */
  var error: String
  /**
  			 * Reason that playback ended.
  			 */
  var reason: Double
  /**
  			 * Indicates if the video was played successfully. User exit counts as a success.
  			 * Returns `true` if `reason` is not
  			 * [VIDEO_FINISH_REASON_PLAYBACK_ERROR](Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ERROR),
  			 * `false` otherwise.
  			 */
  var success: Boolean
}

object VideoPlayerCompleteEvent {
  @scala.inline
  def apply(code: Double, error: String, reason: Double, source: VideoPlayer, success: Boolean): VideoPlayerCompleteEvent = {
    val __obj = js.Dynamic.literal(code = code.asInstanceOf[js.Any], error = error.asInstanceOf[js.Any], reason = reason.asInstanceOf[js.Any], source = source.asInstanceOf[js.Any], success = success.asInstanceOf[js.Any])
    __obj.asInstanceOf[VideoPlayerCompleteEvent]
  }
}

