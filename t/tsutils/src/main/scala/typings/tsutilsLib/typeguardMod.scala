package typings
package tsutilsLib

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@JSImport("tsutils/typeguard", JSImport.Namespace)
@js.native
object typeguardMod extends js.Object {
  def isAccessorDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is AccessorDeclaration */scala.Boolean = js.native
  def isArrayBindingPattern(node: typescriptLib.typescriptMod.tsNs.Node): /* is ArrayBindingPattern */scala.Boolean = js.native
  def isArrayLiteralExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is ArrayLiteralExpression */scala.Boolean = js.native
  def isArrayTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is ArrayTypeNode */scala.Boolean = js.native
  def isArrowFunction(node: typescriptLib.typescriptMod.tsNs.Node): /* is ArrowFunction */scala.Boolean = js.native
  def isAsExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is AsExpression */scala.Boolean = js.native
  def isAssertionExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is AssertionExpression */scala.Boolean = js.native
  def isAwaitExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is AwaitExpression */scala.Boolean = js.native
  def isBinaryExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is BinaryExpression */scala.Boolean = js.native
  def isBindingElement(node: typescriptLib.typescriptMod.tsNs.Node): /* is BindingElement */scala.Boolean = js.native
  def isBindingPattern(node: typescriptLib.typescriptMod.tsNs.Node): /* is BindingPattern */scala.Boolean = js.native
  def isBlock(node: typescriptLib.typescriptMod.tsNs.Node): /* is Block */scala.Boolean = js.native
  def isBlockLike(node: typescriptLib.typescriptMod.tsNs.Node): /* is BlockLike */scala.Boolean = js.native
  def isBreakOrContinueStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is BreakOrContinueStatement */scala.Boolean = js.native
  def isBreakStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is BreakStatement */scala.Boolean = js.native
  def isCallExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is CallExpression */scala.Boolean = js.native
  def isCallLikeExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is CallLikeExpression */scala.Boolean = js.native
  def isCallSignatureDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is CallSignatureDeclaration */scala.Boolean = js.native
  def isCaseBlock(node: typescriptLib.typescriptMod.tsNs.Node): /* is CaseBlock */scala.Boolean = js.native
  def isCaseClause(node: typescriptLib.typescriptMod.tsNs.Node): /* is CaseClause */scala.Boolean = js.native
  def isCaseOrDefaultClause(node: typescriptLib.typescriptMod.tsNs.Node): /* is CaseOrDefaultClause */scala.Boolean = js.native
  def isCatchClause(node: typescriptLib.typescriptMod.tsNs.Node): /* is CatchClause */scala.Boolean = js.native
  def isClassDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ClassDeclaration */scala.Boolean = js.native
  def isClassExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is ClassExpression */scala.Boolean = js.native
  def isClassLikeDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ClassLikeDeclaration */scala.Boolean = js.native
  def isCommaListExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is CommaListExpression */scala.Boolean = js.native
  def isComputedPropertyName(node: typescriptLib.typescriptMod.tsNs.Node): /* is ComputedPropertyName */scala.Boolean = js.native
  def isConditionalExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is ConditionalExpression */scala.Boolean = js.native
  def isConditionalType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is ConditionalType */scala.Boolean = js.native
  def isConditionalTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is ConditionalTypeNode */scala.Boolean = js.native
  def isConstructSignatureDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ConstructSignatureDeclaration */scala.Boolean = js.native
  def isConstructorDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ConstructorDeclaration */scala.Boolean = js.native
  def isConstructorTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is ConstructorTypeNode */scala.Boolean = js.native
  def isContinueStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ContinueStatement */scala.Boolean = js.native
  def isDebuggerStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is DebuggerStatement */scala.Boolean = js.native
  def isDecorator(node: typescriptLib.typescriptMod.tsNs.Node): /* is Decorator */scala.Boolean = js.native
  def isDefaultClause(node: typescriptLib.typescriptMod.tsNs.Node): /* is DefaultClause */scala.Boolean = js.native
  def isDeleteExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is DeleteExpression */scala.Boolean = js.native
  def isDoStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is DoStatement */scala.Boolean = js.native
  def isElementAccessExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is ElementAccessExpression */scala.Boolean = js.native
  def isEmptyStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is EmptyStatement */scala.Boolean = js.native
  def isEntityName(node: typescriptLib.typescriptMod.tsNs.Node): /* is EntityName */scala.Boolean = js.native
  def isEntityNameExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is EntityNameExpression */scala.Boolean = js.native
  def isEnumDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is EnumDeclaration */scala.Boolean = js.native
  def isEnumMember(node: typescriptLib.typescriptMod.tsNs.Node): /* is EnumMember */scala.Boolean = js.native
  def isEnumType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is EnumType */scala.Boolean = js.native
  def isExportAssignment(node: typescriptLib.typescriptMod.tsNs.Node): /* is ExportAssignment */scala.Boolean = js.native
  def isExportDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ExportDeclaration */scala.Boolean = js.native
  def isExportSpecifier(node: typescriptLib.typescriptMod.tsNs.Node): /* is ExportSpecifier */scala.Boolean = js.native
  def isExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is Expression */scala.Boolean = js.native
  def isExpressionStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ExpressionStatement */scala.Boolean = js.native
  def isExpressionWithTypeArguments(node: typescriptLib.typescriptMod.tsNs.Node): /* is ExpressionWithTypeArguments */scala.Boolean = js.native
  def isExternalModuleReference(node: typescriptLib.typescriptMod.tsNs.Node): /* is ExternalModuleReference */scala.Boolean = js.native
  def isForInOrOfStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ForInOrOfStatement */scala.Boolean = js.native
  def isForInStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ForInStatement */scala.Boolean = js.native
  def isForOfStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ForOfStatement */scala.Boolean = js.native
  def isForStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ForStatement */scala.Boolean = js.native
  def isFunctionDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is FunctionDeclaration */scala.Boolean = js.native
  def isFunctionExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is FunctionExpression */scala.Boolean = js.native
  def isFunctionTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is FunctionTypeNode */scala.Boolean = js.native
  def isGenericType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is GenericType */scala.Boolean = js.native
  def isGetAccessorDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is GetAccessorDeclaration */scala.Boolean = js.native
  def isIdentifier(node: typescriptLib.typescriptMod.tsNs.Node): /* is Identifier */scala.Boolean = js.native
  def isIfStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is IfStatement */scala.Boolean = js.native
  def isImportClause(node: typescriptLib.typescriptMod.tsNs.Node): /* is ImportClause */scala.Boolean = js.native
  def isImportDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ImportDeclaration */scala.Boolean = js.native
  def isImportEqualsDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ImportEqualsDeclaration */scala.Boolean = js.native
  def isImportSpecifier(node: typescriptLib.typescriptMod.tsNs.Node): /* is ImportSpecifier */scala.Boolean = js.native
  def isImportTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is ImportTypeNode */scala.Boolean = js.native
  def isIndexSignatureDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is IndexSignatureDeclaration */scala.Boolean = js.native
  def isIndexedAccessType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is IndexedAccessType */scala.Boolean = js.native
  def isIndexedAccessTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is IndexedAccessTypeNode */scala.Boolean = js.native
  def isIndexedAccessype(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is IndexType */scala.Boolean = js.native
  def isInferTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is InferTypeNode */scala.Boolean = js.native
  def isInstantiableType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is InstantiableType */scala.Boolean = js.native
  def isInterfaceDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is InterfaceDeclaration */scala.Boolean = js.native
  def isInterfaceType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is InterfaceType */scala.Boolean = js.native
  def isIntersectionType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is IntersectionType */scala.Boolean = js.native
  def isIntersectionTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is IntersectionTypeNode */scala.Boolean = js.native
  def isIterationStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is IterationStatement */scala.Boolean = js.native
  def isJsDoc(node: typescriptLib.typescriptMod.tsNs.Node): /* is JSDoc */scala.Boolean = js.native
  def isJsxAttribute(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxAttribute */scala.Boolean = js.native
  def isJsxAttributeLike(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxAttributeLike */scala.Boolean = js.native
  def isJsxAttributes(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxAttributes */scala.Boolean = js.native
  def isJsxClosingElement(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxClosingElement */scala.Boolean = js.native
  def isJsxClosingFragment(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxClosingFragment */scala.Boolean = js.native
  def isJsxElement(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxElement */scala.Boolean = js.native
  def isJsxExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxExpression */scala.Boolean = js.native
  def isJsxFragment(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxFragment */scala.Boolean = js.native
  def isJsxFramgment(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxFragment */scala.Boolean = js.native
  def isJsxOpeningElement(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxOpeningElement */scala.Boolean = js.native
  def isJsxOpeningFragment(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxOpeningFragment */scala.Boolean = js.native
  def isJsxOpeningLikeElement(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxOpeningLikeElement */scala.Boolean = js.native
  def isJsxSelfClosingElement(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxSelfClosingElement */scala.Boolean = js.native
  def isJsxSpreadAttribute(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxSpreadAttribute */scala.Boolean = js.native
  def isJsxText(node: typescriptLib.typescriptMod.tsNs.Node): /* is JsxText */scala.Boolean = js.native
  def isLabeledStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is LabeledStatement */scala.Boolean = js.native
  def isLiteralExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is LiteralExpression */scala.Boolean = js.native
  def isLiteralType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is LiteralType */scala.Boolean = js.native
  def isLiteralTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is LiteralTypeNode */scala.Boolean = js.native
  def isMappedTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is MappedTypeNode */scala.Boolean = js.native
  def isMetaProperty(node: typescriptLib.typescriptMod.tsNs.Node): /* is MetaProperty */scala.Boolean = js.native
  def isMethodDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is MethodDeclaration */scala.Boolean = js.native
  def isMethodSignature(node: typescriptLib.typescriptMod.tsNs.Node): /* is MethodSignature */scala.Boolean = js.native
  def isModuleBlock(node: typescriptLib.typescriptMod.tsNs.Node): /* is ModuleBlock */scala.Boolean = js.native
  def isModuleDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ModuleDeclaration */scala.Boolean = js.native
  def isNamedExports(node: typescriptLib.typescriptMod.tsNs.Node): /* is NamedExports */scala.Boolean = js.native
  def isNamedImports(node: typescriptLib.typescriptMod.tsNs.Node): /* is NamedImports */scala.Boolean = js.native
  def isNamespaceDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is NamespaceDeclaration */scala.Boolean = js.native
  def isNamespaceExportDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is NamespaceExportDeclaration */scala.Boolean = js.native
  def isNamespaceImport(node: typescriptLib.typescriptMod.tsNs.Node): /* is NamespaceImport */scala.Boolean = js.native
  def isNewExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is NewExpression */scala.Boolean = js.native
  def isNoSubstitutionTemplateLiteral(node: typescriptLib.typescriptMod.tsNs.Node): /* is NoSubstitutionTemplateLiteral */scala.Boolean = js.native
  def isNonNullExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is NonNullExpression */scala.Boolean = js.native
  def isNumericLiteral(node: typescriptLib.typescriptMod.tsNs.Node): /* is NumericLiteral */scala.Boolean = js.native
  def isObjectBindingPattern(node: typescriptLib.typescriptMod.tsNs.Node): /* is ObjectBindingPattern */scala.Boolean = js.native
  def isObjectLiteralExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is ObjectLiteralExpression */scala.Boolean = js.native
  def isObjectType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is ObjectType */scala.Boolean = js.native
  def isOmittedExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is OmittedExpression */scala.Boolean = js.native
  def isParameterDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is ParameterDeclaration */scala.Boolean = js.native
  def isParenthesizedExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is ParenthesizedExpression */scala.Boolean = js.native
  def isParenthesizedTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is ParenthesizedTypeNode */scala.Boolean = js.native
  def isPostfixUnaryExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is PostfixUnaryExpression */scala.Boolean = js.native
  def isPrefixUnaryExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is PrefixUnaryExpression */scala.Boolean = js.native
  def isPropertyAccessExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is PropertyAccessExpression */scala.Boolean = js.native
  def isPropertyAssignment(node: typescriptLib.typescriptMod.tsNs.Node): /* is PropertyAssignment */scala.Boolean = js.native
  def isPropertyDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is PropertyDeclaration */scala.Boolean = js.native
  def isPropertySignature(node: typescriptLib.typescriptMod.tsNs.Node): /* is PropertySignature */scala.Boolean = js.native
  def isQualifiedName(node: typescriptLib.typescriptMod.tsNs.Node): /* is QualifiedName */scala.Boolean = js.native
  def isRegularExpressionLiteral(node: typescriptLib.typescriptMod.tsNs.Node): /* is RegularExpressionLiteral */scala.Boolean = js.native
  def isReturnStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ReturnStatement */scala.Boolean = js.native
  def isSetAccessorDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is SetAccessorDeclaration */scala.Boolean = js.native
  def isShorthandPropertyAssignment(node: typescriptLib.typescriptMod.tsNs.Node): /* is ShorthandPropertyAssignment */scala.Boolean = js.native
  def isSignatureDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is SignatureDeclaration */scala.Boolean = js.native
  def isSourceFile(node: typescriptLib.typescriptMod.tsNs.Node): /* is SourceFile */scala.Boolean = js.native
  def isSpreadAssignment(node: typescriptLib.typescriptMod.tsNs.Node): /* is SpreadAssignment */scala.Boolean = js.native
  def isSpreadElement(node: typescriptLib.typescriptMod.tsNs.Node): /* is SpreadElement */scala.Boolean = js.native
  def isStringLiteral(node: typescriptLib.typescriptMod.tsNs.Node): /* is StringLiteral */scala.Boolean = js.native
  def isSubstitutionType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is SubstitutionType */scala.Boolean = js.native
  def isSwitchStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is SwitchStatement */scala.Boolean = js.native
  def isSyntaxList(node: typescriptLib.typescriptMod.tsNs.Node): /* is SyntaxList */scala.Boolean = js.native
  def isTaggedTemplateExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is TaggedTemplateExpression */scala.Boolean = js.native
  def isTemplateExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is TemplateExpression */scala.Boolean = js.native
  def isTemplateLiteral(node: typescriptLib.typescriptMod.tsNs.Node): /* is TemplateLiteral */scala.Boolean = js.native
  def isTextualLiteral(node: typescriptLib.typescriptMod.tsNs.Node): /* is LiteralExpression */scala.Boolean = js.native
  def isThrowStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is ThrowStatement */scala.Boolean = js.native
  def isTryStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is TryStatement */scala.Boolean = js.native
  def isTupleTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is TupleTypeNode */scala.Boolean = js.native
  def isTypeAliasDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeAliasDeclaration */scala.Boolean = js.native
  def isTypeAssertion(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeAssertion */scala.Boolean = js.native
  def isTypeLiteralNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeLiteralNode */scala.Boolean = js.native
  def isTypeOfExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeOfExpression */scala.Boolean = js.native
  def isTypeOperatorNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeOperatorNode */scala.Boolean = js.native
  def isTypeParameter(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is TypeParameter */scala.Boolean = js.native
  def isTypeParameterDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeParameterDeclaration */scala.Boolean = js.native
  def isTypePredicateNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypePredicateNode */scala.Boolean = js.native
  def isTypeQueryNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeQueryNode */scala.Boolean = js.native
  def isTypeReference(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is TypeReference */scala.Boolean = js.native
  def isTypeReferenceNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is TypeReferenceNode */scala.Boolean = js.native
  def isTypeVariable(`type`: typescriptLib.typescriptMod.tsNs.Type): scala.Boolean = js.native
  def isUnionOrIntersectionType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is UnionOrIntersectionType */scala.Boolean = js.native
  def isUnionType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is UnionType */scala.Boolean = js.native
  def isUnionTypeNode(node: typescriptLib.typescriptMod.tsNs.Node): /* is UnionTypeNode */scala.Boolean = js.native
  def isUniqueESSymbolType(`type`: typescriptLib.typescriptMod.tsNs.Type): /* is UniqueESSymbolType */scala.Boolean = js.native
  def isVariableDeclaration(node: typescriptLib.typescriptMod.tsNs.Node): /* is VariableDeclaration */scala.Boolean = js.native
  def isVariableDeclarationList(node: typescriptLib.typescriptMod.tsNs.Node): /* is VariableDeclarationList */scala.Boolean = js.native
  def isVariableStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is VariableStatement */scala.Boolean = js.native
  def isVoidExpression(node: typescriptLib.typescriptMod.tsNs.Node): /* is VoidExpression */scala.Boolean = js.native
  def isWhileStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is WhileStatement */scala.Boolean = js.native
  def isWithStatement(node: typescriptLib.typescriptMod.tsNs.Node): /* is WithStatement */scala.Boolean = js.native
}

