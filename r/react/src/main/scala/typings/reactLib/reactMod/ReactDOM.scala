package typings
package reactLib.reactMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait ReactDOM
  extends ReactHTML
     with ReactSVG

object ReactDOM {
  @scala.inline
  def apply(
    a: DetailedHTMLFactory[AnchorHTMLAttributes[reactLib.HTMLAnchorElement], reactLib.HTMLAnchorElement],
    abbr: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    address: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    animate: SVGFactory,
    area: DetailedHTMLFactory[AreaHTMLAttributes[reactLib.HTMLAreaElement], reactLib.HTMLAreaElement],
    article: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    aside: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    audio: DetailedHTMLFactory[AudioHTMLAttributes[reactLib.HTMLAudioElement], reactLib.HTMLAudioElement],
    b: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    base: DetailedHTMLFactory[BaseHTMLAttributes[reactLib.HTMLBaseElement], reactLib.HTMLBaseElement],
    bdi: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    bdo: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    big: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    blockquote: DetailedHTMLFactory[BlockquoteHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    body: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLBodyElement], reactLib.HTMLBodyElement],
    br: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLBRElement], reactLib.HTMLBRElement],
    button: DetailedHTMLFactory[ButtonHTMLAttributes[reactLib.HTMLButtonElement], reactLib.HTMLButtonElement],
    canvas: DetailedHTMLFactory[CanvasHTMLAttributes[reactLib.HTMLCanvasElement], reactLib.HTMLCanvasElement],
    caption: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    circle: SVGFactory,
    cite: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    clipPath: SVGFactory,
    code: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    col: DetailedHTMLFactory[ColHTMLAttributes[reactLib.HTMLTableColElement], reactLib.HTMLTableColElement],
    colgroup: DetailedHTMLFactory[ColgroupHTMLAttributes[reactLib.HTMLTableColElement], reactLib.HTMLTableColElement],
    data: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    datalist: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLDataListElement], reactLib.HTMLDataListElement],
    dd: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    defs: SVGFactory,
    del: DetailedHTMLFactory[DelHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    desc: SVGFactory,
    details: DetailedHTMLFactory[DetailsHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    dfn: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    dialog: DetailedHTMLFactory[DialogHTMLAttributes[reactLib.HTMLDialogElement], reactLib.HTMLDialogElement],
    div: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLDivElement], reactLib.HTMLDivElement],
    dl: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLDListElement], reactLib.HTMLDListElement],
    dt: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    ellipse: SVGFactory,
    em: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    embed: DetailedHTMLFactory[EmbedHTMLAttributes[reactLib.HTMLEmbedElement], reactLib.HTMLEmbedElement],
    feBlend: SVGFactory,
    feColorMatrix: SVGFactory,
    feComponentTransfer: SVGFactory,
    feComposite: SVGFactory,
    feConvolveMatrix: SVGFactory,
    feDiffuseLighting: SVGFactory,
    feDisplacementMap: SVGFactory,
    feDistantLight: SVGFactory,
    feDropShadow: SVGFactory,
    feFlood: SVGFactory,
    feFuncA: SVGFactory,
    feFuncB: SVGFactory,
    feFuncG: SVGFactory,
    feFuncR: SVGFactory,
    feGaussianBlur: SVGFactory,
    feImage: SVGFactory,
    feMerge: SVGFactory,
    feMergeNode: SVGFactory,
    feMorphology: SVGFactory,
    feOffset: SVGFactory,
    fePointLight: SVGFactory,
    feSpecularLighting: SVGFactory,
    feSpotLight: SVGFactory,
    feTile: SVGFactory,
    feTurbulence: SVGFactory,
    fieldset: DetailedHTMLFactory[FieldsetHTMLAttributes[reactLib.HTMLFieldSetElement], reactLib.HTMLFieldSetElement],
    figcaption: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    figure: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    filter: SVGFactory,
    footer: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    foreignObject: SVGFactory,
    form: DetailedHTMLFactory[FormHTMLAttributes[reactLib.HTMLFormElement], reactLib.HTMLFormElement],
    g: SVGFactory,
    h1: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLHeadingElement], reactLib.HTMLHeadingElement],
    h2: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLHeadingElement], reactLib.HTMLHeadingElement],
    h3: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLHeadingElement], reactLib.HTMLHeadingElement],
    h4: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLHeadingElement], reactLib.HTMLHeadingElement],
    h5: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLHeadingElement], reactLib.HTMLHeadingElement],
    h6: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLHeadingElement], reactLib.HTMLHeadingElement],
    head: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLHeadElement],
    header: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    hgroup: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    hr: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLHRElement], reactLib.HTMLHRElement],
    html: DetailedHTMLFactory[HtmlHTMLAttributes[reactLib.HTMLHtmlElement], reactLib.HTMLHtmlElement],
    i: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    iframe: DetailedHTMLFactory[IframeHTMLAttributes[reactLib.HTMLIFrameElement], reactLib.HTMLIFrameElement],
    image: SVGFactory,
    img: DetailedHTMLFactory[ImgHTMLAttributes[reactLib.HTMLImageElement], reactLib.HTMLImageElement],
    input: DetailedHTMLFactory[InputHTMLAttributes[reactLib.HTMLInputElement], reactLib.HTMLInputElement],
    ins: DetailedHTMLFactory[InsHTMLAttributes[reactLib.HTMLModElement], reactLib.HTMLModElement],
    kbd: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    keygen: DetailedHTMLFactory[KeygenHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    label: DetailedHTMLFactory[LabelHTMLAttributes[reactLib.HTMLLabelElement], reactLib.HTMLLabelElement],
    legend: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLLegendElement], reactLib.HTMLLegendElement],
    li: DetailedHTMLFactory[LiHTMLAttributes[reactLib.HTMLLIElement], reactLib.HTMLLIElement],
    line: SVGFactory,
    linearGradient: SVGFactory,
    link: DetailedHTMLFactory[LinkHTMLAttributes[reactLib.HTMLLinkElement], reactLib.HTMLLinkElement],
    main: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    map: DetailedHTMLFactory[MapHTMLAttributes[reactLib.HTMLMapElement], reactLib.HTMLMapElement],
    mark: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    marker: SVGFactory,
    mask: SVGFactory,
    menu: DetailedHTMLFactory[MenuHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    menuitem: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    meta: DetailedHTMLFactory[MetaHTMLAttributes[reactLib.HTMLMetaElement], reactLib.HTMLMetaElement],
    metadata: SVGFactory,
    meter: DetailedHTMLFactory[MeterHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    nav: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    noscript: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    `object`: DetailedHTMLFactory[ObjectHTMLAttributes[reactLib.HTMLObjectElement], reactLib.HTMLObjectElement],
    ol: DetailedHTMLFactory[OlHTMLAttributes[reactLib.HTMLOListElement], reactLib.HTMLOListElement],
    optgroup: DetailedHTMLFactory[OptgroupHTMLAttributes[reactLib.HTMLOptGroupElement], reactLib.HTMLOptGroupElement],
    option: DetailedHTMLFactory[OptionHTMLAttributes[reactLib.HTMLOptionElement], reactLib.HTMLOptionElement],
    output: DetailedHTMLFactory[OutputHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    p: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLParagraphElement], reactLib.HTMLParagraphElement],
    param: DetailedHTMLFactory[ParamHTMLAttributes[reactLib.HTMLParamElement], reactLib.HTMLParamElement],
    path: SVGFactory,
    pattern: SVGFactory,
    picture: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    polygon: SVGFactory,
    polyline: SVGFactory,
    pre: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLPreElement], reactLib.HTMLPreElement],
    progress: DetailedHTMLFactory[ProgressHTMLAttributes[reactLib.HTMLProgressElement], reactLib.HTMLProgressElement],
    q: DetailedHTMLFactory[QuoteHTMLAttributes[reactLib.HTMLQuoteElement], reactLib.HTMLQuoteElement],
    radialGradient: SVGFactory,
    rect: SVGFactory,
    rp: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    rt: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    ruby: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    s: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    samp: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    script: DetailedHTMLFactory[ScriptHTMLAttributes[reactLib.HTMLScriptElement], reactLib.HTMLScriptElement],
    section: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    select: DetailedHTMLFactory[SelectHTMLAttributes[reactLib.HTMLSelectElement], reactLib.HTMLSelectElement],
    small: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    source: DetailedHTMLFactory[SourceHTMLAttributes[reactLib.HTMLSourceElement], reactLib.HTMLSourceElement],
    span: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLSpanElement], reactLib.HTMLSpanElement],
    stop: SVGFactory,
    strong: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    style: DetailedHTMLFactory[StyleHTMLAttributes[reactLib.HTMLStyleElement], reactLib.HTMLStyleElement],
    sub: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    summary: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    sup: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    svg: SVGFactory,
    switch: SVGFactory,
    symbol: SVGFactory,
    table: DetailedHTMLFactory[TableHTMLAttributes[reactLib.HTMLTableElement], reactLib.HTMLTableElement],
    tbody: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLTableSectionElement], reactLib.HTMLTableSectionElement],
    td: DetailedHTMLFactory[
      TdHTMLAttributes[reactLib.HTMLTableDataCellElement], 
      reactLib.HTMLTableDataCellElement
    ],
    text: SVGFactory,
    textPath: SVGFactory,
    textarea: DetailedHTMLFactory[TextareaHTMLAttributes[reactLib.HTMLTextAreaElement], reactLib.HTMLTextAreaElement],
    tfoot: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLTableSectionElement], reactLib.HTMLTableSectionElement],
    th: DetailedHTMLFactory[
      ThHTMLAttributes[reactLib.HTMLTableHeaderCellElement], 
      reactLib.HTMLTableHeaderCellElement
    ],
    thead: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLTableSectionElement], reactLib.HTMLTableSectionElement],
    time: DetailedHTMLFactory[TimeHTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    title: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLTitleElement], reactLib.HTMLTitleElement],
    tr: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLTableRowElement], reactLib.HTMLTableRowElement],
    track: DetailedHTMLFactory[TrackHTMLAttributes[reactLib.HTMLTrackElement], reactLib.HTMLTrackElement],
    tspan: SVGFactory,
    u: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    ul: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLUListElement], reactLib.HTMLUListElement],
    use: SVGFactory,
    `var`: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    video: DetailedHTMLFactory[VideoHTMLAttributes[reactLib.HTMLVideoElement], reactLib.HTMLVideoElement],
    view: SVGFactory,
    wbr: DetailedHTMLFactory[HTMLAttributes[reactLib.HTMLElement], reactLib.HTMLElement],
    webview: DetailedHTMLFactory[WebViewHTMLAttributes[reactLib.HTMLWebViewElement], reactLib.HTMLWebViewElement]
  ): ReactDOM = {
    val __obj = js.Dynamic.literal(a = a, abbr = abbr, address = address, animate = animate, area = area, article = article, aside = aside, audio = audio, b = b, base = base, bdi = bdi, bdo = bdo, big = big, blockquote = blockquote, body = body, br = br, button = button, canvas = canvas, caption = caption, circle = circle, cite = cite, clipPath = clipPath, code = code, col = col, colgroup = colgroup, data = data, datalist = datalist, dd = dd, defs = defs, del = del, desc = desc, details = details, dfn = dfn, dialog = dialog, div = div, dl = dl, dt = dt, ellipse = ellipse, em = em, embed = embed, feBlend = feBlend, feColorMatrix = feColorMatrix, feComponentTransfer = feComponentTransfer, feComposite = feComposite, feConvolveMatrix = feConvolveMatrix, feDiffuseLighting = feDiffuseLighting, feDisplacementMap = feDisplacementMap, feDistantLight = feDistantLight, feDropShadow = feDropShadow, feFlood = feFlood, feFuncA = feFuncA, feFuncB = feFuncB, feFuncG = feFuncG, feFuncR = feFuncR, feGaussianBlur = feGaussianBlur, feImage = feImage, feMerge = feMerge, feMergeNode = feMergeNode, feMorphology = feMorphology, feOffset = feOffset, fePointLight = fePointLight, feSpecularLighting = feSpecularLighting, feSpotLight = feSpotLight, feTile = feTile, feTurbulence = feTurbulence, fieldset = fieldset, figcaption = figcaption, figure = figure, filter = filter, footer = footer, foreignObject = foreignObject, form = form, g = g, h1 = h1, h2 = h2, h3 = h3, h4 = h4, h5 = h5, h6 = h6, head = head, header = header, hgroup = hgroup, hr = hr, html = html, i = i, iframe = iframe, image = image, img = img, input = input, ins = ins, kbd = kbd, keygen = keygen, label = label, legend = legend, li = li, line = line, linearGradient = linearGradient, link = link, main = main, map = map, mark = mark, marker = marker, mask = mask, menu = menu, menuitem = menuitem, meta = meta, metadata = metadata, meter = meter, nav = nav, noscript = noscript, ol = ol, optgroup = optgroup, option = option, output = output, p = p, param = param, path = path, pattern = pattern, picture = picture, polygon = polygon, polyline = polyline, pre = pre, progress = progress, q = q, radialGradient = radialGradient, rect = rect, rp = rp, rt = rt, ruby = ruby, s = s, samp = samp, script = script, section = section, select = select, small = small, source = source, span = span, stop = stop, strong = strong, style = style, sub = sub, summary = summary, sup = sup, svg = svg, switch = switch, symbol = symbol, table = table, tbody = tbody, td = td, text = text, textPath = textPath, textarea = textarea, tfoot = tfoot, th = th, thead = thead, time = time, title = title, tr = tr, track = track, tspan = tspan, u = u, ul = ul, use = use, video = video, view = view, wbr = wbr, webview = webview)
    __obj.updateDynamic("object")(`object`)
    __obj.updateDynamic("var")(`var`)
    __obj.asInstanceOf[ReactDOM]
  }
}

