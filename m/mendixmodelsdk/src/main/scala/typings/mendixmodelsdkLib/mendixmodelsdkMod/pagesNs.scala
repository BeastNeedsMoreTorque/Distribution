package typings
package mendixmodelsdkLib.mendixmodelsdkMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@JSImport("mendixmodelsdk", "pages")
@js.native
object pagesNs extends js.Object {
  /**
       * See: {@link https://docs.mendix.com/refguide7/action-button relevant section in reference guide}
       */
  @js.native
  class ActionButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ActionButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ActionItem protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ActionItem {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class AggregateFunction ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.AggregateFunction
  
  @js.native
  class AlignmentEnum ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.AlignmentEnum
  
  @js.native
  class AssociationSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.AssociationSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class AssociationWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.AssociationWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class AttributeWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.AttributeWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class AttributeWidgetWithPlaceholder protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.AttributeWidgetWithPlaceholder {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/close-page-button relevant section in reference guide}
       *
       * In version 7.0.2: deleted
       */
  @js.native
  class BackButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.BackButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/building-block relevant section in reference guide}
       *
       * In version 7.7.0: introduced
       */
  @js.native
  class BuildingBlock protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.BuildingBlock {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/button-widgets relevant section in reference guide}
       */
  @js.native
  abstract class Button protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Button {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ButtonStyle ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ButtonStyle
  
  /**
       * In version 7.12.0: removed experimental
       * In version 7.8.0: introduced
       */
  @js.native
  class CallNanoflowClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.CallNanoflowClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/cancel-button relevant section in reference guide}
       *
       * In version 7.0.2: deleted
       */
  @js.native
  class CancelButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.CancelButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  class CancelChangesClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.CancelChangesClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/check-box relevant section in reference guide}
       */
  @js.native
  class CheckBox protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.CheckBox {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ClickTypeType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ClickTypeType
  
  @js.native
  abstract class ClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ClientTemplate protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ClientTemplate {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ClientTemplateParameter protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ClientTemplateParameter {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  class ClosePageClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ClosePageClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ColumnGrid protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ColumnGrid {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/comparison-search-field relevant section in reference guide}
       */
  @js.native
  class ComparisonSearchField protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ComparisonSearchField {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ConditionalEditabilitySettings protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ConditionalEditabilitySettings {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ConditionalSettings protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ConditionalSettings {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ConditionalVisibilitySettings protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ConditionalVisibilitySettings {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ConditionallyEditableWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ConditionallyEditableWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ConditionallyVisibleWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ConditionallyVisibleWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ConfirmationInfo protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ConfirmationInfo {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ContainerWidth ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ContainerWidth
  
  @js.native
  abstract class ControlBar protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ControlBar {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ControlBarButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ControlBarButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ControlBarItem protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ControlBarItem {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.17.0: introduced
       */
  @js.native
  class CreateObjectClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.CreateObjectClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-grid relevant section in reference guide}
       */
  @js.native
  class DataGrid protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataGrid {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/add-button relevant section in reference guide}
       */
  @js.native
  class DataGridAddButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataGridAddButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/export-to-csv-button relevant section in reference guide}
       */
  @js.native
  class DataGridExportToCSVButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataGridExportToCSVButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/export-to-excel-button relevant section in reference guide}
       */
  @js.native
  class DataGridExportToExcelButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataGridExportToExcelButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/remove-button relevant section in reference guide}
       */
  @js.native
  class DataGridRemoveButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataGridRemoveButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-sources relevant section in reference guide}
       */
  @js.native
  abstract class DataSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view relevant section in reference guide}
       */
  @js.native
  class DataView protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataView {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-action-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  class DataViewActionButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewActionButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-cancel-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  class DataViewCancelButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewCancelButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-close-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  class DataViewCloseButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewCloseButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-control-bar relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  class DataViewControlBar protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewControlBar {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 6.7.0: deleted
       */
  @js.native
  abstract class DataViewControlBarButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewControlBarButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class DataViewReadOnlyStyle ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewReadOnlyStyle
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-save-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  class DataViewSaveButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewSaveButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class DataViewSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DataViewSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class DatabaseConstraint protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DatabaseConstraint {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class DatabaseConstraintOperator ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DatabaseConstraintOperator
  
  @js.native
  abstract class DatabaseSourceBase protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DatabaseSourceBase {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class DateFormat ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DateFormat
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/date-picker relevant section in reference guide}
       */
  @js.native
  class DatePicker protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DatePicker {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.17.0: introduced
       */
  @js.native
  class DeleteClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DeleteClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/container relevant section in reference guide}
       */
  @js.native
  class DivContainer protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DivContainer {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/drop-down-widget relevant section in reference guide}
       */
  @js.native
  class DropDown protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DropDown {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/drop-down-button relevant section in reference guide}
       */
  @js.native
  class DropDownButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DropDownButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class DropDownButtonItem protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DropDownButtonItem {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/drop-down-search-field relevant section in reference guide}
       */
  @js.native
  class DropDownSearchField protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DropDownSearchField {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image-viewer relevant section in reference guide}
       */
  @js.native
  class DynamicImageViewer protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DynamicImageViewer {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/text relevant section in reference guide}
       */
  @js.native
  class DynamicText protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.DynamicText {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class EditableEnum ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.EditableEnum
  
  @js.native
  abstract class EntityPathSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.EntityPathSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class EntityWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.EntityWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class EnumFormat ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.EnumFormat
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/file-manager relevant section in reference guide}
       */
  @js.native
  class FileManager protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.FileManager {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class FileManagerType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.FileManagerType
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/pages relevant section in reference guide}
       */
  @js.native
  abstract class FormBase protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.FormBase {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase) = this()
  }
  
  @js.native
  class FormLocation ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.FormLocation
  
  @js.native
  class FormValidations ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.FormValidations
  
  @js.native
  class FormattingInfo protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.FormattingInfo {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class GlyphIcon protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GlyphIcon {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class Grid protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Grid {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/grid-action-button relevant section in reference guide}
       */
  @js.native
  class GridActionButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridActionButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class GridBaseSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridBaseSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/columns relevant section in reference guide}
       */
  @js.native
  class GridColumn protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridColumn {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/control-bar relevant section in reference guide}
       */
  @js.native
  class GridControlBar protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridControlBar {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class GridControlBarButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridControlBarButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class GridDatabaseSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridDatabaseSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.17.0: deleted
       */
  @js.native
  class GridDeleteButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridDeleteButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/deselect-all-button relevant section in reference guide}
       */
  @js.native
  class GridDeselectAllButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridDeselectAllButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/edit-button relevant section in reference guide}
       *
       * In version 7.17.0: deleted
       */
  @js.native
  class GridEditButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridEditButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/grid-new-button relevant section in reference guide}
       */
  @js.native
  class GridNewButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridNewButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/search-button relevant section in reference guide}
       */
  @js.native
  class GridSearchButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridSearchButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/select-all-button relevant section in reference guide}
       */
  @js.native
  class GridSelectAllButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridSelectAllButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class GridSelectionMode ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridSelectionMode
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sort-bar relevant section in reference guide}
       */
  @js.native
  class GridSortBar protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridSortBar {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class GridSortItem protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridSortItem {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class GridXPathSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GridXPathSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/group-box relevant section in reference guide}
       */
  @js.native
  class GroupBox protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GroupBox {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class GroupBoxCollapsible ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.GroupBoxCollapsible
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/header relevant section in reference guide}
       */
  @js.native
  class Header protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Header {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/horizontal-split-pane relevant section in reference guide}
       */
  @js.native
  class HorizontalSplitPane protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.HorizontalSplitPane {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image-property relevant section in reference guide}
       */
  @js.native
  abstract class Icon protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Icon {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ImageIcon protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ImageIcon {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ImageSizeUnit ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ImageSizeUnit
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image-uploader relevant section in reference guide}
       */
  @js.native
  class ImageUploader protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ImageUploader {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ImageViewerSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ImageViewerSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/input-reference-set-selector relevant section in reference guide}
       */
  @js.native
  class InputReferenceSetSelector protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.InputReferenceSetSelector {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class InputWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.InputWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/label relevant section in reference guide}
       */
  @js.native
  class Label protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Label {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/layout relevant section in reference guide}
       */
  @js.native
  class Layout protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Layout {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase) = this()
  }
  
  /**
       * In version 7.17.0: added public
       */
  @js.native
  class LayoutCall protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutCall {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class LayoutCallArgument protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutCallArgument {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/layout-grid relevant section in reference guide}
       */
  @js.native
  class LayoutGrid protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutGrid {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class LayoutGridColumn protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutGridColumn {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class LayoutGridRow protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutGridRow {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class LayoutModeType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutModeType
  
  @js.native
  class LayoutParameter protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutParameter {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class LayoutType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LayoutType
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/link-button relevant section in reference guide}
       *
       * In version 7.3.0: deleted
       */
  @js.native
  class LinkButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LinkButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class LinkType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LinkType
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/list-view relevant section in reference guide}
       */
  @js.native
  class ListView protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ListView {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ListViewDatabaseSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ListViewDatabaseSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ListViewSearch protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ListViewSearch {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ListViewTemplate protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ListViewTemplate {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ListViewXPathSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ListViewXPathSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ListenTargetSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ListenTargetSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class ListenTargetWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ListenTargetWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sign-in-button relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  class LoginButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LoginButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/login-id-text-box relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  class LoginIdTextBox protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LoginIdTextBox {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  abstract class LoginTextBox protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LoginTextBox {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sign-out-button relevant section in reference guide}
       *
       * In version 7.1.0: deleted
       */
  @js.native
  class LogoutButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.LogoutButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  class MasterDetail protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MasterDetail {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  class MasterDetailDetailRegion protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MasterDetailDetailRegion {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  class MasterDetailMasterRegion protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MasterDetailMasterRegion {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  abstract class MasterDetailRegion protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MasterDetailRegion {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class MemberWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MemberWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/menu-bar relevant section in reference guide}
       */
  @js.native
  class MenuBar protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MenuBar {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class MenuDocumentSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MenuDocumentSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class MenuSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MenuSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/menu-widgets relevant section in reference guide}
       */
  @js.native
  abstract class MenuWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MenuWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class MicroflowClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MicroflowClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.19.0: introduced
       */
  @js.native
  class MicroflowParameterMapping protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MicroflowParameterMapping {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/starting-microflows relevant section in reference guide}
       */
  @js.native
  class MicroflowSettings protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MicroflowSettings {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class MicroflowSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MicroflowSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class MobileFooterType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.MobileFooterType
  
  /**
       * In version 7.19.0: introduced
       */
  @js.native
  class NanoflowParameterMapping protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NanoflowParameterMapping {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.12.0: introduced
       */
  @js.native
  class NanoflowSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NanoflowSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/navigation-list relevant section in reference guide}
       */
  @js.native
  class NavigationList protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NavigationList {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class NavigationListItem protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NavigationListItem {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class NavigationSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NavigationSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/navigation-tree relevant section in reference guide}
       */
  @js.native
  class NavigationTree protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NavigationTree {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.17.0: deleted
       */
  @js.native
  class NewButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NewButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class NewButtonEditLocation ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NewButtonEditLocation
  
  @js.native
  class NoClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.NoClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class OfflineSchema protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.OfflineSchema {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class OfflineSchemaFetchInstruction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.OfflineSchemaFetchInstruction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  abstract class OnClickBehavior protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.OnClickBehavior {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  class OnClickEnlarge protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.OnClickEnlarge {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  class OnClickMicroflow protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.OnClickMicroflow {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  class OnClickNothing protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.OnClickNothing {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.3.0: introduced
       */
  @js.native
  class OpenLinkClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.OpenLinkClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/page relevant section in reference guide}
       */
  @js.native
  class Page protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Page {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase) = this()
  }
  
  @js.native
  class PageClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.PageClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class PageForSpecialization protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.PageForSpecialization {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/opening-pages relevant section in reference guide}
       */
  @js.native
  class PageSettings protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.PageSettings {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/page-template relevant section in reference guide}
       *
       * In version 7.7.0: introduced
       */
  @js.native
  class PageTemplate protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.PageTemplate {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase) = this()
  }
  
  @js.native
  class PageTemplateType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.PageTemplateType
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/password-text-box relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  class PasswordTextBox protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.PasswordTextBox {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/placeholder relevant section in reference guide}
       */
  @js.native
  class Placeholder protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Placeholder {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ProgressBarType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ProgressBarType
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/radio-buttons relevant section in reference guide}
       */
  @js.native
  class RadioButtonGroup protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.RadioButtonGroup {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/range-search-field relevant section in reference guide}
       */
  @js.native
  class RangeSearchField protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.RangeSearchField {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ReadOnlyStyle ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ReadOnlyStyle
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/reference-selector relevant section in reference guide}
       */
  @js.native
  class ReferenceSelector protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ReferenceSelector {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ReferenceSelectorRenderModeType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ReferenceSelectorRenderModeType
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/reference-set-selector relevant section in reference guide}
       */
  @js.native
  class ReferenceSetSelector protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ReferenceSetSelector {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ReferenceSetSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ReferenceSetSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class RenderType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.RenderType
  
  /**
       * In version 7.12.0: introduced
       */
  @js.native
  class RetrievalQuery protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.RetrievalQuery {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 6.2.0: introduced
       */
  @js.native
  class RetrievalSchema protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.RetrievalSchema {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/save-button relevant section in reference guide}
       *
       * In version 7.0.2: deleted
       */
  @js.native
  class SaveButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SaveButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  class SaveChangesClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SaveChangesClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ScrollBehavior ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ScrollBehavior
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/scroll-container relevant section in reference guide}
       */
  @js.native
  class ScrollContainer protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ScrollContainer {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ScrollContainerRegion protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ScrollContainerRegion {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/search-bar relevant section in reference guide}
       */
  @js.native
  class SearchBar protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SearchBar {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SearchBarTypeEnum ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SearchBarTypeEnum
  
  @js.native
  abstract class SearchField protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SearchField {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SearchFieldOperator ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SearchFieldOperator
  
  @js.native
  class SearchFieldType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SearchFieldType
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/select-button relevant section in reference guide}
       */
  @js.native
  class SelectButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SelectButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SelectionType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SelectionType
  
  /**
       * In version 6.1.0: introduced
       */
  @js.native
  class SelectorDatabaseSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SelectorDatabaseSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SelectorMicroflowSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SelectorMicroflowSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class SelectorSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SelectorSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SelectorXPathSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SelectorXPathSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sidebar-toggle-button relevant section in reference guide}
       */
  @js.native
  class SidebarToggleButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SidebarToggleButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SidebarToggleMode ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SidebarToggleMode
  
  @js.native
  class SidebarToggleRegion ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SidebarToggleRegion
  
  /**
       * In version 7.1.0: introduced
       */
  @js.native
  class SignOutClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SignOutClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/simple-menu-bar relevant section in reference guide}
       */
  @js.native
  class SimpleMenuBar protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SimpleMenuBar {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SimpleMenuBarOrientation ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SimpleMenuBarOrientation
  
  @js.native
  abstract class SingleSearchField protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SingleSearchField {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SizeMode ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SizeMode
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/snippet relevant section in reference guide}
       */
  @js.native
  class Snippet protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Snippet {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase) = this()
  }
  
  @js.native
  class SnippetCall protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SnippetCall {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/snippet-call relevant section in reference guide}
       */
  @js.native
  class SnippetCallWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SnippetCallWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class SortDirection ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SortDirection
  
  @js.native
  abstract class SortableEntityPathSource protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SortableEntityPathSource {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  abstract class SplitPane protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SplitPane {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image relevant section in reference guide}
       */
  @js.native
  class StaticImageViewer protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.StaticImageViewer {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class StaticOrDynamicString protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.StaticOrDynamicString {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.0.2: deleted
       */
  @js.native
  class SyncButton protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SyncButton {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  class SyncClientAction protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.SyncClientAction {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/tab-container relevant section in reference guide}
       */
  @js.native
  class TabContainer protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TabContainer {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/tab-page relevant section in reference guide}
       */
  @js.native
  class TabPage protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TabPage {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/table relevant section in reference guide}
       */
  @js.native
  class Table protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Table {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class TableCell protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TableCell {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class TableCellRenderModeType ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TableCellRenderModeType
  
  @js.native
  class TableColumn protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TableColumn {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class TableRow protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TableRow {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.7.0: introduced
       */
  @js.native
  abstract class TemplateFormBase protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TemplateFormBase {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/template-grid relevant section in reference guide}
       */
  @js.native
  class TemplateGrid protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TemplateGrid {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class TemplateGridContents protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TemplateGridContents {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/text-area relevant section in reference guide}
       */
  @js.native
  class TextArea protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TextArea {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/text-box relevant section in reference guide}
       */
  @js.native
  class TextBox protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TextBox {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class TextRenderMode ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TextRenderMode
  
  @js.native
  abstract class TextWidget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.TextWidget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/page-title relevant section in reference guide}
       */
  @js.native
  class Title protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Title {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  @js.native
  class ToggleMode ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ToggleMode
  
  @js.native
  class UnitEnum ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.UnitEnum
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/validation-message relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  class ValidationMessage protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.ValidationMessage {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.15.0: deleted
       */
  @js.native
  class VerticalFlow protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.VerticalFlow {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/vertical-split-pane relevant section in reference guide}
       */
  @js.native
  class VerticalSplitPane protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.VerticalSplitPane {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * Interfaces and instance classes for types from the Mendix sub meta model `Pages`.
       */
  /**
       * See: {@link https://docs.mendix.com/refguide7/pages relevant section in reference guide}
       */
  @js.native
  abstract class Widget protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.Widget {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * In version 7.6.0: introduced
       */
  @js.native
  class WidgetValidation protected ()
    extends mendixmodelsdkLib.distGenAllDashModelDashClassesMod.pagesNs.WidgetValidation {
    def this(model: mendixmodelsdkLib.distSdkInternalMod.AbstractModel, structureTypeName: java.lang.String, id: java.lang.String, isPartial: scala.Boolean, unit: mendixmodelsdkLib.distSdkInternalMod.ModelUnit, container: mendixmodelsdkLib.distSdkInternalMod.AbstractElement) = this()
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/action-button relevant section in reference guide}
       */
  @js.native
  object ActionButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
    /**
             * Creates and returns a new ActionButton instance in the SDK and on the server.
             * The new ActionButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton = js.native
  }
  
  @js.native
  object ActionItem extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object AggregateFunction extends js.Object {
    var Average: mendixmodelsdkLib.distGenPagesMod.pagesNs.AggregateFunction = js.native
    var Count: mendixmodelsdkLib.distGenPagesMod.pagesNs.AggregateFunction = js.native
    var Maximum: mendixmodelsdkLib.distGenPagesMod.pagesNs.AggregateFunction = js.native
    var Minimum: mendixmodelsdkLib.distGenPagesMod.pagesNs.AggregateFunction = js.native
    var None: mendixmodelsdkLib.distGenPagesMod.pagesNs.AggregateFunction = js.native
    var Sum: mendixmodelsdkLib.distGenPagesMod.pagesNs.AggregateFunction = js.native
  }
  
  @js.native
  object AlignmentEnum extends js.Object {
    var Center: mendixmodelsdkLib.distGenPagesMod.pagesNs.AlignmentEnum = js.native
    var Left: mendixmodelsdkLib.distGenPagesMod.pagesNs.AlignmentEnum = js.native
    var Right: mendixmodelsdkLib.distGenPagesMod.pagesNs.AlignmentEnum = js.native
  }
  
  @js.native
  object AssociationSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new AssociationSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationSource = js.native
    /**
             * Creates and returns a new AssociationSource instance in the SDK and on the server.
             * The new AssociationSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationSource = js.native
  }
  
  @js.native
  object AssociationWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object AttributeWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object AttributeWidgetWithPlaceholder extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/close-page-button relevant section in reference guide}
       *
       * In version 7.0.2: deleted
       */
  @js.native
  object BackButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.0.1
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
    /**
             * Creates and returns a new BackButton instance in the SDK and on the server.
             * The new BackButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.BackButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/building-block relevant section in reference guide}
       *
       * In version 7.7.0: introduced
       */
  @js.native
  object BuildingBlock extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates a new BuildingBlock unit in the SDK and on the server.
             * Expects one argument, the projects.IFolderBase in which this unit is contained.
             */
    def createIn(container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase): mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/button-widgets relevant section in reference guide}
       */
  @js.native
  object Button extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ButtonStyle extends js.Object {
    var Danger: mendixmodelsdkLib.distGenPagesMod.pagesNs.ButtonStyle = js.native
    var Default: mendixmodelsdkLib.distGenPagesMod.pagesNs.ButtonStyle = js.native
    var Info: mendixmodelsdkLib.distGenPagesMod.pagesNs.ButtonStyle = js.native
    var Inverse: mendixmodelsdkLib.distGenPagesMod.pagesNs.ButtonStyle = js.native
    var Primary: mendixmodelsdkLib.distGenPagesMod.pagesNs.ButtonStyle = js.native
    var Success: mendixmodelsdkLib.distGenPagesMod.pagesNs.ButtonStyle = js.native
    var Warning: mendixmodelsdkLib.distGenPagesMod.pagesNs.ButtonStyle = js.native
  }
  
  /**
       * In version 7.12.0: removed experimental
       * In version 7.8.0: introduced
       */
  @js.native
  object CallNanoflowClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
    /**
             * Creates and returns a new CallNanoflowClientAction instance in the SDK and on the server.
             * The new CallNanoflowClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/cancel-button relevant section in reference guide}
       *
       * In version 7.0.2: deleted
       */
  @js.native
  object CancelButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.0.1
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
    /**
             * Creates and returns a new CancelButton instance in the SDK and on the server.
             * The new CancelButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelButton = js.native
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  object CancelChangesClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
    /**
             * Creates and returns a new CancelChangesClientAction instance in the SDK and on the server.
             * The new CancelChangesClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.CancelChangesClientAction = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/check-box relevant section in reference guide}
       */
  @js.native
  object CheckBox extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
    /**
             * Creates and returns a new CheckBox instance in the SDK and on the server.
             * The new CheckBox will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.CheckBox = js.native
  }
  
  @js.native
  object ClickTypeType extends js.Object {
    var Double: mendixmodelsdkLib.distGenPagesMod.pagesNs.ClickTypeType = js.native
    var Single: mendixmodelsdkLib.distGenPagesMod.pagesNs.ClickTypeType = js.native
  }
  
  @js.native
  object ClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ClientTemplate extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ClientTemplate instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate = js.native
    /**
             * Creates and returns a new ClientTemplate instance in the SDK and on the server.
             * The new ClientTemplate will be automatically stored in the 'caption' property
             * of the parent Button element passed as argument.
             */
    def createInButtonUnderCaption(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Button): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate = js.native
    /**
             * Creates and returns a new ClientTemplate instance in the SDK and on the server.
             * The new ClientTemplate will be automatically stored in the 'caption' property
             * of the parent ControlBarButton element passed as argument.
             */
    def createInControlBarButtonUnderCaption(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBarButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate = js.native
    /**
             * Creates and returns a new ClientTemplate instance in the SDK and on the server.
             * The new ClientTemplate will be automatically stored in the 'content' property
             * of the parent DynamicText element passed as argument.
             */
    def createInDynamicTextUnderContent(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate = js.native
    /**
             * Creates and returns a new ClientTemplate instance in the SDK and on the server.
             * The new ClientTemplate will be automatically stored in the 'value' property
             * of the parent pluginwidgets.DynamicTextValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.18.0
             */
    def createInDynamicTextValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.DynamicTextValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate = js.native
    /**
             * Creates and returns a new ClientTemplate instance in the SDK and on the server.
             * The new ClientTemplate will be automatically stored in the 'caption' property
             * of the parent GroupBox element passed as argument.
             */
    def createInGroupBoxUnderCaption(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate = js.native
    /**
             * Creates and returns a new ClientTemplate instance in the SDK and on the server.
             * The new ClientTemplate will be automatically stored in the 'labelTemplate' property
             * of the parent InputWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInInputWidgetUnderLabelTemplate(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.InputWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate = js.native
  }
  
  @js.native
  object ClientTemplateParameter extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ClientTemplateParameter instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplateParameter = js.native
    /**
             * Creates and returns a new ClientTemplateParameter instance in the SDK and on the server.
             * The new ClientTemplateParameter will be automatically stored in the 'parameters' property
             * of the parent ClientTemplate element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplateParameter = js.native
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  object ClosePageClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
    /**
             * Creates and returns a new ClosePageClientAction instance in the SDK and on the server.
             * The new ClosePageClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.ClosePageClientAction = js.native
  }
  
  @js.native
  object ColumnGrid extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/comparison-search-field relevant section in reference guide}
       */
  @js.native
  object ComparisonSearchField extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ComparisonSearchField instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ComparisonSearchField = js.native
    /**
             * Creates and returns a new ComparisonSearchField instance in the SDK and on the server.
             * The new ComparisonSearchField will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.ComparisonSearchField = js.native
  }
  
  @js.native
  object ConditionalEditabilitySettings extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ConditionalEditabilitySettings instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalEditabilitySettings = js.native
    /**
             * Creates and returns a new ConditionalEditabilitySettings instance in the SDK and on the server.
             * The new ConditionalEditabilitySettings will be automatically stored in the 'conditionalEditabilitySettings' property
             * of the parent ConditionallyEditableWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionallyEditableWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalEditabilitySettings = js.native
  }
  
  @js.native
  object ConditionalSettings extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ConditionalVisibilitySettings extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ConditionalVisibilitySettings instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalVisibilitySettings = js.native
    /**
             * Creates and returns a new ConditionalVisibilitySettings instance in the SDK and on the server.
             * The new ConditionalVisibilitySettings will be automatically stored in the 'conditionalVisibilitySettings' property
             * of the parent ConditionallyVisibleWidget element passed as argument.
             */
    def createInConditionallyVisibleWidgetUnderConditionalVisibilitySettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionallyVisibleWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalVisibilitySettings = js.native
    /**
             * Creates and returns a new ConditionalVisibilitySettings instance in the SDK and on the server.
             * The new ConditionalVisibilitySettings will be automatically stored in the 'conditionalVisibilitySettings' property
             * of the parent ControlBarButton element passed as argument.
             */
    def createInControlBarButtonUnderConditionalVisibilitySettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBarButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalVisibilitySettings = js.native
    /**
             * Creates and returns a new ConditionalVisibilitySettings instance in the SDK and on the server.
             * The new ConditionalVisibilitySettings will be automatically stored in the 'conditionalVisibilitySettings' property
             * of the parent LayoutGridRow element passed as argument.
             */
    def createInLayoutGridRowUnderConditionalVisibilitySettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridRow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalVisibilitySettings = js.native
    /**
             * Creates and returns a new ConditionalVisibilitySettings instance in the SDK and on the server.
             * The new ConditionalVisibilitySettings will be automatically stored in the 'conditionalVisibilitySettings' property
             * of the parent NavigationListItem element passed as argument.
             */
    def createInNavigationListItemUnderConditionalVisibilitySettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalVisibilitySettings = js.native
    /**
             * Creates and returns a new ConditionalVisibilitySettings instance in the SDK and on the server.
             * The new ConditionalVisibilitySettings will be automatically stored in the 'conditionalVisibilitySettings' property
             * of the parent TabPage element passed as argument.
             */
    def createInTabPageUnderConditionalVisibilitySettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalVisibilitySettings = js.native
    /**
             * Creates and returns a new ConditionalVisibilitySettings instance in the SDK and on the server.
             * The new ConditionalVisibilitySettings will be automatically stored in the 'conditionalVisibilitySettings' property
             * of the parent TableRow element passed as argument.
             */
    def createInTableRowUnderConditionalVisibilitySettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableRow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConditionalVisibilitySettings = js.native
  }
  
  @js.native
  object ConditionallyEditableWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ConditionallyVisibleWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ConfirmationInfo extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ConfirmationInfo instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConfirmationInfo = js.native
    /**
             * Creates and returns a new ConfirmationInfo instance in the SDK and on the server.
             * The new ConfirmationInfo will be automatically stored in the 'confirmationInfo' property
             * of the parent MicroflowSettings element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.7.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConfirmationInfo = js.native
    /**
             * Creates and returns a new ConfirmationInfo instance in the SDK and on the server.
             * The new ConfirmationInfo will be automatically stored in the 'confirmationInfo' property
             * of the parent CallNanoflowClientAction element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.8.0 and higher
             */
    def createInCallNanoflowClientActionUnderConfirmationInfo(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConfirmationInfo = js.native
    /**
             * Creates and returns a new ConfirmationInfo instance in the SDK and on the server.
             * The new ConfirmationInfo will be automatically stored in the 'confirmationInfo' property
             * of the parent MicroflowSettings element passed as argument.
             */
    def createInMicroflowSettingsUnderConfirmationInfo(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings): mendixmodelsdkLib.distGenPagesMod.pagesNs.ConfirmationInfo = js.native
  }
  
  @js.native
  object ContainerWidth extends js.Object {
    var FixedWidth: mendixmodelsdkLib.distGenPagesMod.pagesNs.ContainerWidth = js.native
    var FullWidth: mendixmodelsdkLib.distGenPagesMod.pagesNs.ContainerWidth = js.native
  }
  
  @js.native
  object ControlBar extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ControlBarButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ControlBarItem extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * In version 7.17.0: introduced
       */
  @js.native
  object CreateObjectClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
    /**
             * Creates and returns a new CreateObjectClientAction instance in the SDK and on the server.
             * The new CreateObjectClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-grid relevant section in reference guide}
       */
  @js.native
  object DataGrid extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
    /**
             * Creates and returns a new DataGrid instance in the SDK and on the server.
             * The new DataGrid will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGrid = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/add-button relevant section in reference guide}
       */
  @js.native
  object DataGridAddButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataGridAddButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridAddButton = js.native
    /**
             * Creates and returns a new DataGridAddButton instance in the SDK and on the server.
             * The new DataGridAddButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridAddButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/export-to-csv-button relevant section in reference guide}
       */
  @js.native
  object DataGridExportToCSVButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataGridExportToCSVButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridExportToCSVButton = js.native
    /**
             * Creates and returns a new DataGridExportToCSVButton instance in the SDK and on the server.
             * The new DataGridExportToCSVButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridExportToCSVButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/export-to-excel-button relevant section in reference guide}
       */
  @js.native
  object DataGridExportToExcelButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataGridExportToExcelButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridExportToExcelButton = js.native
    /**
             * Creates and returns a new DataGridExportToExcelButton instance in the SDK and on the server.
             * The new DataGridExportToExcelButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridExportToExcelButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/remove-button relevant section in reference guide}
       */
  @js.native
  object DataGridRemoveButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataGridRemoveButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridRemoveButton = js.native
    /**
             * Creates and returns a new DataGridRemoveButton instance in the SDK and on the server.
             * The new DataGridRemoveButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridRemoveButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-sources relevant section in reference guide}
       */
  @js.native
  object DataSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view relevant section in reference guide}
       */
  @js.native
  object DataView extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
    /**
             * Creates and returns a new DataView instance in the SDK and on the server.
             * The new DataView will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-action-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  object DataViewActionButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataViewActionButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewActionButton = js.native
    /**
             * Creates and returns a new DataViewActionButton instance in the SDK and on the server.
             * The new DataViewActionButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewActionButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-cancel-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  object DataViewCancelButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataViewCancelButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewCancelButton = js.native
    /**
             * Creates and returns a new DataViewCancelButton instance in the SDK and on the server.
             * The new DataViewCancelButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewCancelButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-close-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  object DataViewCloseButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataViewCloseButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewCloseButton = js.native
    /**
             * Creates and returns a new DataViewCloseButton instance in the SDK and on the server.
             * The new DataViewCloseButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewCloseButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-control-bar relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  object DataViewControlBar extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataViewControlBar instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewControlBar = js.native
    /**
             * Creates and returns a new DataViewControlBar instance in the SDK and on the server.
             * The new DataViewControlBar will be automatically stored in the 'controlBar' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewControlBar = js.native
  }
  
  /**
       * In version 6.7.0: deleted
       */
  @js.native
  object DataViewControlBarButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object DataViewReadOnlyStyle extends js.Object {
    var Control: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewReadOnlyStyle = js.native
    var Text: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewReadOnlyStyle = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/data-view-save-button relevant section in reference guide}
       *
       * In version 6.7.0: deleted
       */
  @js.native
  object DataViewSaveButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataViewSaveButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewSaveButton = js.native
    /**
             * Creates and returns a new DataViewSaveButton instance in the SDK and on the server.
             * The new DataViewSaveButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewSaveButton = js.native
  }
  
  @js.native
  object DataViewSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DataViewSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewSource = js.native
    /**
             * Creates and returns a new DataViewSource instance in the SDK and on the server.
             * The new DataViewSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewSource = js.native
  }
  
  @js.native
  object DatabaseConstraint extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DatabaseConstraint instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraint = js.native
    /**
             * Creates and returns a new DatabaseConstraint instance in the SDK and on the server.
             * The new DatabaseConstraint will be automatically stored in the 'databaseConstraints' property
             * of the parent DatabaseSourceBase element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.0.1
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseSourceBase): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraint = js.native
    /**
             * Creates and returns a new DatabaseConstraint instance in the SDK and on the server.
             * The new DatabaseConstraint will be automatically stored in the 'databaseConstraints' property
             * of the parent DatabaseSourceBase element passed as argument.
             */
    def createInDatabaseSourceBaseUnderDatabaseConstraints(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseSourceBase): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraint = js.native
    /**
             * Creates and returns a new DatabaseConstraint instance in the SDK and on the server.
             * The new DatabaseConstraint will be automatically stored in the 'databaseConstraints' property
             * of the parent SelectorDatabaseSource element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.1.0 and higher
             */
    def createInSelectorDatabaseSourceUnderDatabaseConstraints(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorDatabaseSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraint = js.native
  }
  
  @js.native
  object DatabaseConstraintOperator extends js.Object {
    var Contains: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
    var Equals: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
    var GreaterThan: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
    var GreaterThanOrEquals: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
    var LessThan: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
    var LessThanOrEquals: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
    var NotContains: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
    var NotEquals: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatabaseConstraintOperator = js.native
  }
  
  @js.native
  object DatabaseSourceBase extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object DateFormat extends js.Object {
    var Custom: mendixmodelsdkLib.distGenPagesMod.pagesNs.DateFormat = js.native
    var Date: mendixmodelsdkLib.distGenPagesMod.pagesNs.DateFormat = js.native
    var DateTime: mendixmodelsdkLib.distGenPagesMod.pagesNs.DateFormat = js.native
    var Time: mendixmodelsdkLib.distGenPagesMod.pagesNs.DateFormat = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/date-picker relevant section in reference guide}
       */
  @js.native
  object DatePicker extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
    /**
             * Creates and returns a new DatePicker instance in the SDK and on the server.
             * The new DatePicker will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker = js.native
  }
  
  /**
       * In version 7.17.0: introduced
       */
  @js.native
  object DeleteClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
    /**
             * Creates and returns a new DeleteClientAction instance in the SDK and on the server.
             * The new DeleteClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.DeleteClientAction = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/container relevant section in reference guide}
       */
  @js.native
  object DivContainer extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
    /**
             * Creates and returns a new DivContainer instance in the SDK and on the server.
             * The new DivContainer will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/drop-down-widget relevant section in reference guide}
       */
  @js.native
  object DropDown extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
    /**
             * Creates and returns a new DropDown instance in the SDK and on the server.
             * The new DropDown will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDown = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/drop-down-button relevant section in reference guide}
       */
  @js.native
  object DropDownButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
    /**
             * Creates and returns a new DropDownButton instance in the SDK and on the server.
             * The new DropDownButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton = js.native
  }
  
  @js.native
  object DropDownButtonItem extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DropDownButtonItem instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButtonItem = js.native
    /**
             * Creates and returns a new DropDownButtonItem instance in the SDK and on the server.
             * The new DropDownButtonItem will be automatically stored in the 'items' property
             * of the parent DropDownButton element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownButtonItem = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/drop-down-search-field relevant section in reference guide}
       */
  @js.native
  object DropDownSearchField extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DropDownSearchField instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownSearchField = js.native
    /**
             * Creates and returns a new DropDownSearchField instance in the SDK and on the server.
             * The new DropDownSearchField will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownSearchField = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image-viewer relevant section in reference guide}
       */
  @js.native
  object DynamicImageViewer extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
    /**
             * Creates and returns a new DynamicImageViewer instance in the SDK and on the server.
             * The new DynamicImageViewer will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/text relevant section in reference guide}
       */
  @js.native
  object DynamicText extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
    /**
             * Creates and returns a new DynamicText instance in the SDK and on the server.
             * The new DynamicText will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicText = js.native
  }
  
  @js.native
  object EditableEnum extends js.Object {
    var Always: mendixmodelsdkLib.distGenPagesMod.pagesNs.EditableEnum = js.native
    var Conditional: mendixmodelsdkLib.distGenPagesMod.pagesNs.EditableEnum = js.native
    var Never: mendixmodelsdkLib.distGenPagesMod.pagesNs.EditableEnum = js.native
  }
  
  @js.native
  object EntityPathSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object EntityWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object EnumFormat extends js.Object {
    var Image: mendixmodelsdkLib.distGenPagesMod.pagesNs.EnumFormat = js.native
    var Text: mendixmodelsdkLib.distGenPagesMod.pagesNs.EnumFormat = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/file-manager relevant section in reference guide}
       */
  @js.native
  object FileManager extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
    /**
             * Creates and returns a new FileManager instance in the SDK and on the server.
             * The new FileManager will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManager = js.native
  }
  
  @js.native
  object FileManagerType extends js.Object {
    var Both: mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManagerType = js.native
    var Download: mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManagerType = js.native
    var Upload: mendixmodelsdkLib.distGenPagesMod.pagesNs.FileManagerType = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/pages relevant section in reference guide}
       */
  @js.native
  object FormBase extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object FormLocation extends js.Object {
    var Content: mendixmodelsdkLib.distGenPagesMod.pagesNs.FormLocation = js.native
    var ModalPopup: mendixmodelsdkLib.distGenPagesMod.pagesNs.FormLocation = js.native
    var Popup: mendixmodelsdkLib.distGenPagesMod.pagesNs.FormLocation = js.native
  }
  
  @js.native
  object FormValidations extends js.Object {
    var All: mendixmodelsdkLib.distGenPagesMod.pagesNs.FormValidations = js.native
    var None: mendixmodelsdkLib.distGenPagesMod.pagesNs.FormValidations = js.native
    var Widget: mendixmodelsdkLib.distGenPagesMod.pagesNs.FormValidations = js.native
  }
  
  @js.native
  object FormattingInfo extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * The new FormattingInfo will be automatically stored in the 'formattingInfo' property
             * of the parent ClientTemplateParameter element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInClientTemplateParameterUnderFormattingInfo(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ClientTemplateParameter): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * The new FormattingInfo will be automatically stored in the 'formattingInfo' property
             * of the parent documenttemplates.DataGridColumn element passed as argument.
             */
    def createInDataGridColumnUnderFormattingInfo(container: mendixmodelsdkLib.distGenDocumenttemplatesMod.documenttemplatesNs.DataGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * The new FormattingInfo will be automatically stored in the 'formattingInfo' property
             * of the parent DatePicker element passed as argument.
             */
    def createInDatePickerUnderFormattingInfo(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DatePicker): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * The new FormattingInfo will be automatically stored in the 'formattingInfo' property
             * of the parent documenttemplates.DynamicLabel element passed as argument.
             */
    def createInDynamicLabelUnderFormattingInfo(container: mendixmodelsdkLib.distGenDocumenttemplatesMod.documenttemplatesNs.DynamicLabel): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * The new FormattingInfo will be automatically stored in the 'formattingInfo' property
             * of the parent GridColumn element passed as argument.
             */
    def createInGridColumnUnderFormattingInfo(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * The new FormattingInfo will be automatically stored in the 'formattingInfo' property
             * of the parent ReferenceSelector element passed as argument.
             */
    def createInReferenceSelectorUnderFormattingInfo(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
    /**
             * Creates and returns a new FormattingInfo instance in the SDK and on the server.
             * The new FormattingInfo will be automatically stored in the 'formattingInfo' property
             * of the parent TextBox element passed as argument.
             */
    def createInTextBoxUnderFormattingInfo(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.FormattingInfo = js.native
  }
  
  @js.native
  object GlyphIcon extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GlyphIcon instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GlyphIcon = js.native
    /**
             * Creates and returns a new GlyphIcon instance in the SDK and on the server.
             * The new GlyphIcon will be automatically stored in the 'icon' property
             * of the parent Button element passed as argument.
             */
    def createInButtonUnderIcon(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Button): mendixmodelsdkLib.distGenPagesMod.pagesNs.GlyphIcon = js.native
    /**
             * Creates and returns a new GlyphIcon instance in the SDK and on the server.
             * The new GlyphIcon will be automatically stored in the 'icon' property
             * of the parent ControlBarButton element passed as argument.
             */
    def createInControlBarButtonUnderIcon(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBarButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.GlyphIcon = js.native
    /**
             * Creates and returns a new GlyphIcon instance in the SDK and on the server.
             * The new GlyphIcon will be automatically stored in the 'icon' property
             * of the parent menus.MenuItem element passed as argument.
             */
    def createInMenuItemUnderIcon(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.GlyphIcon = js.native
    /**
             * Creates and returns a new GlyphIcon instance in the SDK and on the server.
             * The new GlyphIcon will be automatically stored in the 'value' property
             * of the parent pluginwidgets.WebIconValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.16.0 to 7.18.0
             */
    def createInWebIconValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.WebIconValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.GlyphIcon = js.native
  }
  
  @js.native
  object Grid extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/grid-action-button relevant section in reference guide}
       */
  @js.native
  object GridActionButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridActionButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton = js.native
    /**
             * Creates and returns a new GridActionButton instance in the SDK and on the server.
             * The new GridActionButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton = js.native
  }
  
  @js.native
  object GridBaseSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/columns relevant section in reference guide}
       */
  @js.native
  object GridColumn extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridColumn instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridColumn = js.native
    /**
             * Creates and returns a new GridColumn instance in the SDK and on the server.
             * The new GridColumn will be automatically stored in the 'columns' property
             * of the parent ColumnGrid element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ColumnGrid): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridColumn = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/control-bar relevant section in reference guide}
       */
  @js.native
  object GridControlBar extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridControlBar instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridControlBar = js.native
    /**
             * Creates and returns a new GridControlBar instance in the SDK and on the server.
             * The new GridControlBar will be automatically stored in the 'controlBar' property
             * of the parent Grid element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Grid): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridControlBar = js.native
  }
  
  @js.native
  object GridControlBarButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object GridDatabaseSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridDatabaseSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridDatabaseSource = js.native
    /**
             * Creates and returns a new GridDatabaseSource instance in the SDK and on the server.
             * The new GridDatabaseSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridDatabaseSource = js.native
  }
  
  /**
       * In version 7.17.0: deleted
       */
  @js.native
  object GridDeleteButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridDeleteButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridDeleteButton = js.native
    /**
             * Creates and returns a new GridDeleteButton instance in the SDK and on the server.
             * The new GridDeleteButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.16.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridDeleteButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/deselect-all-button relevant section in reference guide}
       */
  @js.native
  object GridDeselectAllButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridDeselectAllButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridDeselectAllButton = js.native
    /**
             * Creates and returns a new GridDeselectAllButton instance in the SDK and on the server.
             * The new GridDeselectAllButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridDeselectAllButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/edit-button relevant section in reference guide}
       *
       * In version 7.17.0: deleted
       */
  @js.native
  object GridEditButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridEditButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridEditButton = js.native
    /**
             * Creates and returns a new GridEditButton instance in the SDK and on the server.
             * The new GridEditButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.16.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridEditButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/grid-new-button relevant section in reference guide}
       */
  @js.native
  object GridNewButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridNewButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridNewButton = js.native
    /**
             * Creates and returns a new GridNewButton instance in the SDK and on the server.
             * The new GridNewButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridNewButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/search-button relevant section in reference guide}
       */
  @js.native
  object GridSearchButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridSearchButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSearchButton = js.native
    /**
             * Creates and returns a new GridSearchButton instance in the SDK and on the server.
             * The new GridSearchButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSearchButton = js.native
    /**
             * Creates and returns a new GridSearchButton instance in the SDK and on the server.
             * The new GridSearchButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createInControlBarUnderItems(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSearchButton = js.native
    /**
             * Creates and returns a new GridSearchButton instance in the SDK and on the server.
             * The new GridSearchButton will be automatically stored in the 'searchButton' property
             * of the parent GridControlBar element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.12.0
             */
    def createInGridControlBarUnderSearchButton(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSearchButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/select-all-button relevant section in reference guide}
       */
  @js.native
  object GridSelectAllButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridSelectAllButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSelectAllButton = js.native
    /**
             * Creates and returns a new GridSelectAllButton instance in the SDK and on the server.
             * The new GridSelectAllButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSelectAllButton = js.native
  }
  
  @js.native
  object GridSelectionMode extends js.Object {
    var Multi: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSelectionMode = js.native
    var None: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSelectionMode = js.native
    var SimpleMulti: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSelectionMode = js.native
    var Single: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSelectionMode = js.native
    var SingleAndMaintain: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSelectionMode = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sort-bar relevant section in reference guide}
       */
  @js.native
  object GridSortBar extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridSortBar instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortBar = js.native
    /**
             * Creates and returns a new GridSortBar instance in the SDK and on the server.
             * The new GridSortBar will be automatically stored in the 'sortBar' property
             * of the parent DropDownSearchField element passed as argument.
             */
    def createInDropDownSearchFieldUnderSortBar(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DropDownSearchField): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortBar = js.native
    /**
             * Creates and returns a new GridSortBar instance in the SDK and on the server.
             * The new GridSortBar will be automatically stored in the 'sortBar' property
             * of the parent SelectorDatabaseSource element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.2.0 and higher
             */
    def createInSelectorDatabaseSourceUnderSortBar(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorDatabaseSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortBar = js.native
    /**
             * Creates and returns a new GridSortBar instance in the SDK and on the server.
             * The new GridSortBar will be automatically stored in the 'sortBar' property
             * of the parent SelectorXPathSource element passed as argument.
             */
    def createInSelectorXPathSourceUnderSortBar(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorXPathSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortBar = js.native
    /**
             * Creates and returns a new GridSortBar instance in the SDK and on the server.
             * The new GridSortBar will be automatically stored in the 'sortBar' property
             * of the parent SortableEntityPathSource element passed as argument.
             */
    def createInSortableEntityPathSourceUnderSortBar(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SortableEntityPathSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortBar = js.native
  }
  
  @js.native
  object GridSortItem extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridSortItem instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortItem = js.native
    /**
             * Creates and returns a new GridSortItem instance in the SDK and on the server.
             * The new GridSortItem will be automatically stored in the 'sortItems' property
             * of the parent GridSortBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridSortItem = js.native
  }
  
  @js.native
  object GridXPathSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GridXPathSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridXPathSource = js.native
    /**
             * Creates and returns a new GridXPathSource instance in the SDK and on the server.
             * The new GridXPathSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.GridXPathSource = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/group-box relevant section in reference guide}
       */
  @js.native
  object GroupBox extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
    /**
             * Creates and returns a new GroupBox instance in the SDK and on the server.
             * The new GroupBox will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox = js.native
  }
  
  @js.native
  object GroupBoxCollapsible extends js.Object {
    var No: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBoxCollapsible = js.native
    var YesInitiallyCollapsed: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBoxCollapsible = js.native
    var YesInitiallyExpanded: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBoxCollapsible = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/header relevant section in reference guide}
       */
  @js.native
  object Header extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
    /**
             * Creates and returns a new Header instance in the SDK and on the server.
             * The new Header will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.Header = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/horizontal-split-pane relevant section in reference guide}
       */
  @js.native
  object HorizontalSplitPane extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
    /**
             * Creates and returns a new HorizontalSplitPane instance in the SDK and on the server.
             * The new HorizontalSplitPane will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.HorizontalSplitPane = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image-property relevant section in reference guide}
       */
  @js.native
  object Icon extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object ImageIcon extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ImageIcon instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageIcon = js.native
    /**
             * Creates and returns a new ImageIcon instance in the SDK and on the server.
             * The new ImageIcon will be automatically stored in the 'icon' property
             * of the parent Button element passed as argument.
             */
    def createInButtonUnderIcon(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Button): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageIcon = js.native
    /**
             * Creates and returns a new ImageIcon instance in the SDK and on the server.
             * The new ImageIcon will be automatically stored in the 'icon' property
             * of the parent ControlBarButton element passed as argument.
             */
    def createInControlBarButtonUnderIcon(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBarButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageIcon = js.native
    /**
             * Creates and returns a new ImageIcon instance in the SDK and on the server.
             * The new ImageIcon will be automatically stored in the 'icon' property
             * of the parent menus.MenuItem element passed as argument.
             */
    def createInMenuItemUnderIcon(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageIcon = js.native
    /**
             * Creates and returns a new ImageIcon instance in the SDK and on the server.
             * The new ImageIcon will be automatically stored in the 'value' property
             * of the parent pluginwidgets.WebIconValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.16.0 to 7.18.0
             */
    def createInWebIconValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.WebIconValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageIcon = js.native
  }
  
  @js.native
  object ImageSizeUnit extends js.Object {
    var Auto: mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageSizeUnit = js.native
    var Percentage: mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageSizeUnit = js.native
    var Pixels: mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageSizeUnit = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image-uploader relevant section in reference guide}
       */
  @js.native
  object ImageUploader extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
    /**
             * Creates and returns a new ImageUploader instance in the SDK and on the server.
             * The new ImageUploader will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageUploader = js.native
  }
  
  @js.native
  object ImageViewerSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ImageViewerSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageViewerSource = js.native
    /**
             * Creates and returns a new ImageViewerSource instance in the SDK and on the server.
             * The new ImageViewerSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ImageViewerSource = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/input-reference-set-selector relevant section in reference guide}
       */
  @js.native
  object InputReferenceSetSelector extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
    /**
             * Creates and returns a new InputReferenceSetSelector instance in the SDK and on the server.
             * The new InputReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.InputReferenceSetSelector = js.native
  }
  
  @js.native
  object InputWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/label relevant section in reference guide}
       */
  @js.native
  object Label extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
    /**
             * Creates and returns a new Label instance in the SDK and on the server.
             * The new Label will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.Label = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/layout relevant section in reference guide}
       */
  @js.native
  object Layout extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates a new Layout unit in the SDK and on the server.
             * Expects one argument, the projects.IFolderBase in which this unit is contained.
             */
    def createIn(container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase): mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout = js.native
  }
  
  /**
       * In version 7.17.0: added public
       */
  @js.native
  object LayoutCall extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LayoutCall instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCall = js.native
    /**
             * Creates and returns a new LayoutCall instance in the SDK and on the server.
             * The new LayoutCall will be automatically stored in the 'layoutCall' property
             * of the parent Layout element passed as argument.
             */
    def createInLayoutUnderLayoutCall(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCall = js.native
    /**
             * Creates and returns a new LayoutCall instance in the SDK and on the server.
             * The new LayoutCall will be automatically stored in the 'layoutCall' property
             * of the parent PageTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 and higher
             */
    def createInPageTemplateUnderLayoutCall(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.PageTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCall = js.native
    /**
             * Creates and returns a new LayoutCall instance in the SDK and on the server.
             * The new LayoutCall will be automatically stored in the 'layoutCall' property
             * of the parent Page element passed as argument.
             */
    def createInPageUnderLayoutCall(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Page): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCall = js.native
  }
  
  @js.native
  object LayoutCallArgument extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LayoutCallArgument instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument = js.native
    /**
             * Creates and returns a new LayoutCallArgument instance in the SDK and on the server.
             * The new LayoutCallArgument will be automatically stored in the 'arguments' property
             * of the parent LayoutCall element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCall): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/layout-grid relevant section in reference guide}
       */
  @js.native
  object LayoutGrid extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
    /**
             * Creates and returns a new LayoutGrid instance in the SDK and on the server.
             * The new LayoutGrid will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid = js.native
  }
  
  @js.native
  object LayoutGridColumn extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LayoutGridColumn instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn = js.native
    /**
             * Creates and returns a new LayoutGridColumn instance in the SDK and on the server.
             * The new LayoutGridColumn will be automatically stored in the 'columns' property
             * of the parent LayoutGridRow element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridRow): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn = js.native
  }
  
  @js.native
  object LayoutGridRow extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LayoutGridRow instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridRow = js.native
    /**
             * Creates and returns a new LayoutGridRow instance in the SDK and on the server.
             * The new LayoutGridRow will be automatically stored in the 'rows' property
             * of the parent LayoutGrid element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGrid): mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridRow = js.native
  }
  
  @js.native
  object LayoutModeType extends js.Object {
    var Headline: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutModeType = js.native
    var Sidebar: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutModeType = js.native
  }
  
  @js.native
  object LayoutParameter extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object LayoutType extends js.Object {
    var Legacy: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutType = js.native
    var ModalPopup: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutType = js.native
    var Phone: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutType = js.native
    var Popup: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutType = js.native
    var Responsive: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutType = js.native
    var Tablet: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutType = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/link-button relevant section in reference guide}
       *
       * In version 7.3.0: deleted
       */
  @js.native
  object LinkButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.2.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.2.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
    /**
             * Creates and returns a new LinkButton instance in the SDK and on the server.
             * The new LinkButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton = js.native
  }
  
  @js.native
  object LinkType extends js.Object {
    var Call: mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkType = js.native
    var Email: mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkType = js.native
    var Text: mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkType = js.native
    var Web: mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkType = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/list-view relevant section in reference guide}
       */
  @js.native
  object ListView extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
    /**
             * Creates and returns a new ListView instance in the SDK and on the server.
             * The new ListView will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView = js.native
  }
  
  @js.native
  object ListViewDatabaseSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ListViewDatabaseSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewDatabaseSource = js.native
    /**
             * Creates and returns a new ListViewDatabaseSource instance in the SDK and on the server.
             * The new ListViewDatabaseSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewDatabaseSource = js.native
  }
  
  @js.native
  object ListViewSearch extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ListViewSearch instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewSearch = js.native
    /**
             * Creates and returns a new ListViewSearch instance in the SDK and on the server.
             * The new ListViewSearch will be automatically stored in the 'search' property
             * of the parent ListViewDatabaseSource element passed as argument.
             */
    def createInListViewDatabaseSourceUnderSearch(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewDatabaseSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewSearch = js.native
    /**
             * Creates and returns a new ListViewSearch instance in the SDK and on the server.
             * The new ListViewSearch will be automatically stored in the 'search' property
             * of the parent ListViewXPathSource element passed as argument.
             */
    def createInListViewXPathSourceUnderSearch(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewXPathSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewSearch = js.native
  }
  
  @js.native
  object ListViewTemplate extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ListViewTemplate instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate = js.native
    /**
             * Creates and returns a new ListViewTemplate instance in the SDK and on the server.
             * The new ListViewTemplate will be automatically stored in the 'templates' property
             * of the parent ListView element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate = js.native
  }
  
  @js.native
  object ListViewXPathSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ListViewXPathSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewXPathSource = js.native
    /**
             * Creates and returns a new ListViewXPathSource instance in the SDK and on the server.
             * The new ListViewXPathSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewXPathSource = js.native
  }
  
  @js.native
  object ListenTargetSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ListenTargetSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListenTargetSource = js.native
    /**
             * Creates and returns a new ListenTargetSource instance in the SDK and on the server.
             * The new ListenTargetSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ListenTargetSource = js.native
  }
  
  @js.native
  object ListenTargetWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sign-in-button relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  object LoginButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
    /**
             * Creates and returns a new LoginButton instance in the SDK and on the server.
             * The new LoginButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginButton = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/login-id-text-box relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  object LoginIdTextBox extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
    /**
             * Creates and returns a new LoginIdTextBox instance in the SDK and on the server.
             * The new LoginIdTextBox will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.LoginIdTextBox = js.native
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  object LoginTextBox extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sign-out-button relevant section in reference guide}
       *
       * In version 7.1.0: deleted
       */
  @js.native
  object LogoutButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.0.2
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
    /**
             * Creates and returns a new LogoutButton instance in the SDK and on the server.
             * The new LogoutButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.2
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.LogoutButton = js.native
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  object MasterDetail extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
    /**
             * Creates and returns a new MasterDetail instance in the SDK and on the server.
             * The new MasterDetail will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail = js.native
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  object MasterDetailDetailRegion extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MasterDetailDetailRegion instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailDetailRegion = js.native
    /**
             * Creates and returns a new MasterDetailDetailRegion instance in the SDK and on the server.
             * The new MasterDetailDetailRegion will be automatically stored in the 'detail' property
             * of the parent MasterDetail element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailDetailRegion = js.native
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  object MasterDetailMasterRegion extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MasterDetailMasterRegion instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailMasterRegion = js.native
    /**
             * Creates and returns a new MasterDetailMasterRegion instance in the SDK and on the server.
             * The new MasterDetailMasterRegion will be automatically stored in the 'master' property
             * of the parent MasterDetail element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetail): mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailMasterRegion = js.native
  }
  
  /**
       * NOTE: This class is experimental and is subject to change in newer Model SDK versions.
       *
       * In version 7.15.0: deleted
       * In version 7.1.0: introduced
       */
  @js.native
  object MasterDetailRegion extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object MemberWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/menu-bar relevant section in reference guide}
       */
  @js.native
  object MenuBar extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
    /**
             * Creates and returns a new MenuBar instance in the SDK and on the server.
             * The new MenuBar will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuBar = js.native
  }
  
  @js.native
  object MenuDocumentSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MenuDocumentSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuDocumentSource = js.native
    /**
             * Creates and returns a new MenuDocumentSource instance in the SDK and on the server.
             * The new MenuDocumentSource will be automatically stored in the 'menuSource' property
             * of the parent MenuWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuDocumentSource = js.native
  }
  
  @js.native
  object MenuSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/menu-widgets relevant section in reference guide}
       */
  @js.native
  object MenuWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object MicroflowClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'action' property
             * of the parent DataViewActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createInDataViewActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
    /**
             * Creates and returns a new MicroflowClientAction instance in the SDK and on the server.
             * The new MicroflowClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction = js.native
  }
  
  /**
       * In version 7.19.0: introduced
       */
  @js.native
  object MicroflowParameterMapping extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MicroflowParameterMapping instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowParameterMapping = js.native
    /**
             * Creates and returns a new MicroflowParameterMapping instance in the SDK and on the server.
             * The new MicroflowParameterMapping will be automatically stored in the 'parameterMappings' property
             * of the parent MicroflowSettings element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowParameterMapping = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/starting-microflows relevant section in reference guide}
       */
  @js.native
  object MicroflowSettings extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'onChangeMicroflowSettings' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.12.0
             */
    def createInAssociationWidgetUnderOnChangeMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'onChangeMicroflowSettings' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.12.0
             */
    def createInAttributeWidgetUnderOnChangeMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'onEnterMicroflowSettings' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.12.0
             */
    def createInAttributeWidgetUnderOnEnterMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'onLeaveMicroflowSettings' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.12.0
             */
    def createInAttributeWidgetUnderOnLeaveMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'microflowSettings' property
             * of the parent MicroflowClientAction element passed as argument.
             */
    def createInMicroflowClientActionUnderMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowClientAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'microflowSettings' property
             * of the parent MicroflowSource element passed as argument.
             */
    def createInMicroflowSourceUnderMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'microflowSettings' property
             * of the parent OnClickMicroflow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.17.0
             */
    def createInOnClickMicroflowUnderMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.OnClickMicroflow): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'onChangeMicroflowSettings' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.12.0
             */
    def createInReferenceSetSelectorUnderOnChangeMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
    /**
             * Creates and returns a new MicroflowSettings instance in the SDK and on the server.
             * The new MicroflowSettings will be automatically stored in the 'dataSourceMicroflowSettings' property
             * of the parent SelectorMicroflowSource element passed as argument.
             */
    def createInSelectorMicroflowSourceUnderDataSourceMicroflowSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorMicroflowSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSettings = js.native
  }
  
  @js.native
  object MicroflowSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new MicroflowSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSource = js.native
    /**
             * Creates and returns a new MicroflowSource instance in the SDK and on the server.
             * The new MicroflowSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.MicroflowSource = js.native
  }
  
  @js.native
  object MobileFooterType extends js.Object {
    var Custom: mendixmodelsdkLib.distGenPagesMod.pagesNs.MobileFooterType = js.native
    var MenuBar: mendixmodelsdkLib.distGenPagesMod.pagesNs.MobileFooterType = js.native
    var None: mendixmodelsdkLib.distGenPagesMod.pagesNs.MobileFooterType = js.native
  }
  
  /**
       * In version 7.19.0: introduced
       */
  @js.native
  object NanoflowParameterMapping extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NanoflowParameterMapping instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NanoflowParameterMapping = js.native
    /**
             * Creates and returns a new NanoflowParameterMapping instance in the SDK and on the server.
             * The new NanoflowParameterMapping will be automatically stored in the 'parameterMappings' property
             * of the parent CallNanoflowClientAction element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInCallNanoflowClientActionUnderParameterMappings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.CallNanoflowClientAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.NanoflowParameterMapping = js.native
    /**
             * Creates and returns a new NanoflowParameterMapping instance in the SDK and on the server.
             * The new NanoflowParameterMapping will be automatically stored in the 'parameterMappings' property
             * of the parent NanoflowSource element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInNanoflowSourceUnderParameterMappings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NanoflowSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.NanoflowParameterMapping = js.native
  }
  
  /**
       * In version 7.12.0: introduced
       */
  @js.native
  object NanoflowSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NanoflowSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NanoflowSource = js.native
    /**
             * Creates and returns a new NanoflowSource instance in the SDK and on the server.
             * The new NanoflowSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.12.0 and higher
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.NanoflowSource = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/navigation-list relevant section in reference guide}
       */
  @js.native
  object NavigationList extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
    /**
             * Creates and returns a new NavigationList instance in the SDK and on the server.
             * The new NavigationList will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList = js.native
  }
  
  @js.native
  object NavigationListItem extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NavigationListItem instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem = js.native
    /**
             * Creates and returns a new NavigationListItem instance in the SDK and on the server.
             * The new NavigationListItem will be automatically stored in the 'items' property
             * of the parent NavigationList element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationList): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem = js.native
  }
  
  @js.native
  object NavigationSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NavigationSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationSource = js.native
    /**
             * Creates and returns a new NavigationSource instance in the SDK and on the server.
             * The new NavigationSource will be automatically stored in the 'menuSource' property
             * of the parent MenuWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MenuWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationSource = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/navigation-tree relevant section in reference guide}
       */
  @js.native
  object NavigationTree extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
    /**
             * Creates and returns a new NavigationTree instance in the SDK and on the server.
             * The new NavigationTree will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationTree = js.native
  }
  
  /**
       * In version 7.17.0: deleted
       */
  @js.native
  object NewButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 to 7.16.0
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
    /**
             * Creates and returns a new NewButton instance in the SDK and on the server.
             * The new NewButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton = js.native
  }
  
  @js.native
  object NewButtonEditLocation extends js.Object {
    var Form: mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButtonEditLocation = js.native
    var InlineAtBottom: mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButtonEditLocation = js.native
    var InlineAtTop: mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButtonEditLocation = js.native
  }
  
  @js.native
  object NoClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'action' property
             * of the parent DataViewActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createInDataViewActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
    /**
             * Creates and returns a new NoClientAction instance in the SDK and on the server.
             * The new NoClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.NoClientAction = js.native
  }
  
  @js.native
  object OfflineSchema extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new OfflineSchema instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.OfflineSchema = js.native
  }
  
  @js.native
  object OfflineSchemaFetchInstruction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new OfflineSchemaFetchInstruction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.OfflineSchemaFetchInstruction = js.native
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  object OnClickBehavior extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  object OnClickEnlarge extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new OnClickEnlarge instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.OnClickEnlarge = js.native
    /**
             * Creates and returns a new OnClickEnlarge instance in the SDK and on the server.
             * The new OnClickEnlarge will be automatically stored in the 'onClickBehavior' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.17.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.OnClickEnlarge = js.native
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  object OnClickMicroflow extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new OnClickMicroflow instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.OnClickMicroflow = js.native
    /**
             * Creates and returns a new OnClickMicroflow instance in the SDK and on the server.
             * The new OnClickMicroflow will be automatically stored in the 'onClickBehavior' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.17.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.OnClickMicroflow = js.native
  }
  
  /**
       * In version 7.18.0: deleted
       */
  @js.native
  object OnClickNothing extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new OnClickNothing instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.OnClickNothing = js.native
    /**
             * Creates and returns a new OnClickNothing instance in the SDK and on the server.
             * The new OnClickNothing will be automatically stored in the 'onClickBehavior' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.17.0
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.OnClickNothing = js.native
  }
  
  /**
       * In version 7.3.0: introduced
       */
  @js.native
  object OpenLinkClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.3.0 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.3.0 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.3.0 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.3.0 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.3.0 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.3.0 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
    /**
             * Creates and returns a new OpenLinkClientAction instance in the SDK and on the server.
             * The new OpenLinkClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/page relevant section in reference guide}
       */
  @js.native
  object Page extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates a new Page unit in the SDK and on the server.
             * Expects one argument, the projects.IFolderBase in which this unit is contained.
             */
    def createIn(container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase): mendixmodelsdkLib.distGenPagesMod.pagesNs.Page = js.native
  }
  
  @js.native
  object PageClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'action' property
             * of the parent DataViewActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.6.0
             */
    def createInDataViewActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataViewActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
    /**
             * Creates and returns a new PageClientAction instance in the SDK and on the server.
             * The new PageClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction = js.native
  }
  
  @js.native
  object PageForSpecialization extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new PageForSpecialization instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageForSpecialization = js.native
    /**
             * Creates and returns a new PageForSpecialization instance in the SDK and on the server.
             * The new PageForSpecialization will be automatically stored in the 'pagesForSpecializations' property
             * of the parent GridEditButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.16.0
             */
    def createInGridEditButtonUnderPagesForSpecializations(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridEditButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageForSpecialization = js.native
    /**
             * Creates and returns a new PageForSpecialization instance in the SDK and on the server.
             * The new PageForSpecialization will be automatically stored in the 'pagesForSpecializations' property
             * of the parent PageClientAction element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInPageClientActionUnderPagesForSpecializations(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageForSpecialization = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/opening-pages relevant section in reference guide}
       */
  @js.native
  object PageSettings extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'selectPageSettings' property
             * of the parent AssociationWidget element passed as argument.
             */
    def createInAssociationWidgetUnderSelectPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent CreateObjectClientAction element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.17.0 and higher
             */
    def createInCreateObjectClientActionUnderPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.CreateObjectClientAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent DataGridAddButton element passed as argument.
             */
    def createInDataGridAddButtonUnderPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataGridAddButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent GridEditButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.16.0
             */
    def createInGridEditButtonUnderPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridEditButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent GridNewButton element passed as argument.
             */
    def createInGridNewButtonUnderPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridNewButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'loginPageSettings' property
             * of the parent navigation.NavigationProfile element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInNavigationProfileUnderLoginPageSettings(container: mendixmodelsdkLib.distGenNavigationMod.navigationNs.NavigationProfile): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent NewButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.16.0
             */
    def createInNewButtonUnderPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NewButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent PageClientAction element passed as argument.
             */
    def createInPageClientActionUnderPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.PageClientAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent PageForSpecialization element passed as argument.
             */
    def createInPageForSpecializationUnderPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.PageForSpecialization): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'gotoPageSettings' property
             * of the parent ReferenceSelector element passed as argument.
             */
    def createInReferenceSelectorUnderGotoPageSettings(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
    /**
             * Creates and returns a new PageSettings instance in the SDK and on the server.
             * The new PageSettings will be automatically stored in the 'pageSettings' property
             * of the parent microflows.ShowPageAction element passed as argument.
             */
    def createInShowPageActionUnderPageSettings(container: mendixmodelsdkLib.distGenMicroflowsMod.microflowsNs.ShowPageAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageSettings = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/page-template relevant section in reference guide}
       *
       * In version 7.7.0: introduced
       */
  @js.native
  object PageTemplate extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates a new PageTemplate unit in the SDK and on the server.
             * Expects one argument, the projects.IFolderBase in which this unit is contained.
             */
    def createIn(container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase): mendixmodelsdkLib.distGenPagesMod.pagesNs.PageTemplate = js.native
  }
  
  @js.native
  object PageTemplateType extends js.Object {
    var Edit: mendixmodelsdkLib.distGenPagesMod.pagesNs.PageTemplateType = js.native
    var Select: mendixmodelsdkLib.distGenPagesMod.pagesNs.PageTemplateType = js.native
    var Standard: mendixmodelsdkLib.distGenPagesMod.pagesNs.PageTemplateType = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/password-text-box relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  object PasswordTextBox extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
    /**
             * Creates and returns a new PasswordTextBox instance in the SDK and on the server.
             * The new PasswordTextBox will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.PasswordTextBox = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/placeholder relevant section in reference guide}
       */
  @js.native
  object Placeholder extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
    /**
             * Creates and returns a new Placeholder instance in the SDK and on the server.
             * The new Placeholder will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.Placeholder = js.native
  }
  
  @js.native
  object ProgressBarType extends js.Object {
    var Blocking: mendixmodelsdkLib.distGenPagesMod.pagesNs.ProgressBarType = js.native
    var NonBlocking: mendixmodelsdkLib.distGenPagesMod.pagesNs.ProgressBarType = js.native
    var None: mendixmodelsdkLib.distGenPagesMod.pagesNs.ProgressBarType = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/radio-buttons relevant section in reference guide}
       */
  @js.native
  object RadioButtonGroup extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
    /**
             * Creates and returns a new RadioButtonGroup instance in the SDK and on the server.
             * The new RadioButtonGroup will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.RadioButtonGroup = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/range-search-field relevant section in reference guide}
       */
  @js.native
  object RangeSearchField extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new RangeSearchField instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.RangeSearchField = js.native
    /**
             * Creates and returns a new RangeSearchField instance in the SDK and on the server.
             * The new RangeSearchField will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.RangeSearchField = js.native
  }
  
  @js.native
  object ReadOnlyStyle extends js.Object {
    var Control: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReadOnlyStyle = js.native
    var Inherit: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReadOnlyStyle = js.native
    var Text: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReadOnlyStyle = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/reference-selector relevant section in reference guide}
       */
  @js.native
  object ReferenceSelector extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
    /**
             * Creates and returns a new ReferenceSelector instance in the SDK and on the server.
             * The new ReferenceSelector will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector = js.native
  }
  
  @js.native
  object ReferenceSelectorRenderModeType extends js.Object {
    var DropDown: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelectorRenderModeType = js.native
    var Form: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelectorRenderModeType = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/reference-set-selector relevant section in reference guide}
       */
  @js.native
  object ReferenceSetSelector extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
    /**
             * Creates and returns a new ReferenceSetSelector instance in the SDK and on the server.
             * The new ReferenceSetSelector will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector = js.native
  }
  
  @js.native
  object ReferenceSetSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ReferenceSetSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSource = js.native
    /**
             * Creates and returns a new ReferenceSetSource instance in the SDK and on the server.
             * The new ReferenceSetSource will be automatically stored in the 'dataSource' property
             * of the parent EntityWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.EntityWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSource = js.native
  }
  
  @js.native
  object RenderType extends js.Object {
    var Button: mendixmodelsdkLib.distGenPagesMod.pagesNs.RenderType = js.native
    var Link: mendixmodelsdkLib.distGenPagesMod.pagesNs.RenderType = js.native
  }
  
  /**
       * In version 7.12.0: introduced
       */
  @js.native
  object RetrievalQuery extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new RetrievalQuery instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.RetrievalQuery = js.native
  }
  
  /**
       * In version 6.2.0: introduced
       */
  @js.native
  object RetrievalSchema extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new RetrievalSchema instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.RetrievalSchema = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/save-button relevant section in reference guide}
       *
       * In version 7.0.2: deleted
       */
  @js.native
  object SaveButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.0.1
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
    /**
             * Creates and returns a new SaveButton instance in the SDK and on the server.
             * The new SaveButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveButton = js.native
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  object SaveChangesClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
    /**
             * Creates and returns a new SaveChangesClientAction instance in the SDK and on the server.
             * The new SaveChangesClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.SaveChangesClientAction = js.native
  }
  
  @js.native
  object ScrollBehavior extends js.Object {
    var FullWidget: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollBehavior = js.native
    var PerRegion: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollBehavior = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/scroll-container relevant section in reference guide}
       */
  @js.native
  object ScrollContainer extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
    /**
             * Creates and returns a new ScrollContainer instance in the SDK and on the server.
             * The new ScrollContainer will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer = js.native
  }
  
  @js.native
  object ScrollContainerRegion extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ScrollContainerRegion instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion = js.native
    /**
             * Creates and returns a new ScrollContainerRegion instance in the SDK and on the server.
             * The new ScrollContainerRegion will be automatically stored in the 'bottom' property
             * of the parent ScrollContainer element passed as argument.
             */
    def createInScrollContainerUnderBottom(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion = js.native
    /**
             * Creates and returns a new ScrollContainerRegion instance in the SDK and on the server.
             * The new ScrollContainerRegion will be automatically stored in the 'center' property
             * of the parent ScrollContainer element passed as argument.
             */
    def createInScrollContainerUnderCenter(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion = js.native
    /**
             * Creates and returns a new ScrollContainerRegion instance in the SDK and on the server.
             * The new ScrollContainerRegion will be automatically stored in the 'left' property
             * of the parent ScrollContainer element passed as argument.
             */
    def createInScrollContainerUnderLeft(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion = js.native
    /**
             * Creates and returns a new ScrollContainerRegion instance in the SDK and on the server.
             * The new ScrollContainerRegion will be automatically stored in the 'right' property
             * of the parent ScrollContainer element passed as argument.
             */
    def createInScrollContainerUnderRight(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion = js.native
    /**
             * Creates and returns a new ScrollContainerRegion instance in the SDK and on the server.
             * The new ScrollContainerRegion will be automatically stored in the 'top' property
             * of the parent ScrollContainer element passed as argument.
             */
    def createInScrollContainerUnderTop(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/search-bar relevant section in reference guide}
       */
  @js.native
  object SearchBar extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SearchBar instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchBar = js.native
    /**
             * Creates and returns a new SearchBar instance in the SDK and on the server.
             * The new SearchBar will be automatically stored in the 'searchBar' property
             * of the parent GridBaseSource element passed as argument.
             */
    def createInGridBaseSourceUnderSearchBar(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridBaseSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchBar = js.native
    /**
             * Creates and returns a new SearchBar instance in the SDK and on the server.
             * The new SearchBar will be automatically stored in the 'searchBar' property
             * of the parent GridDatabaseSource element passed as argument.
             */
    def createInGridDatabaseSourceUnderSearchBar(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridDatabaseSource): mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchBar = js.native
  }
  
  @js.native
  object SearchBarTypeEnum extends js.Object {
    var AlwaysOpen: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchBarTypeEnum = js.native
    var FoldableClosed: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchBarTypeEnum = js.native
    var FoldableOpen: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchBarTypeEnum = js.native
    var None: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchBarTypeEnum = js.native
  }
  
  @js.native
  object SearchField extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object SearchFieldOperator extends js.Object {
    var Contains: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
    var Equal: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
    var Greater: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
    var GreaterOrEqual: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
    var NotEqual: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
    var Smaller: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
    var SmallerOrEqual: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
    var StartsWith: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldOperator = js.native
  }
  
  @js.native
  object SearchFieldType extends js.Object {
    var Hidden: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldType = js.native
    var Normal: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldType = js.native
    var ReadOnly: mendixmodelsdkLib.distGenPagesMod.pagesNs.SearchFieldType = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/select-button relevant section in reference guide}
       */
  @js.native
  object SelectButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SelectButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectButton = js.native
    /**
             * Creates and returns a new SelectButton instance in the SDK and on the server.
             * The new SelectButton will be automatically stored in the 'items' property
             * of the parent ControlBar element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ControlBar): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectButton = js.native
  }
  
  @js.native
  object SelectionType extends js.Object {
    var SelectAll: mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectionType = js.native
    var SelectPage: mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectionType = js.native
  }
  
  /**
       * In version 6.1.0: introduced
       */
  @js.native
  object SelectorDatabaseSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SelectorDatabaseSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorDatabaseSource = js.native
    /**
             * Creates and returns a new SelectorDatabaseSource instance in the SDK and on the server.
             * The new SelectorDatabaseSource will be automatically stored in the 'selectorSource' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.1.0 and higher
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorDatabaseSource = js.native
  }
  
  @js.native
  object SelectorMicroflowSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SelectorMicroflowSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorMicroflowSource = js.native
    /**
             * Creates and returns a new SelectorMicroflowSource instance in the SDK and on the server.
             * The new SelectorMicroflowSource will be automatically stored in the 'selectorSource' property
             * of the parent AssociationWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorMicroflowSource = js.native
  }
  
  @js.native
  object SelectorSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object SelectorXPathSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SelectorXPathSource instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorXPathSource = js.native
    /**
             * Creates and returns a new SelectorXPathSource instance in the SDK and on the server.
             * The new SelectorXPathSource will be automatically stored in the 'selectorSource' property
             * of the parent AssociationWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SelectorXPathSource = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/sidebar-toggle-button relevant section in reference guide}
       */
  @js.native
  object SidebarToggleButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
    /**
             * Creates and returns a new SidebarToggleButton instance in the SDK and on the server.
             * The new SidebarToggleButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleButton = js.native
  }
  
  @js.native
  object SidebarToggleMode extends js.Object {
    var PushContentAside: mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleMode = js.native
    var ShrinkContent: mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleMode = js.native
    var SlideOverContent: mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleMode = js.native
  }
  
  @js.native
  object SidebarToggleRegion extends js.Object {
    var Left: mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleRegion = js.native
    var Right: mendixmodelsdkLib.distGenPagesMod.pagesNs.SidebarToggleRegion = js.native
  }
  
  /**
       * In version 7.1.0: introduced
       */
  @js.native
  object SignOutClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
    /**
             * Creates and returns a new SignOutClientAction instance in the SDK and on the server.
             * The new SignOutClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.SignOutClientAction = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/simple-menu-bar relevant section in reference guide}
       */
  @js.native
  object SimpleMenuBar extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
    /**
             * Creates and returns a new SimpleMenuBar instance in the SDK and on the server.
             * The new SimpleMenuBar will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBar = js.native
  }
  
  @js.native
  object SimpleMenuBarOrientation extends js.Object {
    var Horizontal: mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBarOrientation = js.native
    var Vertical: mendixmodelsdkLib.distGenPagesMod.pagesNs.SimpleMenuBarOrientation = js.native
  }
  
  @js.native
  object SingleSearchField extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object SizeMode extends js.Object {
    var Auto: mendixmodelsdkLib.distGenPagesMod.pagesNs.SizeMode = js.native
    var Percentage: mendixmodelsdkLib.distGenPagesMod.pagesNs.SizeMode = js.native
    var Pixels: mendixmodelsdkLib.distGenPagesMod.pagesNs.SizeMode = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/snippet relevant section in reference guide}
       */
  @js.native
  object Snippet extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates a new Snippet unit in the SDK and on the server.
             * Expects one argument, the projects.IFolderBase in which this unit is contained.
             */
    def createIn(container: mendixmodelsdkLib.distGenProjectsMod.projectsNs.IFolderBase): mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet = js.native
  }
  
  @js.native
  object SnippetCall extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SnippetCall instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCall = js.native
    /**
             * Creates and returns a new SnippetCall instance in the SDK and on the server.
             * The new SnippetCall will be automatically stored in the 'snippetCall' property
             * of the parent SnippetCallWidget element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCall = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/snippet-call relevant section in reference guide}
       */
  @js.native
  object SnippetCallWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
    /**
             * Creates and returns a new SnippetCallWidget instance in the SDK and on the server.
             * The new SnippetCallWidget will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.SnippetCallWidget = js.native
  }
  
  @js.native
  object SortDirection extends js.Object {
    var Ascending: mendixmodelsdkLib.distGenPagesMod.pagesNs.SortDirection = js.native
    var Descending: mendixmodelsdkLib.distGenPagesMod.pagesNs.SortDirection = js.native
  }
  
  @js.native
  object SortableEntityPathSource extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  @js.native
  object SplitPane extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/image relevant section in reference guide}
       */
  @js.native
  object StaticImageViewer extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
    /**
             * Creates and returns a new StaticImageViewer instance in the SDK and on the server.
             * The new StaticImageViewer will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer = js.native
  }
  
  @js.native
  object StaticOrDynamicString extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new StaticOrDynamicString instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticOrDynamicString = js.native
    /**
             * Creates and returns a new StaticOrDynamicString instance in the SDK and on the server.
             * The new StaticOrDynamicString will be automatically stored in the 'address' property
             * of the parent LinkButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.2.0
             */
    def createInLinkButtonUnderAddress(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LinkButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticOrDynamicString = js.native
    /**
             * Creates and returns a new StaticOrDynamicString instance in the SDK and on the server.
             * The new StaticOrDynamicString will be automatically stored in the 'address' property
             * of the parent OpenLinkClientAction element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.3.0 and higher
             */
    def createInOpenLinkClientActionUnderAddress(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.OpenLinkClientAction): mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticOrDynamicString = js.native
  }
  
  /**
       * In version 7.0.2: deleted
       */
  @js.native
  object SyncButton extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.0.1
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
    /**
             * Creates and returns a new SyncButton instance in the SDK and on the server.
             * The new SyncButton will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.0.1
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncButton = js.native
  }
  
  /**
       * In version 7.0.2: introduced
       */
  @js.native
  object SyncClientAction extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'action' property
             * of the parent ActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'action' property
             * of the parent ActionItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInActionItemUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ActionItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'value' property
             * of the parent pluginwidgets.ActionValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 to 7.18.0
             */
    def createInActionValueUnderValue(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.ActionValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AssociationWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAssociationWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AssociationWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'onEnterAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnEnterAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'onLeaveAction' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInAttributeWidgetUnderOnLeaveAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'clickAction' property
             * of the parent DynamicImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.18.0 and higher
             */
    def createInDynamicImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DynamicImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'action' property
             * of the parent GridActionButton element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInGridActionButtonUnderAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GridActionButton): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'clickAction' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInListViewUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'action' property
             * of the parent menus.MenuItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInMenuItemUnderAction(container: mendixmodelsdkLib.distGenMenusMod.menusNs.MenuItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'onChangeAction' property
             * of the parent ReferenceSetSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.13.0 and higher
             */
    def createInReferenceSetSelectorUnderOnChangeAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSetSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'clickAction' property
             * of the parent StaticImageViewer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 and higher
             */
    def createInStaticImageViewerUnderClickAction(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.StaticImageViewer): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
    /**
             * Creates and returns a new SyncClientAction instance in the SDK and on the server.
             * The new SyncClientAction will be automatically stored in the 'action' property
             * of the parent customwidgets.WidgetValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.19.0 and higher
             */
    def createInWidgetValueUnderAction(container: mendixmodelsdkLib.distGenCustomwidgetsMod.customwidgetsNs.WidgetValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.SyncClientAction = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/tab-container relevant section in reference guide}
       */
  @js.native
  object TabContainer extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
    /**
             * Creates and returns a new TabContainer instance in the SDK and on the server.
             * The new TabContainer will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/tab-page relevant section in reference guide}
       */
  @js.native
  object TabPage extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TabPage instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage = js.native
    /**
             * Creates and returns a new TabPage instance in the SDK and on the server.
             * The new TabPage will be automatically stored in the 'tabPages' property
             * of the parent TabContainer element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/table relevant section in reference guide}
       */
  @js.native
  object Table extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
    /**
             * Creates and returns a new Table instance in the SDK and on the server.
             * The new Table will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.Table = js.native
  }
  
  @js.native
  object TableCell extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TableCell instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell = js.native
    /**
             * Creates and returns a new TableCell instance in the SDK and on the server.
             * The new TableCell will be automatically stored in the 'cells' property
             * of the parent Table element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Table): mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell = js.native
  }
  
  @js.native
  object TableCellRenderModeType extends js.Object {
    var Default: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCellRenderModeType = js.native
    var Header: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCellRenderModeType = js.native
    var Title: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCellRenderModeType = js.native
  }
  
  @js.native
  object TableColumn extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TableColumn instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TableColumn = js.native
    /**
             * Creates and returns a new TableColumn instance in the SDK and on the server.
             * The new TableColumn will be automatically stored in the 'columns' property
             * of the parent Table element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Table): mendixmodelsdkLib.distGenPagesMod.pagesNs.TableColumn = js.native
  }
  
  @js.native
  object TableRow extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TableRow instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TableRow = js.native
    /**
             * Creates and returns a new TableRow instance in the SDK and on the server.
             * The new TableRow will be automatically stored in the 'rows' property
             * of the parent Table element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Table): mendixmodelsdkLib.distGenPagesMod.pagesNs.TableRow = js.native
  }
  
  /**
       * In version 7.7.0: introduced
       */
  @js.native
  object TemplateFormBase extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/template-grid relevant section in reference guide}
       */
  @js.native
  object TemplateGrid extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
    /**
             * Creates and returns a new TemplateGrid instance in the SDK and on the server.
             * The new TemplateGrid will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid = js.native
  }
  
  @js.native
  object TemplateGridContents extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TemplateGridContents instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents = js.native
    /**
             * Creates and returns a new TemplateGridContents instance in the SDK and on the server.
             * The new TemplateGridContents will be automatically stored in the 'contents' property
             * of the parent TemplateGrid element passed as argument.
             */
    def createIn(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGrid): mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/text-area relevant section in reference guide}
       */
  @js.native
  object TextArea extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
    /**
             * Creates and returns a new TextArea instance in the SDK and on the server.
             * The new TextArea will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextArea = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/text-box relevant section in reference guide}
       */
  @js.native
  object TextBox extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
    /**
             * Creates and returns a new TextBox instance in the SDK and on the server.
             * The new TextBox will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.TextBox = js.native
  }
  
  @js.native
  object TextRenderMode extends js.Object {
    var H1: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
    var H2: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
    var H3: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
    var H4: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
    var H5: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
    var H6: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
    var Paragraph: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
    var Text: mendixmodelsdkLib.distGenPagesMod.pagesNs.TextRenderMode = js.native
  }
  
  @js.native
  object TextWidget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/page-title relevant section in reference guide}
       */
  @js.native
  object Title extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
    /**
             * Creates and returns a new Title instance in the SDK and on the server.
             * The new Title will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.Title = js.native
  }
  
  @js.native
  object ToggleMode extends js.Object {
    var None: mendixmodelsdkLib.distGenPagesMod.pagesNs.ToggleMode = js.native
    var PushContentAside: mendixmodelsdkLib.distGenPagesMod.pagesNs.ToggleMode = js.native
    var ShrinkContentInitiallyClosed: mendixmodelsdkLib.distGenPagesMod.pagesNs.ToggleMode = js.native
    var ShrinkContentInitiallyOpen: mendixmodelsdkLib.distGenPagesMod.pagesNs.ToggleMode = js.native
    var SlideOverContent: mendixmodelsdkLib.distGenPagesMod.pagesNs.ToggleMode = js.native
  }
  
  @js.native
  object UnitEnum extends js.Object {
    var Pixels: mendixmodelsdkLib.distGenPagesMod.pagesNs.UnitEnum = js.native
    var Weight: mendixmodelsdkLib.distGenPagesMod.pagesNs.UnitEnum = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/validation-message relevant section in reference guide}
       *
       * In version 7.0.2: introduced
       */
  @js.native
  object ValidationMessage extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
    /**
             * Creates and returns a new ValidationMessage instance in the SDK and on the server.
             * The new ValidationMessage will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.0.2 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.ValidationMessage = js.native
  }
  
  /**
       * In version 7.15.0: deleted
       */
  @js.native
  object VerticalFlow extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
    /**
             * Creates and returns a new VerticalFlow instance in the SDK and on the server.
             * The new VerticalFlow will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow = js.native
  }
  
  /**
       * See: {@link https://docs.mendix.com/refguide7/vertical-split-pane relevant section in reference guide}
       */
  @js.native
  object VerticalSplitPane extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.14.0
             */
    def createInBuildingBlockUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent BuildingBlock element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInBuildingBlockUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.BuildingBlock): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'footerWidget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.7.0 to 7.14.0
             */
    def createInDataViewUnderFooterWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'footerWidgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderFooterWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDataViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent DataView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDataViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DataView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInDivContainerUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent DivContainer element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInDivContainerUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.DivContainer): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInGroupBoxUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent GroupBox element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInGroupBoxUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.GroupBox): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'leftWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderLeftWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'leftWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderLeftWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'rightWidget' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInHeaderUnderRightWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'rightWidgets' property
             * of the parent Header element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInHeaderUnderRightWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Header): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutCallArgumentUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent LayoutCallArgument element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutCallArgumentUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutCallArgument): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutGridColumnUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent LayoutGridColumn element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutGridColumnUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.LayoutGridColumn): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInLayoutUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent Layout element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInLayoutUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Layout): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewTemplateUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent ListViewTemplate element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewTemplateUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListViewTemplate): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInListViewUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent ListView element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInListViewUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ListView): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent MasterDetailRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.1.0 to 7.14.0
             */
    def createInMasterDetailRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.MasterDetailRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInNavigationListItemUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent NavigationListItem element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInNavigationListItemUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.NavigationListItem): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'parameterWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderParameterWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'reportWidget' property
             * of the parent reports.ReportPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 6.9.0
             */
    def createInReportPaneUnderReportWidget(container: mendixmodelsdkLib.distGenReportsMod.reportsNs.ReportPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInScrollContainerRegionUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent ScrollContainerRegion element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInScrollContainerRegionUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ScrollContainerRegion): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSnippetUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent Snippet element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSnippetUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.Snippet): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'firstWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderFirstWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'firstWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderFirstWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'secondWidget' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInSplitPaneUnderSecondWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'secondWidgets' property
             * of the parent SplitPane element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInSplitPaneUnderSecondWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.SplitPane): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTabPageUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent TabPage element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTabPageUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TabPage): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTableCellUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent TableCell element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTableCellUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TableCell): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widget' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInTemplateGridContentsUnderWidget(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent TemplateGridContents element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.15.0 and higher
             */
    def createInTemplateGridContentsUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.TemplateGridContents): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
    /**
             * Creates and returns a new VerticalSplitPane instance in the SDK and on the server.
             * The new VerticalSplitPane will be automatically stored in the 'widgets' property
             * of the parent VerticalFlow element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  6.0.0 to 7.14.0
             */
    def createInVerticalFlowUnderWidgets(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalFlow): mendixmodelsdkLib.distGenPagesMod.pagesNs.VerticalSplitPane = js.native
  }
  
  /**
       * Interfaces and instance classes for types from the Mendix sub meta model `Pages`.
       */
  /**
       * See: {@link https://docs.mendix.com/refguide7/pages relevant section in reference guide}
       */
  @js.native
  object Widget extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
  }
  
  /**
       * In version 7.6.0: introduced
       */
  @js.native
  object WidgetValidation extends js.Object {
    var structureTypeName: java.lang.String = js.native
    var versionInfo: mendixmodelsdkLib.distGenPagesMod.StructureVersionInfo = js.native
    /**
             * Creates and returns a new WidgetValidation instance in the SDK and on the server.
             * Expects one argument: the IModel object the instance will "live on".
             * After creation, assign or add this instance to a property that accepts this kind of objects.
             */
    def create(model: mendixmodelsdkLib.distGenBaseDashModelMod.IModel): mendixmodelsdkLib.distGenPagesMod.pagesNs.WidgetValidation = js.native
    /**
             * Creates and returns a new WidgetValidation instance in the SDK and on the server.
             * The new WidgetValidation will be automatically stored in the 'validations' property
             * of the parent pluginwidgets.AttributeValue element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.7.0 to 7.18.0
             */
    def createInAttributeValueUnderValidations(container: mendixmodelsdkLib.distGenPluginwidgetsMod.pluginwidgetsNs.AttributeValue): mendixmodelsdkLib.distGenPagesMod.pagesNs.WidgetValidation = js.native
    /**
             * Creates and returns a new WidgetValidation instance in the SDK and on the server.
             * The new WidgetValidation will be automatically stored in the 'validation' property
             * of the parent AttributeWidget element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 and higher
             */
    def createInAttributeWidgetUnderValidation(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.AttributeWidget): mendixmodelsdkLib.distGenPagesMod.pagesNs.WidgetValidation = js.native
    /**
             * Creates and returns a new WidgetValidation instance in the SDK and on the server.
             * The new WidgetValidation will be automatically stored in the 'validation' property
             * of the parent ReferenceSelector element passed as argument.
             *
             * Warning! Can only be used on models with the following Mendix meta model versions:
             *  7.6.0 and higher
             */
    def createInReferenceSelectorUnderValidation(container: mendixmodelsdkLib.distGenPagesMod.pagesNs.ReferenceSelector): mendixmodelsdkLib.distGenPagesMod.pagesNs.WidgetValidation = js.native
  }
  
}

