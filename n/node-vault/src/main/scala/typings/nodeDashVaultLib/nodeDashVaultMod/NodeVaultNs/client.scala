package typings
package nodeDashVaultLib.nodeDashVaultMod.NodeVaultNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait client extends js.Object {
  var apiVersion: java.lang.String = js.native
  var endpoint: java.lang.String = js.native
  var token: java.lang.String = js.native
  def addApproleRole(): stdLib.Promise[_] = js.native
  def addApproleRole(options: Option): stdLib.Promise[_] = js.native
  def addPolicy(): stdLib.Promise[_] = js.native
  def addPolicy(options: Option): stdLib.Promise[_] = js.native
  def addTokenRole(): stdLib.Promise[_] = js.native
  def addTokenRole(options: Option): stdLib.Promise[_] = js.native
  def approleLogin(): stdLib.Promise[_] = js.native
  def approleLogin(options: Option): stdLib.Promise[_] = js.native
  def approleRoles(): stdLib.Promise[_] = js.native
  def approleRoles(options: Option): stdLib.Promise[_] = js.native
  def approleSecretAccessorDestroy(): stdLib.Promise[_] = js.native
  def approleSecretAccessorDestroy(options: Option): stdLib.Promise[_] = js.native
  def approleSecretAccessorLookup(): stdLib.Promise[_] = js.native
  def approleSecretAccessorLookup(options: Option): stdLib.Promise[_] = js.native
  def approleSecretAccessors(): stdLib.Promise[_] = js.native
  def approleSecretAccessors(options: Option): stdLib.Promise[_] = js.native
  def approleSecretDestroy(): stdLib.Promise[_] = js.native
  def approleSecretDestroy(options: Option): stdLib.Promise[_] = js.native
  def approleSecretLookup(): stdLib.Promise[_] = js.native
  def approleSecretLookup(options: Option): stdLib.Promise[_] = js.native
  def audits(): stdLib.Promise[_] = js.native
  def audits(options: Option): stdLib.Promise[_] = js.native
  def auths(): stdLib.Promise[_] = js.native
  def auths(options: Option): stdLib.Promise[_] = js.native
  def delete(path: java.lang.String): stdLib.Promise[_] = js.native
  def delete(path: java.lang.String, requestOptions: Option): stdLib.Promise[_] = js.native
  def deleteApproleRole(): stdLib.Promise[_] = js.native
  def deleteApproleRole(options: Option): stdLib.Promise[_] = js.native
  def disableAudit(): stdLib.Promise[_] = js.native
  def disableAudit(options: Option): stdLib.Promise[_] = js.native
  def disableAuth(): stdLib.Promise[_] = js.native
  def disableAuth(options: Option): stdLib.Promise[_] = js.native
  def enableAudit(): stdLib.Promise[_] = js.native
  def enableAudit(options: Option): stdLib.Promise[_] = js.native
  def enableAuth(): stdLib.Promise[_] = js.native
  def enableAuth(options: Option): stdLib.Promise[_] = js.native
  def generateFunction(name: java.lang.String, conf: functionConf): scala.Unit = js.native
  def generateRootCancel(): stdLib.Promise[_] = js.native
  def generateRootCancel(options: Option): stdLib.Promise[_] = js.native
  def generateRootInit(): stdLib.Promise[_] = js.native
  def generateRootInit(options: Option): stdLib.Promise[_] = js.native
  def generateRootStatus(): stdLib.Promise[_] = js.native
  def generateRootStatus(options: Option): stdLib.Promise[_] = js.native
  def generateRootUpdate(): stdLib.Promise[_] = js.native
  def generateRootUpdate(options: Option): stdLib.Promise[_] = js.native
  def getApproleRole(): stdLib.Promise[_] = js.native
  def getApproleRole(options: Option): stdLib.Promise[_] = js.native
  def getApproleRoleId(): stdLib.Promise[_] = js.native
  def getApproleRoleId(options: Option): stdLib.Promise[_] = js.native
  def getApproleRoleSecret(): stdLib.Promise[_] = js.native
  def getApproleRoleSecret(options: Option): stdLib.Promise[_] = js.native
  def getPolicy(): stdLib.Promise[_] = js.native
  def getPolicy(options: Option): stdLib.Promise[_] = js.native
  def getTokenRole(): stdLib.Promise[_] = js.native
  def getTokenRole(options: Option): stdLib.Promise[_] = js.native
  def githubLogin(): stdLib.Promise[_] = js.native
  def githubLogin(options: Option): stdLib.Promise[_] = js.native
  def handleVaultResponse(): stdLib.Promise[_] = js.native
  def handleVaultResponse(res: nodeDashVaultLib.Anon_Body): stdLib.Promise[_] = js.native
  def health(): stdLib.Promise[_] = js.native
  def health(options: Option): stdLib.Promise[_] = js.native
  def help(path: java.lang.String): stdLib.Promise[_] = js.native
  def help(path: java.lang.String, requestOptions: Option): stdLib.Promise[_] = js.native
  def init(): stdLib.Promise[_] = js.native
  def init(options: Option): stdLib.Promise[_] = js.native
  def initialized(): stdLib.Promise[_] = js.native
  def initialized(options: Option): stdLib.Promise[_] = js.native
  def leader(): stdLib.Promise[_] = js.native
  def leader(options: Option): stdLib.Promise[_] = js.native
  def list(path: java.lang.String): stdLib.Promise[_] = js.native
  def list(path: java.lang.String, requestOptions: Option): stdLib.Promise[_] = js.native
  def mount(): stdLib.Promise[_] = js.native
  def mount(options: Option): stdLib.Promise[_] = js.native
  def mounts(): stdLib.Promise[_] = js.native
  def mounts(options: Option): stdLib.Promise[_] = js.native
  def policies(): stdLib.Promise[_] = js.native
  def policies(options: Option): stdLib.Promise[_] = js.native
  def read(path: java.lang.String): stdLib.Promise[_] = js.native
  def read(path: java.lang.String, requestOptions: Option): stdLib.Promise[_] = js.native
  def remount(): stdLib.Promise[_] = js.native
  def remount(options: Option): stdLib.Promise[_] = js.native
  def removePolicy(): stdLib.Promise[_] = js.native
  def removePolicy(options: Option): stdLib.Promise[_] = js.native
  def removeTokenRole(): stdLib.Promise[_] = js.native
  def removeTokenRole(options: Option): stdLib.Promise[_] = js.native
  def renew(): stdLib.Promise[_] = js.native
  def renew(options: Option): stdLib.Promise[_] = js.native
  def request(requestOptions: RequestOption): stdLib.Promise[_] = js.native
  def revoke(): stdLib.Promise[_] = js.native
  def revoke(options: Option): stdLib.Promise[_] = js.native
  def revokePrefix(): stdLib.Promise[_] = js.native
  def revokePrefix(options: Option): stdLib.Promise[_] = js.native
  def rotate(): stdLib.Promise[_] = js.native
  def rotate(options: Option): stdLib.Promise[_] = js.native
  def seal(): stdLib.Promise[_] = js.native
  def seal(options: Option): stdLib.Promise[_] = js.native
  def status(): stdLib.Promise[_] = js.native
  def status(options: Option): stdLib.Promise[_] = js.native
  def stepDown(): stdLib.Promise[_] = js.native
  def stepDown(options: Option): stdLib.Promise[_] = js.native
  def tokenAccessors(): stdLib.Promise[_] = js.native
  def tokenAccessors(options: Option): stdLib.Promise[_] = js.native
  def tokenCreate(): stdLib.Promise[_] = js.native
  def tokenCreate(options: Option): stdLib.Promise[_] = js.native
  def tokenCreateOrphan(): stdLib.Promise[_] = js.native
  def tokenCreateOrphan(options: Option): stdLib.Promise[_] = js.native
  def tokenCreateRole(): stdLib.Promise[_] = js.native
  def tokenCreateRole(options: Option): stdLib.Promise[_] = js.native
  def tokenLookup(): stdLib.Promise[_] = js.native
  def tokenLookup(options: Option): stdLib.Promise[_] = js.native
  def tokenLookupAccessor(): stdLib.Promise[_] = js.native
  def tokenLookupAccessor(options: Option): stdLib.Promise[_] = js.native
  def tokenLookupSelf(): stdLib.Promise[_] = js.native
  def tokenLookupSelf(options: Option): stdLib.Promise[_] = js.native
  def tokenRenew(): stdLib.Promise[_] = js.native
  def tokenRenew(options: Option): stdLib.Promise[_] = js.native
  def tokenRenewSelf(): stdLib.Promise[_] = js.native
  def tokenRenewSelf(options: Option): stdLib.Promise[_] = js.native
  def tokenRevoke(): stdLib.Promise[_] = js.native
  def tokenRevoke(options: Option): stdLib.Promise[_] = js.native
  def tokenRevokeAccessor(): stdLib.Promise[_] = js.native
  def tokenRevokeAccessor(options: Option): stdLib.Promise[_] = js.native
  def tokenRevokeOrphan(): stdLib.Promise[_] = js.native
  def tokenRevokeOrphan(options: Option): stdLib.Promise[_] = js.native
  def tokenRevokeSelf(): stdLib.Promise[_] = js.native
  def tokenRevokeSelf(options: Option): stdLib.Promise[_] = js.native
  def tokenRoles(): stdLib.Promise[_] = js.native
  def tokenRoles(options: Option): stdLib.Promise[_] = js.native
  def unmount(): stdLib.Promise[_] = js.native
  def unmount(options: Option): stdLib.Promise[_] = js.native
  def unseal(): stdLib.Promise[_] = js.native
  def unseal(options: Option): stdLib.Promise[_] = js.native
  def updateApproleRoleId(): stdLib.Promise[_] = js.native
  def updateApproleRoleId(options: Option): stdLib.Promise[_] = js.native
  def userpassLogin(): stdLib.Promise[_] = js.native
  def userpassLogin(options: Option): stdLib.Promise[_] = js.native
  def write(path: java.lang.String, data: js.Any): stdLib.Promise[_] = js.native
  def write(path: java.lang.String, data: js.Any, requestOptions: Option): stdLib.Promise[_] = js.native
}

