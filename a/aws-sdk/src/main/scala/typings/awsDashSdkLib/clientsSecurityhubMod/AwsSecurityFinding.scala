package typings
package awsDashSdkLib.clientsSecurityhubMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait AwsSecurityFinding extends js.Object {
  /**
    * The AWS account ID that a finding is generated in.
    */
  var AwsAccountId: NonEmptyString
  /**
    * This data type is exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard (for example, CIS AWS Foundations). Contains compliance-related finding details.
    */
  var Compliance: js.UndefOr[Compliance] = js.undefined
  /**
    * A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.
    */
  var Confidence: js.UndefOr[Integer] = js.undefined
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider created the potential security issue that a finding captured.
    */
  var CreatedAt: NonEmptyString
  /**
    * The level of importance assigned to the resources associated with the finding. A score of 0 means the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.
    */
  var Criticality: js.UndefOr[Integer] = js.undefined
  /**
    * A finding's description.  In this release, Description is a required property. 
    */
  var Description: js.UndefOr[NonEmptyString] = js.undefined
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.
    */
  var FirstObservedAt: js.UndefOr[NonEmptyString] = js.undefined
  /**
    * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plug-in, etc. 
    */
  var GeneratorId: NonEmptyString
  /**
    * The security findings provider-specific identifier for a finding.
    */
  var Id: NonEmptyString
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.
    */
  var LastObservedAt: js.UndefOr[NonEmptyString] = js.undefined
  /**
    * A list of malware related to a finding.
    */
  var Malware: js.UndefOr[MalwareList] = js.undefined
  /**
    * The details of network-related information about a finding.
    */
  var Network: js.UndefOr[Network] = js.undefined
  /**
    * A user-defined note added to a finding.
    */
  var Note: js.UndefOr[Note] = js.undefined
  /**
    * The details of process-related information about a finding.
    */
  var Process: js.UndefOr[ProcessDetails] = js.undefined
  /**
    * The ARN generated by Security Hub that uniquely identifies a third-party company (security-findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. 
    */
  var ProductArn: NonEmptyString
  /**
    * A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
    */
  var ProductFields: js.UndefOr[FieldMap] = js.undefined
  /**
    * The record state of a finding.
    */
  var RecordState: js.UndefOr[RecordState] = js.undefined
  /**
    * A list of related findings.
    */
  var RelatedFindings: js.UndefOr[RelatedFindingList] = js.undefined
  /**
    * An data type that describes the remediation options for a finding.
    */
  var Remediation: js.UndefOr[Remediation] = js.undefined
  /**
    * A set of resource data types that describe the resources that the finding refers to.
    */
  var Resources: ResourceList
  /**
    * The schema version that a finding is formatted for.
    */
  var SchemaVersion: NonEmptyString
  /**
    * A finding's severity.
    */
  var Severity: awsDashSdkLib.clientsSecurityhubMod.Severity
  /**
    * A URL that links to a page about the current finding in the security-findings provider's solution.
    */
  var SourceUrl: js.UndefOr[NonEmptyString] = js.undefined
  /**
    * Threat intel details related to a finding.
    */
  var ThreatIntelIndicators: js.UndefOr[ThreatIntelIndicatorList] = js.undefined
  /**
    * A finding's title.  In this release, Title is a required property. 
    */
  var Title: js.UndefOr[NonEmptyString] = js.undefined
  /**
    * One or more finding types in the format of namespace/category/classifier that classify a finding. Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications
    */
  var Types: TypeList
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. 
    */
  var UpdatedAt: NonEmptyString
  /**
    * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. 
    */
  var UserDefinedFields: js.UndefOr[FieldMap] = js.undefined
  /**
    * Indicates the veracity of a finding. 
    */
  var VerificationState: js.UndefOr[VerificationState] = js.undefined
  /**
    * The workflow state of a finding. 
    */
  var WorkflowState: js.UndefOr[WorkflowState] = js.undefined
}

object AwsSecurityFinding {
  @scala.inline
  def apply(
    AwsAccountId: NonEmptyString,
    CreatedAt: NonEmptyString,
    GeneratorId: NonEmptyString,
    Id: NonEmptyString,
    ProductArn: NonEmptyString,
    Resources: ResourceList,
    SchemaVersion: NonEmptyString,
    Severity: Severity,
    Types: TypeList,
    UpdatedAt: NonEmptyString,
    Compliance: Compliance = null,
    Confidence: js.UndefOr[Integer] = js.undefined,
    Criticality: js.UndefOr[Integer] = js.undefined,
    Description: NonEmptyString = null,
    FirstObservedAt: NonEmptyString = null,
    LastObservedAt: NonEmptyString = null,
    Malware: MalwareList = null,
    Network: Network = null,
    Note: Note = null,
    Process: ProcessDetails = null,
    ProductFields: FieldMap = null,
    RecordState: RecordState = null,
    RelatedFindings: RelatedFindingList = null,
    Remediation: Remediation = null,
    SourceUrl: NonEmptyString = null,
    ThreatIntelIndicators: ThreatIntelIndicatorList = null,
    Title: NonEmptyString = null,
    UserDefinedFields: FieldMap = null,
    VerificationState: VerificationState = null,
    WorkflowState: WorkflowState = null
  ): AwsSecurityFinding = {
    val __obj = js.Dynamic.literal(AwsAccountId = AwsAccountId, CreatedAt = CreatedAt, GeneratorId = GeneratorId, Id = Id, ProductArn = ProductArn, Resources = Resources, SchemaVersion = SchemaVersion, Severity = Severity, Types = Types, UpdatedAt = UpdatedAt)
    if (Compliance != null) __obj.updateDynamic("Compliance")(Compliance)
    if (!js.isUndefined(Confidence)) __obj.updateDynamic("Confidence")(Confidence)
    if (!js.isUndefined(Criticality)) __obj.updateDynamic("Criticality")(Criticality)
    if (Description != null) __obj.updateDynamic("Description")(Description)
    if (FirstObservedAt != null) __obj.updateDynamic("FirstObservedAt")(FirstObservedAt)
    if (LastObservedAt != null) __obj.updateDynamic("LastObservedAt")(LastObservedAt)
    if (Malware != null) __obj.updateDynamic("Malware")(Malware)
    if (Network != null) __obj.updateDynamic("Network")(Network)
    if (Note != null) __obj.updateDynamic("Note")(Note)
    if (Process != null) __obj.updateDynamic("Process")(Process)
    if (ProductFields != null) __obj.updateDynamic("ProductFields")(ProductFields)
    if (RecordState != null) __obj.updateDynamic("RecordState")(RecordState.asInstanceOf[js.Any])
    if (RelatedFindings != null) __obj.updateDynamic("RelatedFindings")(RelatedFindings)
    if (Remediation != null) __obj.updateDynamic("Remediation")(Remediation)
    if (SourceUrl != null) __obj.updateDynamic("SourceUrl")(SourceUrl)
    if (ThreatIntelIndicators != null) __obj.updateDynamic("ThreatIntelIndicators")(ThreatIntelIndicators)
    if (Title != null) __obj.updateDynamic("Title")(Title)
    if (UserDefinedFields != null) __obj.updateDynamic("UserDefinedFields")(UserDefinedFields)
    if (VerificationState != null) __obj.updateDynamic("VerificationState")(VerificationState.asInstanceOf[js.Any])
    if (WorkflowState != null) __obj.updateDynamic("WorkflowState")(WorkflowState.asInstanceOf[js.Any])
    __obj.asInstanceOf[AwsSecurityFinding]
  }
}

