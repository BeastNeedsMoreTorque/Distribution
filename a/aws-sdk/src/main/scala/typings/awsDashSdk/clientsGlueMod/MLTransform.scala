package typings.awsDashSdk.clientsGlueMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait MLTransform extends js.Object {
  /**
    * A timestamp. The time and date that this machine learning transform was created.
    */
  var CreatedOn: js.UndefOr[Timestamp] = js.undefined
  /**
    * A user-defined, long-form description text for the machine learning transform. Descriptions are not guaranteed to be unique and can be changed at any time.
    */
  var Description: js.UndefOr[DescriptionString] = js.undefined
  /**
    * An EvaluationMetrics object. Evaluation metrics provide an estimate of the quality of your machine learning transform.
    */
  var EvaluationMetrics: js.UndefOr[typings.awsDashSdk.clientsGlueMod.EvaluationMetrics] = js.undefined
  /**
    * A list of AWS Glue table definitions used by the transform.
    */
  var InputRecordTables: js.UndefOr[GlueTables] = js.undefined
  /**
    * A count identifier for the labeling files generated by AWS Glue for this transform. As you create a better transform, you can iteratively download, label, and upload the labeling file.
    */
  var LabelCount: js.UndefOr[typings.awsDashSdk.clientsGlueMod.LabelCount] = js.undefined
  /**
    * A timestamp. The last point in time when this machine learning transform was modified.
    */
  var LastModifiedOn: js.UndefOr[Timestamp] = js.undefined
  /**
    * The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the AWS Glue pricing page.  When the WorkerType field is set to a value other than Standard, the MaxCapacity field is set automatically and becomes read-only.
    */
  var MaxCapacity: js.UndefOr[NullableDouble] = js.undefined
  /**
    * The maximum number of times to retry after an MLTaskRun of the machine learning transform fails.
    */
  var MaxRetries: js.UndefOr[NullableInteger] = js.undefined
  /**
    * A user-defined name for the machine learning transform. Names are not guaranteed unique and can be changed at any time.
    */
  var Name: js.UndefOr[NameString] = js.undefined
  /**
    * The number of workers of a defined workerType that are allocated when a task of the transform runs.
    */
  var NumberOfWorkers: js.UndefOr[NullableInteger] = js.undefined
  /**
    * A TransformParameters object. You can use parameters to tune (customize) the behavior of the machine learning transform by specifying what data it learns from and your preference on various tradeoffs (such as precious vs. recall, or accuracy vs. cost).
    */
  var Parameters: js.UndefOr[TransformParameters] = js.undefined
  /**
    * The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. This role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.
    */
  var Role: js.UndefOr[RoleString] = js.undefined
  /**
    * A map of key-value pairs representing the columns and data types that this transform can run against. Has an upper bound of 100 columns.
    */
  var Schema: js.UndefOr[TransformSchema] = js.undefined
  /**
    * The current status of the machine learning transform.
    */
  var Status: js.UndefOr[TransformStatusType] = js.undefined
  /**
    * The timeout in minutes of the machine learning transform.
    */
  var Timeout: js.UndefOr[typings.awsDashSdk.clientsGlueMod.Timeout] = js.undefined
  /**
    * The unique transform ID that is generated for the machine learning transform. The ID is guaranteed to be unique and does not change.
    */
  var TransformId: js.UndefOr[HashString] = js.undefined
  /**
    * The type of predefined worker that is allocated when a task of this transform runs. Accepts a value of Standard, G.1X, or G.2X.   For the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.   For the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.   For the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.  
    */
  var WorkerType: js.UndefOr[typings.awsDashSdk.clientsGlueMod.WorkerType] = js.undefined
}

object MLTransform {
  @scala.inline
  def apply(
    CreatedOn: Timestamp = null,
    Description: DescriptionString = null,
    EvaluationMetrics: EvaluationMetrics = null,
    InputRecordTables: GlueTables = null,
    LabelCount: Int | Double = null,
    LastModifiedOn: Timestamp = null,
    MaxCapacity: Int | Double = null,
    MaxRetries: Int | Double = null,
    Name: NameString = null,
    NumberOfWorkers: Int | Double = null,
    Parameters: TransformParameters = null,
    Role: RoleString = null,
    Schema: TransformSchema = null,
    Status: TransformStatusType = null,
    Timeout: Int | Double = null,
    TransformId: HashString = null,
    WorkerType: WorkerType = null
  ): MLTransform = {
    val __obj = js.Dynamic.literal()
    if (CreatedOn != null) __obj.updateDynamic("CreatedOn")(CreatedOn)
    if (Description != null) __obj.updateDynamic("Description")(Description)
    if (EvaluationMetrics != null) __obj.updateDynamic("EvaluationMetrics")(EvaluationMetrics)
    if (InputRecordTables != null) __obj.updateDynamic("InputRecordTables")(InputRecordTables)
    if (LabelCount != null) __obj.updateDynamic("LabelCount")(LabelCount.asInstanceOf[js.Any])
    if (LastModifiedOn != null) __obj.updateDynamic("LastModifiedOn")(LastModifiedOn)
    if (MaxCapacity != null) __obj.updateDynamic("MaxCapacity")(MaxCapacity.asInstanceOf[js.Any])
    if (MaxRetries != null) __obj.updateDynamic("MaxRetries")(MaxRetries.asInstanceOf[js.Any])
    if (Name != null) __obj.updateDynamic("Name")(Name)
    if (NumberOfWorkers != null) __obj.updateDynamic("NumberOfWorkers")(NumberOfWorkers.asInstanceOf[js.Any])
    if (Parameters != null) __obj.updateDynamic("Parameters")(Parameters)
    if (Role != null) __obj.updateDynamic("Role")(Role)
    if (Schema != null) __obj.updateDynamic("Schema")(Schema)
    if (Status != null) __obj.updateDynamic("Status")(Status.asInstanceOf[js.Any])
    if (Timeout != null) __obj.updateDynamic("Timeout")(Timeout.asInstanceOf[js.Any])
    if (TransformId != null) __obj.updateDynamic("TransformId")(TransformId)
    if (WorkerType != null) __obj.updateDynamic("WorkerType")(WorkerType.asInstanceOf[js.Any])
    __obj.asInstanceOf[MLTransform]
  }
}

