package typings.awsDashSdk.clientsApigatewayv2Mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait GetRouteResponse extends js.Object {
  /**
    * Specifies whether an API key is required for this route.
    */
  var ApiKeyRequired: js.UndefOr[__boolean] = js.undefined
  /**
    * A list of authorization scopes configured on a route. The scopes are used with a
    COGNITO_USER_POOLS authorizer to authorize the method invocation. The authorization
    works by matching the route scopes against the scopes parsed from the access token in
    the incoming request. The method invocation is authorized if any route scope matches
    a claimed scope in the access token. Otherwise, the invocation is not authorized.
    When the route scope is configured, the client must provide an access token instead
    of an identity token for authorization purposes.
    */
  var AuthorizationScopes: js.UndefOr[typings.awsDashSdk.clientsApigatewayv2Mod.AuthorizationScopes] = js.undefined
  /**
    * The authorization type for the route. Valid values are NONE for open
    access, AWS_IAM for using AWS IAM permissions, and CUSTOM
    for using a Lambda
    authorizer
    */
  var AuthorizationType: js.UndefOr[typings.awsDashSdk.clientsApigatewayv2Mod.AuthorizationType] = js.undefined
  /**
    * The identifier of the Authorizer resource to be associated with this
    route, if the authorizationType is CUSTOM
    . The authorizer identifier is generated by API Gateway
    when you created the authorizer.
    */
  var AuthorizerId: js.UndefOr[Id] = js.undefined
  /**
    * The model selection expression for the route.
    */
  var ModelSelectionExpression: js.UndefOr[SelectionExpression] = js.undefined
  /**
    * The operation name for the route.
    */
  var OperationName: js.UndefOr[StringWithLengthBetween1And64] = js.undefined
  /**
    * The request models for the route.
    */
  var RequestModels: js.UndefOr[RouteModels] = js.undefined
  /**
    * The request parameters for the route.
    */
  var RequestParameters: js.UndefOr[RouteParameters] = js.undefined
  /**
    * The route ID.
    */
  var RouteId: js.UndefOr[Id] = js.undefined
  /**
    * The route key for the route.
    */
  var RouteKey: js.UndefOr[SelectionKey] = js.undefined
  /**
    * The route response selection expression for the route.
    */
  var RouteResponseSelectionExpression: js.UndefOr[SelectionExpression] = js.undefined
  /**
    * The target for the route.
    */
  var Target: js.UndefOr[StringWithLengthBetween1And128] = js.undefined
}

object GetRouteResponse {
  @scala.inline
  def apply(
    ApiKeyRequired: js.UndefOr[__boolean] = js.undefined,
    AuthorizationScopes: AuthorizationScopes = null,
    AuthorizationType: AuthorizationType = null,
    AuthorizerId: Id = null,
    ModelSelectionExpression: SelectionExpression = null,
    OperationName: StringWithLengthBetween1And64 = null,
    RequestModels: RouteModels = null,
    RequestParameters: RouteParameters = null,
    RouteId: Id = null,
    RouteKey: SelectionKey = null,
    RouteResponseSelectionExpression: SelectionExpression = null,
    Target: StringWithLengthBetween1And128 = null
  ): GetRouteResponse = {
    val __obj = js.Dynamic.literal()
    if (!js.isUndefined(ApiKeyRequired)) __obj.updateDynamic("ApiKeyRequired")(ApiKeyRequired)
    if (AuthorizationScopes != null) __obj.updateDynamic("AuthorizationScopes")(AuthorizationScopes)
    if (AuthorizationType != null) __obj.updateDynamic("AuthorizationType")(AuthorizationType.asInstanceOf[js.Any])
    if (AuthorizerId != null) __obj.updateDynamic("AuthorizerId")(AuthorizerId)
    if (ModelSelectionExpression != null) __obj.updateDynamic("ModelSelectionExpression")(ModelSelectionExpression)
    if (OperationName != null) __obj.updateDynamic("OperationName")(OperationName)
    if (RequestModels != null) __obj.updateDynamic("RequestModels")(RequestModels)
    if (RequestParameters != null) __obj.updateDynamic("RequestParameters")(RequestParameters)
    if (RouteId != null) __obj.updateDynamic("RouteId")(RouteId)
    if (RouteKey != null) __obj.updateDynamic("RouteKey")(RouteKey)
    if (RouteResponseSelectionExpression != null) __obj.updateDynamic("RouteResponseSelectionExpression")(RouteResponseSelectionExpression)
    if (Target != null) __obj.updateDynamic("Target")(Target)
    __obj.asInstanceOf[GetRouteResponse]
  }
}

