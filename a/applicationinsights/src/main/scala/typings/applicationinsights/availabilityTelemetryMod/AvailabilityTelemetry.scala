package typings.applicationinsights.availabilityTelemetryMod

import org.scalablytyped.runtime.StringDictionary
import typings.applicationinsights.telemetryMod.Telemetry
import typings.std.Date
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait AvailabilityTelemetry extends Telemetry {
  /**
    * Request duration in ms
    */
  var duration: Double
  /**
    * Identifier of a test run. Use it to correlate steps of test run and telemetry generated by the service.
    */
  var id: String
  /**
    * Metrics associated with this event, displayed in Metrics Explorer on the portal.
    */
  var measurements: js.UndefOr[StringDictionary[Double]] = js.undefined
  /**
    * Diagnostic message for the result.
    */
  var message: String
  /**
    * Name of the test that these availability results represent.
    */
  var name: String
  /**
    * Name of the location where the test was run from.
    */
  var runLocation: String
  /**
    * Success flag.
    */
  var success: Boolean
}

object AvailabilityTelemetry {
  @scala.inline
  def apply(
    duration: Double,
    id: String,
    message: String,
    name: String,
    runLocation: String,
    success: Boolean,
    contextObjects: StringDictionary[js.Any] = null,
    measurements: StringDictionary[Double] = null,
    properties: StringDictionary[String] = null,
    tagOverrides: StringDictionary[String] = null,
    time: Date = null
  ): AvailabilityTelemetry = {
    val __obj = js.Dynamic.literal(duration = duration.asInstanceOf[js.Any], id = id.asInstanceOf[js.Any], message = message.asInstanceOf[js.Any], name = name.asInstanceOf[js.Any], runLocation = runLocation.asInstanceOf[js.Any], success = success.asInstanceOf[js.Any])
    if (contextObjects != null) __obj.updateDynamic("contextObjects")(contextObjects.asInstanceOf[js.Any])
    if (measurements != null) __obj.updateDynamic("measurements")(measurements.asInstanceOf[js.Any])
    if (properties != null) __obj.updateDynamic("properties")(properties.asInstanceOf[js.Any])
    if (tagOverrides != null) __obj.updateDynamic("tagOverrides")(tagOverrides.asInstanceOf[js.Any])
    if (time != null) __obj.updateDynamic("time")(time.asInstanceOf[js.Any])
    __obj.asInstanceOf[AvailabilityTelemetry]
  }
}

