package typings
package activexDashLibreofficeLib.comNs.sunNs.starNs.awtNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/** provides dialogs implementing the {@link com.sun.star.awt.XDialog} interface. */
trait XDialogProvider2 extends XDialogProvider {
  /**
    * creates a dialog for the given URL, accepting additional creation parameters
    *
    * The arguments accepted so far are **ParentWindow** - must be a component supporting the {@link XWindowPeer} interface, or a component supporting the
    * {@link XControl} interface, so an `XWindowPeer` can be obtained from it. The given window will be used as parent window for the to-be-created
    * dialog.**EventHandler** - specifies a component handling events in the dialog. See {@link createDialogWithHandler()} for a detailed specification of
    * dialog event handling.
    */
  def createDialogWithArguments(
    URL: java.lang.String,
    Arguments: activexDashLibreofficeLib.LibreOfficeNs.SeqEquiv[activexDashLibreofficeLib.comNs.sunNs.starNs.beansNs.NamedValue]
  ): XDialog
  /**
    * creates a dialog for the given URL accepting an Interface used to handle dialog events.
    * @param URL is the URL.
    * @param xHandler is the interface that will be called to handle the Events that are generated by the dialog (and all controls placed on it) and bound to
    * @returns a dialog implementing the {@link com.sun.star.awt.XDialog} interface.
    * @see com.sun.star.awt.XDialogEventHandler
    * @throws com::sun::star::lang::IllegalArgumentException if no dialog for the given URL is found or if the URL is invalid or xHandler is null.
    */
  def createDialogWithHandler(URL: java.lang.String, xHandler: activexDashLibreofficeLib.comNs.sunNs.starNs.unoNs.XInterface): XDialog
}

object XDialogProvider2 {
  @scala.inline
  def apply(
    acquire: () => scala.Unit,
    createDialog: java.lang.String => XDialog,
    createDialogWithArguments: (java.lang.String, activexDashLibreofficeLib.LibreOfficeNs.SeqEquiv[activexDashLibreofficeLib.comNs.sunNs.starNs.beansNs.NamedValue]) => XDialog,
    createDialogWithHandler: (java.lang.String, activexDashLibreofficeLib.comNs.sunNs.starNs.unoNs.XInterface) => XDialog,
    queryInterface: activexDashLibreofficeLib.`type` => js.Any,
    release: () => scala.Unit
  ): XDialogProvider2 = {
    val __obj = js.Dynamic.literal(acquire = js.Any.fromFunction0(acquire), createDialog = js.Any.fromFunction1(createDialog), createDialogWithArguments = js.Any.fromFunction2(createDialogWithArguments), createDialogWithHandler = js.Any.fromFunction2(createDialogWithHandler), queryInterface = js.Any.fromFunction1(queryInterface), release = js.Any.fromFunction0(release))
  
    __obj.asInstanceOf[XDialogProvider2]
  }
}

