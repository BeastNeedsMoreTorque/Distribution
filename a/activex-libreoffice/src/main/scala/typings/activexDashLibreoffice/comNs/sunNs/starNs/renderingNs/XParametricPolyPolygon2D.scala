package typings.activexDashLibreoffice.comNs.sunNs.starNs.renderingNs

import typings.activexDashLibreoffice.`type`
import typings.activexDashLibreoffice.comNs.sunNs.starNs.geometryNs.RealPoint2D
import typings.activexDashLibreoffice.comNs.sunNs.starNs.unoNs.XInterface
import typings.std.SafeArray
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Interface to a dynamic poly-polygon generator, that generates poly-polygons depending on a given parameter value.
  *
  * The returned poly-polygon should normally be contained in the [0,1]x[0,1] rectangle. At least that is the dimension expected at other places. e.g.
  * {@link Texture} .
  */
trait XParametricPolyPolygon2D extends XInterface {
  /**
    * Query the color space employed by this object
    * @returns the color space the colors generated by this object are to be interpreted in.
    */
  val ColorSpace: XColorSpace
  /**
    * Query the color value for the polygonal area at the specified parameter value.
    * @param t Parameter value in the range [0,1]. During painting, this range is swept through starting from 0.
    */
  def getColor(t: Double): SafeArray[ColorComponent]
  /**
    * Query the color space employed by this object
    * @returns the color space the colors generated by this object are to be interpreted in.
    */
  def getColorSpace(): XColorSpace
  /**
    * Query the polygonal outline at the specified value.
    *
    * The returned outline should be clipped to the [0,1]x[0,1] rectangle.
    * @param t Parameter value in the range [0,1]. During painting, this range is swept through starting from 0. When using such a parametric poly-polygon for
    */
  def getOutline(t: Double): XPolyPolygon2D
  /**
    * Query the color for a dedicated point in the plane.
    * @param point The permissible parameter range for point is [0,1]x[0,1]
    */
  def getPointColor(point: RealPoint2D): SafeArray[ColorComponent]
}

object XParametricPolyPolygon2D {
  @scala.inline
  def apply(
    ColorSpace: XColorSpace,
    acquire: () => Unit,
    getColor: Double => SafeArray[ColorComponent],
    getColorSpace: () => XColorSpace,
    getOutline: Double => XPolyPolygon2D,
    getPointColor: RealPoint2D => SafeArray[ColorComponent],
    queryInterface: `type` => js.Any,
    release: () => Unit
  ): XParametricPolyPolygon2D = {
    val __obj = js.Dynamic.literal(ColorSpace = ColorSpace, acquire = js.Any.fromFunction0(acquire), getColor = js.Any.fromFunction1(getColor), getColorSpace = js.Any.fromFunction0(getColorSpace), getOutline = js.Any.fromFunction1(getOutline), getPointColor = js.Any.fromFunction1(getPointColor), queryInterface = js.Any.fromFunction1(queryInterface), release = js.Any.fromFunction0(release))
  
    __obj.asInstanceOf[XParametricPolyPolygon2D]
  }
}

