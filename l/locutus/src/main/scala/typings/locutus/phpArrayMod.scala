package typings.locutus

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@JSImport("locutus/php/array", JSImport.Namespace)
@js.native
object phpArrayMod extends js.Object {
  def array_change_key_case(): js.Any = js.native
  def array_change_key_case(array: js.Any): js.Any = js.native
  def array_change_key_case(array: js.Any, cs: js.Any): js.Any = js.native
  def array_chunk(): js.Any = js.native
  def array_chunk(input: js.Any): js.Any = js.native
  def array_chunk(input: js.Any, size: js.Any): js.Any = js.native
  def array_chunk(input: js.Any, size: js.Any, preserveKeys: js.Any): js.Any = js.native
  def array_combine(): js.Any = js.native
  def array_combine(keys: js.Any): js.Any = js.native
  def array_combine(keys: js.Any, values: js.Any): js.Any = js.native
  def array_count_values(): js.Any = js.native
  def array_count_values(array: js.Any): js.Any = js.native
  def array_diff(args: js.Any*): js.Any = js.native
  def array_diff_assoc(args: js.Any*): js.Any = js.native
  def array_diff_key(args: js.Any*): js.Any = js.native
  def array_diff_uassoc(args: js.Any*): js.Any = js.native
  def array_diff_ukey(args: js.Any*): js.Any = js.native
  def array_fill(): js.Any = js.native
  def array_fill(startIndex: js.Any): js.Any = js.native
  def array_fill(startIndex: js.Any, num: js.Any): js.Any = js.native
  def array_fill(startIndex: js.Any, num: js.Any, mixedVal: js.Any): js.Any = js.native
  def array_fill_keys(): js.Any = js.native
  def array_fill_keys(keys: js.Any): js.Any = js.native
  def array_fill_keys(keys: js.Any, value: js.Any): js.Any = js.native
  def array_filter(): js.Any = js.native
  def array_filter(arr: js.Any): js.Any = js.native
  def array_filter(arr: js.Any, func: js.Any): js.Any = js.native
  def array_flip(): js.Any = js.native
  def array_flip(trans: js.Any): js.Any = js.native
  def array_intersect(args: js.Any*): js.Any = js.native
  def array_intersect_assoc(args: js.Any*): js.Any = js.native
  def array_intersect_key(args: js.Any*): js.Any = js.native
  def array_intersect_uassoc(args: js.Any*): js.Any = js.native
  def array_intersect_ukey(args: js.Any*): js.Any = js.native
  def array_key_exists(): js.Any = js.native
  def array_key_exists(key: js.Any): js.Any = js.native
  def array_key_exists(key: js.Any, search: js.Any): js.Any = js.native
  def array_keys(): js.Any = js.native
  def array_keys(input: js.Any): js.Any = js.native
  def array_keys(input: js.Any, searchValue: js.Any): js.Any = js.native
  def array_keys(input: js.Any, searchValue: js.Any, argStrict: js.Any): js.Any = js.native
  def array_map(args: js.Any*): js.Any = js.native
  def array_merge(args: js.Any*): js.Any = js.native
  def array_merge_recursive(): js.Any = js.native
  def array_merge_recursive(arr1: js.Any): js.Any = js.native
  def array_merge_recursive(arr1: js.Any, arr2: js.Any): js.Any = js.native
  def array_multisort(args: js.Any*): js.Any = js.native
  def array_pad(): js.Any = js.native
  def array_pad(input: js.Any): js.Any = js.native
  def array_pad(input: js.Any, padSize: js.Any): js.Any = js.native
  def array_pad(input: js.Any, padSize: js.Any, padValue: js.Any): js.Any = js.native
  def array_pop(): js.Any = js.native
  def array_pop(inputArr: js.Any): js.Any = js.native
  def array_product(): js.Any = js.native
  def array_product(input: js.Any): js.Any = js.native
  def array_push(args: js.Any*): js.Any = js.native
  def array_rand(): js.Any = js.native
  def array_rand(input: js.Any): js.Any = js.native
  def array_rand(input: js.Any, numReq: js.Any): js.Any = js.native
  def array_reduce(): js.Any = js.native
  def array_reduce(aInput: js.Any): js.Any = js.native
  def array_reduce(aInput: js.Any, callback: js.Any): js.Any = js.native
  def array_replace(args: js.Any*): js.Any = js.native
  def array_replace_recursive(args: js.Any*): js.Any = js.native
  def array_reverse(): js.Any = js.native
  def array_reverse(array: js.Any): js.Any = js.native
  def array_reverse(array: js.Any, preserveKeys: js.Any): js.Any = js.native
  def array_search(): js.Any = js.native
  def array_search(needle: js.Any): js.Any = js.native
  def array_search(needle: js.Any, haystack: js.Any): js.Any = js.native
  def array_search(needle: js.Any, haystack: js.Any, argStrict: js.Any): js.Any = js.native
  def array_shift(): js.Any = js.native
  def array_shift(inputArr: js.Any): js.Any = js.native
  def array_slice(): js.Any = js.native
  def array_slice(arr: js.Any): js.Any = js.native
  def array_slice(arr: js.Any, offst: js.Any): js.Any = js.native
  def array_slice(arr: js.Any, offst: js.Any, lgth: js.Any): js.Any = js.native
  def array_slice(arr: js.Any, offst: js.Any, lgth: js.Any, preserveKeys: js.Any): js.Any = js.native
  def array_splice(): js.Any = js.native
  def array_splice(arr: js.Any): js.Any = js.native
  def array_splice(arr: js.Any, offst: js.Any): js.Any = js.native
  def array_splice(arr: js.Any, offst: js.Any, lgth: js.Any): js.Any = js.native
  def array_splice(arr: js.Any, offst: js.Any, lgth: js.Any, replacement: js.Any): js.Any = js.native
  def array_sum(): js.Any = js.native
  def array_sum(array: js.Any): js.Any = js.native
  def array_udiff(args: js.Any*): js.Any = js.native
  def array_udiff_assoc(args: js.Any*): js.Any = js.native
  def array_udiff_uassoc(args: js.Any*): js.Any = js.native
  def array_uintersect(args: js.Any*): js.Any = js.native
  def array_uintersect_uassoc(args: js.Any*): js.Any = js.native
  def array_unique(): js.Any = js.native
  def array_unique(inputArr: js.Any): js.Any = js.native
  def array_unshift(args: js.Any*): js.Any = js.native
  def array_values(): js.Any = js.native
  def array_values(input: js.Any): js.Any = js.native
  def array_walk(args: js.Any*): js.Any = js.native
  def arsort(): js.Any = js.native
  def arsort(inputArr: js.Any): js.Any = js.native
  def arsort(inputArr: js.Any, sortFlags: js.Any): js.Any = js.native
  def asort(): js.Any = js.native
  def asort(inputArr: js.Any): js.Any = js.native
  def asort(inputArr: js.Any, sortFlags: js.Any): js.Any = js.native
  def count(): js.Any = js.native
  def count(mixedVar: js.Any): js.Any = js.native
  def count(mixedVar: js.Any, mode: js.Any): js.Any = js.native
  def current(): js.Any = js.native
  def current(arr: js.Any): js.Any = js.native
  def each(): js.Any = js.native
  def each(arr: js.Any): js.Any = js.native
  def end(): js.Any = js.native
  def end(arr: js.Any): js.Any = js.native
  def in_array(): js.Any = js.native
  def in_array(needle: js.Any): js.Any = js.native
  def in_array(needle: js.Any, haystack: js.Any): js.Any = js.native
  def in_array(needle: js.Any, haystack: js.Any, argStrict: js.Any): js.Any = js.native
  def key(): js.Any = js.native
  def key(arr: js.Any): js.Any = js.native
  def krsort(): js.Any = js.native
  def krsort(inputArr: js.Any): js.Any = js.native
  def krsort(inputArr: js.Any, sortFlags: js.Any): js.Any = js.native
  def ksort(): js.Any = js.native
  def ksort(inputArr: js.Any): js.Any = js.native
  def ksort(inputArr: js.Any, sortFlags: js.Any): js.Any = js.native
  def natcasesort(): js.Any = js.native
  def natcasesort(inputArr: js.Any): js.Any = js.native
  def natsort(): js.Any = js.native
  def natsort(inputArr: js.Any): js.Any = js.native
  def next(): js.Any = js.native
  def next(arr: js.Any): js.Any = js.native
  def pos(): js.Any = js.native
  def pos(arr: js.Any): js.Any = js.native
  def prev(): js.Any = js.native
  def prev(arr: js.Any): js.Any = js.native
  def range(): js.Any = js.native
  def range(low: js.Any): js.Any = js.native
  def range(low: js.Any, high: js.Any): js.Any = js.native
  def range(low: js.Any, high: js.Any, step: js.Any): js.Any = js.native
  def reset(): js.Any = js.native
  def reset(arr: js.Any): js.Any = js.native
  def rsort(): js.Any = js.native
  def rsort(inputArr: js.Any): js.Any = js.native
  def rsort(inputArr: js.Any, sortFlags: js.Any): js.Any = js.native
  def shuffle(): js.Any = js.native
  def shuffle(inputArr: js.Any): js.Any = js.native
  def sizeof(): js.Any = js.native
  def sizeof(mixedVar: js.Any): js.Any = js.native
  def sizeof(mixedVar: js.Any, mode: js.Any): js.Any = js.native
  def sort(): js.Any = js.native
  def sort(inputArr: js.Any): js.Any = js.native
  def sort(inputArr: js.Any, sortFlags: js.Any): js.Any = js.native
  def uasort(): js.Any = js.native
  def uasort(inputArr: js.Any): js.Any = js.native
  def uasort(inputArr: js.Any, sorter: js.Any): js.Any = js.native
  def uksort(): js.Any = js.native
  def uksort(inputArr: js.Any): js.Any = js.native
  def uksort(inputArr: js.Any, sorter: js.Any): js.Any = js.native
  def usort(): js.Any = js.native
  def usort(inputArr: js.Any): js.Any = js.native
  def usort(inputArr: js.Any, sorter: js.Any): js.Any = js.native
}

