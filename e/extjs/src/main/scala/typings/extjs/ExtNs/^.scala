package typings.extjs.ExtNs

import typings.extjs.ExtNs.dataNs.IModel
import typings.extjs.ExtNs.dataNs.IStore
import typings.extjs.ExtNs.domNs.elementNs.IFly
import typings.extjs.ExtNs.utilNs.IObservable
import typings.std.HTMLElement
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@JSGlobal("Ext")
@js.native
object ^ extends js.Object {
  var BLANK_IMAGE_URL: java.lang.String = js.native
  var SSL_SECURE_URL: java.lang.String = js.native
  var USE_NATIVE_JSON: Boolean = js.native
  var chromeVersion: Double = js.native
  var emptyFn: js.Any = js.native
  var emptyString: js.Any = js.native
  var enableFx: Boolean = js.native
  var enableGarbageCollector: Boolean = js.native
  var enableListenerCollection: Boolean = js.native
  var enableNestedListenerRemoval: Boolean = js.native
  var enumerables: Array = js.native
  var firefoxVersion: Double = js.native
  var globalEvents: IObservable = js.native
  var ieVersion: Double = js.native
  var isChrome: Boolean = js.native
  var isFF10: Boolean = js.native
  var isFF3_0: Boolean = js.native
  var isFF3_5: Boolean = js.native
  var isFF3_6: Boolean = js.native
  var isFF4: Boolean = js.native
  var isFF5: Boolean = js.native
  var isGecko: Boolean = js.native
  var isGecko10: Boolean = js.native
  var isGecko3: Boolean = js.native
  var isGecko4: Boolean = js.native
  var isGecko5: Boolean = js.native
  var isIE: Boolean = js.native
  var isIE10: Boolean = js.native
  var isIE10m: Boolean = js.native
  var isIE10p: Boolean = js.native
  var isIE6: Boolean = js.native
  var isIE7: Boolean = js.native
  var isIE7m: Boolean = js.native
  var isIE7p: Boolean = js.native
  var isIE8: Boolean = js.native
  var isIE8m: Boolean = js.native
  var isIE8p: Boolean = js.native
  var isIE9: Boolean = js.native
  var isIE9m: Boolean = js.native
  var isIE9p: Boolean = js.native
  var isLinux: Boolean = js.native
  var isMac: Boolean = js.native
  var isOpera: Boolean = js.native
  var isOpera10_5: Boolean = js.native
  var isReady: Boolean = js.native
  var isSafari: Boolean = js.native
  var isSafari2: Boolean = js.native
  var isSafari3: Boolean = js.native
  var isSafari4: Boolean = js.native
  var isSafari5: Boolean = js.native
  var isSafari5_0: Boolean = js.native
  var isSecure: Boolean = js.native
  var isWebKit: Boolean = js.native
  var isWindows: Boolean = js.native
  var name: java.lang.String = js.native
  var operaVersion: Double = js.native
  var safariVersion: Double = js.native
  var useShims: Boolean = js.native
  var webKitVersion: Double = js.native
  def addBehaviors(): Unit = js.native
  def addBehaviors(obj: js.Any): Unit = js.native
  def addNamespaces(): Unit = js.native
  def addNamespaces(namespace: js.Any): Unit = js.native
  def application(): Unit = js.native
  def application(config: js.Any): Unit = js.native
  @JSName("apply")
  def apply(): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any, config: js.Any): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any, config: js.Any, defaults: js.Any): js.Any = js.native
  def applyIf(): js.Any = js.native
  def applyIf(`object`: js.Any): js.Any = js.native
  def applyIf(`object`: js.Any, config: js.Any): js.Any = js.native
  def batchLayouts(): Unit = js.native
  def batchLayouts(fn: js.Any): Unit = js.native
  def batchLayouts(fn: js.Any, scope: js.Any): Unit = js.native
  def bind(): js.Any = js.native
  def bind(fn: js.Any): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any, args: Array): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any, args: Array, appendArgs: js.Any): js.Any = js.native
  def callback(): js.Any = js.native
  def callback(callback: js.Any): js.Any = js.native
  def callback(callback: js.Any, scope: js.Any): js.Any = js.native
  def callback(callback: js.Any, scope: js.Any, args: Array): js.Any = js.native
  def callback(callback: js.Any, scope: js.Any, args: Array, delay: Double): js.Any = js.native
  def clean(): Array = js.native
  def clean(array: Array): Array = js.native
  def clone(item: js.Any): js.Any = js.native
  def coerce(): js.Any = js.native
  def coerce(from: js.Any): js.Any = js.native
  def coerce(from: js.Any, to: js.Any): js.Any = js.native
  def copyTo(): js.Any = js.native
  def copyTo(dest: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any, names: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any, names: js.Any, usePrototypeKeys: Boolean): js.Any = js.native
  def create(name: java.lang.String, args: js.Any*): js.Any = js.native
  def createByAlias(alias: java.lang.String, args: js.Any*): js.Any = js.native
  def createWidget(): Unit = js.native
  def decode(): js.Any = js.native
  def decode(json: java.lang.String): js.Any = js.native
  def decode(json: java.lang.String, safe: Boolean): js.Any = js.native
  def defer(): Double = js.native
  def defer(fn: js.Any): Double = js.native
  def defer(fn: js.Any, millis: Double): Double = js.native
  def defer(fn: js.Any, millis: Double, scope: js.Any): Double = js.native
  def defer(fn: js.Any, millis: Double, scope: js.Any, args: Array): Double = js.native
  def defer(fn: js.Any, millis: Double, scope: js.Any, args: Array, appendArgs: js.Any): Double = js.native
  def define(): IBase = js.native
  def define(className: java.lang.String): IBase = js.native
  def define(className: java.lang.String, data: js.Any): IBase = js.native
  def define(className: java.lang.String, data: js.Any, createdFn: js.Any): IBase = js.native
  def deprecate(): Unit = js.native
  def deprecate(packageName: java.lang.String): Unit = js.native
  def deprecate(packageName: java.lang.String, since: java.lang.String): Unit = js.native
  def deprecate(packageName: java.lang.String, since: java.lang.String, closure: js.Any): Unit = js.native
  def deprecate(packageName: java.lang.String, since: java.lang.String, closure: js.Any, scope: js.Any): Unit = js.native
  def destroy(): Unit = js.native
  def destroy(args: js.Any): Unit = js.native
  def destroyMembers(o: js.Any, args: js.Any*): Unit = js.native
  def each(): Boolean = js.native
  def each(iterable: js.Any): Boolean = js.native
  def each(iterable: js.Any, fn: js.Any): Boolean = js.native
  def each(iterable: js.Any, fn: js.Any, scope: js.Any): Boolean = js.native
  def each(iterable: js.Any, fn: js.Any, scope: js.Any, reverse: Boolean): Boolean = js.native
  def encode(): java.lang.String = js.native
  def encode(o: js.Any): java.lang.String = js.native
  def escapeRe(): java.lang.String = js.native
  def escapeRe(str: java.lang.String): java.lang.String = js.native
  def exclude(): js.Any = js.native
  def exclude(excludes: Array): js.Any = js.native
  def extend(): js.Any = js.native
  def extend(superclass: js.Any): js.Any = js.native
  def extend(superclass: js.Any, overrides: js.Any): js.Any = js.native
  def flatten(): Array = js.native
  def flatten(array: Array): Array = js.native
  def fly(): IFly = js.native
  def fly(dom: js.Any): IFly = js.native
  def fly(dom: js.Any, named: java.lang.String): IFly = js.native
  def get(): typings.extjs.ExtNs.domNs.IElement = js.native
  def get(el: js.Any): typings.extjs.ExtNs.domNs.IElement = js.native
  def getBody(): IElement = js.native
  def getClass(`object`: js.Any): IClass = js.native
  def getClassName(): java.lang.String = js.native
  def getClassName(`object`: js.Any): java.lang.String = js.native
  def getCmp(): js.Any = js.native
  def getCmp(id: java.lang.String): js.Any = js.native
  def getDoc(): IElement = js.native
  def getDom(): js.Any = js.native
  def getDom(el: js.Any): js.Any = js.native
  def getHead(): IElement = js.native
  def getNamespace(): java.lang.String = js.native
  def getNamespace(className: java.lang.String): java.lang.String = js.native
  def getOrientation(): java.lang.String = js.native
  def getScrollBarWidth(): Double = js.native
  def getScrollBarWidth(force: Boolean): Double = js.native
  def getScrollbarSize(): js.Any = js.native
  def getScrollbarSize(force: Boolean): js.Any = js.native
  def getStore(): IStore = js.native
  def getStore(store: js.Any): IStore = js.native
  def getVersion(): IVersion = js.native
  def getVersion(packageName: java.lang.String): IVersion = js.native
  def htmlDecode(): java.lang.String = js.native
  def htmlDecode(value: java.lang.String): java.lang.String = js.native
  def htmlEncode(): java.lang.String = js.native
  def htmlEncode(value: java.lang.String): java.lang.String = js.native
  def id(): java.lang.String = js.native
  def id(el: js.Any): java.lang.String = js.native
  def id(el: js.Any, prefix: java.lang.String): java.lang.String = js.native
  def identityFn(): Unit = js.native
  def identityFn(o: js.Any): Unit = js.native
  def invoke(arr: js.Any, methodName: java.lang.String, args: js.Any*): Array = js.native
  def isArray(): Boolean = js.native
  def isArray(target: js.Any): Boolean = js.native
  def isBoolean(): Boolean = js.native
  def isBoolean(value: js.Any): Boolean = js.native
  def isDate(): Boolean = js.native
  def isDate(`object`: js.Any): Boolean = js.native
  def isDefined(): Boolean = js.native
  def isDefined(value: js.Any): Boolean = js.native
  def isElement(): Boolean = js.native
  def isElement(value: js.Any): Boolean = js.native
  def isEmpty(): Boolean = js.native
  def isEmpty(value: js.Any): Boolean = js.native
  def isEmpty(value: js.Any, allowEmptyString: Boolean): Boolean = js.native
  def isFunction(): Boolean = js.native
  def isFunction(value: js.Any): Boolean = js.native
  def isIterable(): Boolean = js.native
  def isIterable(value: js.Any): Boolean = js.native
  def isNumber(): Boolean = js.native
  def isNumber(value: js.Any): Boolean = js.native
  def isNumeric(): Boolean = js.native
  def isNumeric(value: js.Any): Boolean = js.native
  def isObject(): Boolean = js.native
  def isObject(value: js.Any): Boolean = js.native
  def isPrimitive(): Boolean = js.native
  def isPrimitive(value: js.Any): Boolean = js.native
  def isString(): Boolean = js.native
  def isString(value: js.Any): Boolean = js.native
  def isTextNode(): Boolean = js.native
  def isTextNode(value: js.Any): Boolean = js.native
  def iterate(): Unit = js.native
  def iterate(`object`: js.Any): Unit = js.native
  def iterate(`object`: js.Any, fn: js.Any): Unit = js.native
  def iterate(`object`: js.Any, fn: js.Any, scope: js.Any): Unit = js.native
  def log(options: js.Any, message: js.Any*): Unit = js.native
  def max(): js.Any = js.native
  def max(array: js.Any): js.Any = js.native
  def max(array: js.Any, comparisonFn: js.Any): js.Any = js.native
  def mean(): Double = js.native
  def mean(array: Array): Double = js.native
  def merge(destination: js.Any, `object`: js.Any*): js.Any = js.native
  def min(): js.Any = js.native
  def min(array: js.Any): js.Any = js.native
  def min(array: js.Any, comparisonFn: js.Any): js.Any = js.native
  def namespace(namespaces: js.Any*): js.Any = js.native
  def ns(namespaces: js.Any*): js.Any = js.native
  def num(): Double = js.native
  def num(value: js.Any): Double = js.native
  def num(value: js.Any, defaultValue: Double): Double = js.native
  def on(): js.Any = js.native
  def on(eventName: js.Any): js.Any = js.native
  def on(eventName: js.Any, fn: js.Any): js.Any = js.native
  def on(eventName: js.Any, fn: js.Any, scope: js.Any): js.Any = js.native
  def on(eventName: js.Any, fn: js.Any, scope: js.Any, options: js.Any): js.Any = js.native
  def onDocumentReady(): Unit = js.native
  def onDocumentReady(fn: js.Any): Unit = js.native
  def onDocumentReady(fn: js.Any, scope: js.Any): Unit = js.native
  def onDocumentReady(fn: js.Any, scope: js.Any, options: js.Any): Unit = js.native
  def onReady(): Unit = js.native
  def onReady(fn: js.Any): Unit = js.native
  def onReady(fn: js.Any, scope: js.Any): Unit = js.native
  def onReady(fn: js.Any, scope: js.Any, options: js.Any): Unit = js.native
  def `override`(): Unit = js.native
  def `override`(target: js.Any): Unit = js.native
  def `override`(target: js.Any, overrides: js.Any): Unit = js.native
  def partition(): Array = js.native
  def partition(arr: js.Any): Array = js.native
  def partition(arr: js.Any, truth: js.Any): Array = js.native
  def pass(): js.Any = js.native
  def pass(fn: js.Any): js.Any = js.native
  def pass(fn: js.Any, args: Array): js.Any = js.native
  def pass(fn: js.Any, args: Array, scope: js.Any): js.Any = js.native
  def pluck(): Array = js.native
  def pluck(array: js.Any): Array = js.native
  def pluck(array: js.Any, propertyName: java.lang.String): Array = js.native
  def preg(): Unit = js.native
  def preg(ptype: java.lang.String): Unit = js.native
  def preg(ptype: java.lang.String, cls: js.Any): Unit = js.native
  def query(): Array = js.native
  def query(path: java.lang.String): Array = js.native
  def query(path: java.lang.String, root: HTMLElement): Array = js.native
  def query(path: java.lang.String, root: HTMLElement, `type`: java.lang.String): Array = js.native
  def query(path: java.lang.String, root: HTMLElement, `type`: java.lang.String, single: Boolean): Array = js.native
  def regModel(): IModel = js.native
  def regModel(name: java.lang.String): IModel = js.native
  def regModel(name: java.lang.String, config: js.Any): IModel = js.native
  def regStore(): Unit = js.native
  def regStore(id: java.lang.String): Unit = js.native
  def regStore(id: java.lang.String, config: js.Any): Unit = js.native
  def removeNode(): Unit = js.native
  def removeNode(node: HTMLElement): Unit = js.native
  def require(): Unit = js.native
  def require(expressions: js.Any): Unit = js.native
  def require(expressions: js.Any, fn: js.Any): Unit = js.native
  def require(expressions: js.Any, fn: js.Any, scope: js.Any): Unit = js.native
  def require(expressions: js.Any, fn: js.Any, scope: js.Any, excludes: js.Any): Unit = js.native
  def resumeLayouts(): Unit = js.native
  def resumeLayouts(flush: js.Any): Unit = js.native
  def select(): ICompositeElement = js.native
  def select(selector: java.lang.String): ICompositeElement = js.native
  def select(selector: java.lang.String, unique: Boolean): ICompositeElement = js.native
  def setGlyphFontFamily(): Unit = js.native
  def setGlyphFontFamily(fontFamily: java.lang.String): Unit = js.native
  def setVersion(): js.Any = js.native
  def setVersion(packageName: java.lang.String): js.Any = js.native
  def setVersion(packageName: java.lang.String, version: js.Any): js.Any = js.native
  def sum(): Double = js.native
  def sum(array: Array): Double = js.native
  def suspendLayouts(): Unit = js.native
  def syncRequire(): Unit = js.native
  def syncRequire(expressions: js.Any): Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any): Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any, scope: js.Any): Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any, scope: js.Any, excludes: js.Any): Unit = js.native
  def toArray(): Array = js.native
  def toArray(iterable: js.Any): Array = js.native
  def toArray(iterable: js.Any, start: Double): Array = js.native
  def toArray(iterable: js.Any, start: Double, end: Double): Array = js.native
  def toSentence(): java.lang.String = js.native
  def toSentence(items: Array): java.lang.String = js.native
  def toSentence(items: Array, connector: java.lang.String): java.lang.String = js.native
  def `type`(): java.lang.String = js.native
  def `type`(value: js.Any): java.lang.String = js.native
  def typeOf(): java.lang.String = js.native
  def typeOf(value: js.Any): java.lang.String = js.native
  def un(): Unit = js.native
  def un(eventName: java.lang.String): Unit = js.native
  def un(eventName: java.lang.String, fn: js.Any): Unit = js.native
  def un(eventName: java.lang.String, fn: js.Any, scope: js.Any): Unit = js.native
  def unique(): Array = js.native
  def unique(array: Array): Array = js.native
  def urlAppend(): java.lang.String = js.native
  def urlAppend(url: java.lang.String): java.lang.String = js.native
  def urlAppend(url: java.lang.String, string: java.lang.String): java.lang.String = js.native
  def urlDecode(): js.Any = js.native
  def urlDecode(queryString: java.lang.String): js.Any = js.native
  def urlDecode(queryString: java.lang.String, recursive: Boolean): js.Any = js.native
  def urlEncode(): java.lang.String = js.native
  def urlEncode(`object`: js.Any): java.lang.String = js.native
  def urlEncode(`object`: js.Any, recursive: Boolean): java.lang.String = js.native
  def value(): js.Any = js.native
  def value(value: js.Any): js.Any = js.native
  def value(value: js.Any, defaultValue: js.Any): js.Any = js.native
  def value(value: js.Any, defaultValue: js.Any, allowBlank: Boolean): js.Any = js.native
  def valueFrom(): js.Any = js.native
  def valueFrom(value: js.Any): js.Any = js.native
  def valueFrom(value: js.Any, defaultValue: js.Any): js.Any = js.native
  def valueFrom(value: js.Any, defaultValue: js.Any, allowBlank: Boolean): js.Any = js.native
  def widget(): js.Any = js.native
  def widget(name: java.lang.String): js.Any = js.native
  def widget(name: java.lang.String, config: js.Any): js.Any = js.native
  def zip(): Array = js.native
  def zip(arr: js.Any): Array = js.native
  def zip(arr: js.Any, zipper: js.Any): Array = js.native
}

