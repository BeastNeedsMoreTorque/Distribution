package typings
package extjsLib.ExtNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@JSGlobal("Ext")
@js.native
object ^ extends js.Object {
  var BLANK_IMAGE_URL: java.lang.String = js.native
  var SSL_SECURE_URL: java.lang.String = js.native
  var USE_NATIVE_JSON: scala.Boolean = js.native
  var chromeVersion: scala.Double = js.native
  var emptyFn: js.Any = js.native
  var emptyString: js.Any = js.native
  var enableFx: scala.Boolean = js.native
  var enableGarbageCollector: scala.Boolean = js.native
  var enableListenerCollection: scala.Boolean = js.native
  var enableNestedListenerRemoval: scala.Boolean = js.native
  var enumerables: extjsLib.ExtNs.Array = js.native
  var firefoxVersion: scala.Double = js.native
  var globalEvents: extjsLib.ExtNs.utilNs.IObservable = js.native
  var ieVersion: scala.Double = js.native
  var isChrome: scala.Boolean = js.native
  var isFF10: scala.Boolean = js.native
  var isFF3_0: scala.Boolean = js.native
  var isFF3_5: scala.Boolean = js.native
  var isFF3_6: scala.Boolean = js.native
  var isFF4: scala.Boolean = js.native
  var isFF5: scala.Boolean = js.native
  var isGecko: scala.Boolean = js.native
  var isGecko10: scala.Boolean = js.native
  var isGecko3: scala.Boolean = js.native
  var isGecko4: scala.Boolean = js.native
  var isGecko5: scala.Boolean = js.native
  var isIE: scala.Boolean = js.native
  var isIE10: scala.Boolean = js.native
  var isIE10m: scala.Boolean = js.native
  var isIE10p: scala.Boolean = js.native
  var isIE6: scala.Boolean = js.native
  var isIE7: scala.Boolean = js.native
  var isIE7m: scala.Boolean = js.native
  var isIE7p: scala.Boolean = js.native
  var isIE8: scala.Boolean = js.native
  var isIE8m: scala.Boolean = js.native
  var isIE8p: scala.Boolean = js.native
  var isIE9: scala.Boolean = js.native
  var isIE9m: scala.Boolean = js.native
  var isIE9p: scala.Boolean = js.native
  var isLinux: scala.Boolean = js.native
  var isMac: scala.Boolean = js.native
  var isOpera: scala.Boolean = js.native
  var isOpera10_5: scala.Boolean = js.native
  var isReady: scala.Boolean = js.native
  var isSafari: scala.Boolean = js.native
  var isSafari2: scala.Boolean = js.native
  var isSafari3: scala.Boolean = js.native
  var isSafari4: scala.Boolean = js.native
  var isSafari5: scala.Boolean = js.native
  var isSafari5_0: scala.Boolean = js.native
  var isSecure: scala.Boolean = js.native
  var isWebKit: scala.Boolean = js.native
  var isWindows: scala.Boolean = js.native
  var name: java.lang.String = js.native
  var operaVersion: scala.Double = js.native
  var safariVersion: scala.Double = js.native
  var useShims: scala.Boolean = js.native
  var webKitVersion: scala.Double = js.native
  def addBehaviors(): scala.Unit = js.native
  def addBehaviors(obj: js.Any): scala.Unit = js.native
  def addNamespaces(): scala.Unit = js.native
  def addNamespaces(namespace: js.Any): scala.Unit = js.native
  def application(): scala.Unit = js.native
  def application(config: js.Any): scala.Unit = js.native
  @JSName("apply")
  def apply(): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any, config: js.Any): js.Any = js.native
  @JSName("apply")
  def apply(`object`: js.Any, config: js.Any, defaults: js.Any): js.Any = js.native
  def applyIf(): js.Any = js.native
  def applyIf(`object`: js.Any): js.Any = js.native
  def applyIf(`object`: js.Any, config: js.Any): js.Any = js.native
  def batchLayouts(): scala.Unit = js.native
  def batchLayouts(fn: js.Any): scala.Unit = js.native
  def batchLayouts(fn: js.Any, scope: js.Any): scala.Unit = js.native
  def bind(): js.Any = js.native
  def bind(fn: js.Any): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any, args: extjsLib.ExtNs.Array): js.Any = js.native
  def bind(fn: js.Any, scope: js.Any, args: extjsLib.ExtNs.Array, appendArgs: js.Any): js.Any = js.native
  def callback(): js.Any = js.native
  def callback(callback: js.Any): js.Any = js.native
  def callback(callback: js.Any, scope: js.Any): js.Any = js.native
  def callback(callback: js.Any, scope: js.Any, args: extjsLib.ExtNs.Array): js.Any = js.native
  def callback(callback: js.Any, scope: js.Any, args: extjsLib.ExtNs.Array, delay: scala.Double): js.Any = js.native
  def clean(): extjsLib.ExtNs.Array = js.native
  def clean(array: extjsLib.ExtNs.Array): extjsLib.ExtNs.Array = js.native
  def clone(item: js.Any): js.Any = js.native
  def coerce(): js.Any = js.native
  def coerce(from: js.Any): js.Any = js.native
  def coerce(from: js.Any, to: js.Any): js.Any = js.native
  def copyTo(): js.Any = js.native
  def copyTo(dest: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any, names: js.Any): js.Any = js.native
  def copyTo(dest: js.Any, source: js.Any, names: js.Any, usePrototypeKeys: scala.Boolean): js.Any = js.native
  def create(name: java.lang.String, args: js.Any*): js.Any = js.native
  def createByAlias(alias: java.lang.String, args: js.Any*): js.Any = js.native
  def createWidget(): scala.Unit = js.native
  def decode(): js.Any = js.native
  def decode(json: java.lang.String): js.Any = js.native
  def decode(json: java.lang.String, safe: scala.Boolean): js.Any = js.native
  def defer(): scala.Double = js.native
  def defer(fn: js.Any): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double, scope: js.Any): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double, scope: js.Any, args: extjsLib.ExtNs.Array): scala.Double = js.native
  def defer(fn: js.Any, millis: scala.Double, scope: js.Any, args: extjsLib.ExtNs.Array, appendArgs: js.Any): scala.Double = js.native
  def define(): extjsLib.ExtNs.IBase = js.native
  def define(className: java.lang.String): extjsLib.ExtNs.IBase = js.native
  def define(className: java.lang.String, data: js.Any): extjsLib.ExtNs.IBase = js.native
  def define(className: java.lang.String, data: js.Any, createdFn: js.Any): extjsLib.ExtNs.IBase = js.native
  def deprecate(): scala.Unit = js.native
  def deprecate(packageName: java.lang.String): scala.Unit = js.native
  def deprecate(packageName: java.lang.String, since: java.lang.String): scala.Unit = js.native
  def deprecate(packageName: java.lang.String, since: java.lang.String, closure: js.Any): scala.Unit = js.native
  def deprecate(packageName: java.lang.String, since: java.lang.String, closure: js.Any, scope: js.Any): scala.Unit = js.native
  def destroy(): scala.Unit = js.native
  def destroy(args: js.Any): scala.Unit = js.native
  def destroyMembers(o: js.Any, args: js.Any*): scala.Unit = js.native
  def each(): scala.Boolean = js.native
  def each(iterable: js.Any): scala.Boolean = js.native
  def each(iterable: js.Any, fn: js.Any): scala.Boolean = js.native
  def each(iterable: js.Any, fn: js.Any, scope: js.Any): scala.Boolean = js.native
  def each(iterable: js.Any, fn: js.Any, scope: js.Any, reverse: scala.Boolean): scala.Boolean = js.native
  def encode(): java.lang.String = js.native
  def encode(o: js.Any): java.lang.String = js.native
  def escapeRe(): java.lang.String = js.native
  def escapeRe(str: java.lang.String): java.lang.String = js.native
  def exclude(): js.Any = js.native
  def exclude(excludes: extjsLib.ExtNs.Array): js.Any = js.native
  def extend(): js.Any = js.native
  def extend(superclass: js.Any): js.Any = js.native
  def extend(superclass: js.Any, overrides: js.Any): js.Any = js.native
  def flatten(): extjsLib.ExtNs.Array = js.native
  def flatten(array: extjsLib.ExtNs.Array): extjsLib.ExtNs.Array = js.native
  def fly(): extjsLib.ExtNs.domNs.elementNs.IFly = js.native
  def fly(dom: js.Any): extjsLib.ExtNs.domNs.elementNs.IFly = js.native
  def fly(dom: js.Any, named: java.lang.String): extjsLib.ExtNs.domNs.elementNs.IFly = js.native
  def get(): extjsLib.ExtNs.domNs.IElement = js.native
  def get(el: js.Any): extjsLib.ExtNs.domNs.IElement = js.native
  def getBody(): extjsLib.ExtNs.IElement = js.native
  def getClass(`object`: js.Any): extjsLib.ExtNs.IClass = js.native
  def getClassName(): java.lang.String = js.native
  def getClassName(`object`: js.Any): java.lang.String = js.native
  def getCmp(): js.Any = js.native
  def getCmp(id: java.lang.String): js.Any = js.native
  def getDoc(): extjsLib.ExtNs.IElement = js.native
  def getDom(): js.Any = js.native
  def getDom(el: js.Any): js.Any = js.native
  def getHead(): extjsLib.ExtNs.IElement = js.native
  def getNamespace(): java.lang.String = js.native
  def getNamespace(className: java.lang.String): java.lang.String = js.native
  def getOrientation(): java.lang.String = js.native
  def getScrollBarWidth(): scala.Double = js.native
  def getScrollBarWidth(force: scala.Boolean): scala.Double = js.native
  def getScrollbarSize(): js.Any = js.native
  def getScrollbarSize(force: scala.Boolean): js.Any = js.native
  def getStore(): extjsLib.ExtNs.dataNs.IStore = js.native
  def getStore(store: js.Any): extjsLib.ExtNs.dataNs.IStore = js.native
  def getVersion(): extjsLib.ExtNs.IVersion = js.native
  def getVersion(packageName: java.lang.String): extjsLib.ExtNs.IVersion = js.native
  def htmlDecode(): java.lang.String = js.native
  def htmlDecode(value: java.lang.String): java.lang.String = js.native
  def htmlEncode(): java.lang.String = js.native
  def htmlEncode(value: java.lang.String): java.lang.String = js.native
  def id(): java.lang.String = js.native
  def id(el: js.Any): java.lang.String = js.native
  def id(el: js.Any, prefix: java.lang.String): java.lang.String = js.native
  def identityFn(): scala.Unit = js.native
  def identityFn(o: js.Any): scala.Unit = js.native
  def invoke(arr: js.Any, methodName: java.lang.String, args: js.Any*): extjsLib.ExtNs.Array = js.native
  def isArray(): scala.Boolean = js.native
  def isArray(target: js.Any): scala.Boolean = js.native
  def isBoolean(): scala.Boolean = js.native
  def isBoolean(value: js.Any): scala.Boolean = js.native
  def isDate(): scala.Boolean = js.native
  def isDate(`object`: js.Any): scala.Boolean = js.native
  def isDefined(): scala.Boolean = js.native
  def isDefined(value: js.Any): scala.Boolean = js.native
  def isElement(): scala.Boolean = js.native
  def isElement(value: js.Any): scala.Boolean = js.native
  def isEmpty(): scala.Boolean = js.native
  def isEmpty(value: js.Any): scala.Boolean = js.native
  def isEmpty(value: js.Any, allowEmptyString: scala.Boolean): scala.Boolean = js.native
  def isFunction(): scala.Boolean = js.native
  def isFunction(value: js.Any): scala.Boolean = js.native
  def isIterable(): scala.Boolean = js.native
  def isIterable(value: js.Any): scala.Boolean = js.native
  def isNumber(): scala.Boolean = js.native
  def isNumber(value: js.Any): scala.Boolean = js.native
  def isNumeric(): scala.Boolean = js.native
  def isNumeric(value: js.Any): scala.Boolean = js.native
  def isObject(): scala.Boolean = js.native
  def isObject(value: js.Any): scala.Boolean = js.native
  def isPrimitive(): scala.Boolean = js.native
  def isPrimitive(value: js.Any): scala.Boolean = js.native
  def isString(): scala.Boolean = js.native
  def isString(value: js.Any): scala.Boolean = js.native
  def isTextNode(): scala.Boolean = js.native
  def isTextNode(value: js.Any): scala.Boolean = js.native
  def iterate(): scala.Unit = js.native
  def iterate(`object`: js.Any): scala.Unit = js.native
  def iterate(`object`: js.Any, fn: js.Any): scala.Unit = js.native
  def iterate(`object`: js.Any, fn: js.Any, scope: js.Any): scala.Unit = js.native
  def log(options: js.Any, message: js.Any*): scala.Unit = js.native
  def max(): js.Any = js.native
  def max(array: js.Any): js.Any = js.native
  def max(array: js.Any, comparisonFn: js.Any): js.Any = js.native
  def mean(): scala.Double = js.native
  def mean(array: extjsLib.ExtNs.Array): scala.Double = js.native
  def merge(destination: js.Any, `object`: js.Any*): js.Any = js.native
  def min(): js.Any = js.native
  def min(array: js.Any): js.Any = js.native
  def min(array: js.Any, comparisonFn: js.Any): js.Any = js.native
  def namespace(namespaces: js.Any*): js.Any = js.native
  def ns(namespaces: js.Any*): js.Any = js.native
  def num(): scala.Double = js.native
  def num(value: js.Any): scala.Double = js.native
  def num(value: js.Any, defaultValue: scala.Double): scala.Double = js.native
  def on(): js.Any = js.native
  def on(eventName: js.Any): js.Any = js.native
  def on(eventName: js.Any, fn: js.Any): js.Any = js.native
  def on(eventName: js.Any, fn: js.Any, scope: js.Any): js.Any = js.native
  def on(eventName: js.Any, fn: js.Any, scope: js.Any, options: js.Any): js.Any = js.native
  def onDocumentReady(): scala.Unit = js.native
  def onDocumentReady(fn: js.Any): scala.Unit = js.native
  def onDocumentReady(fn: js.Any, scope: js.Any): scala.Unit = js.native
  def onDocumentReady(fn: js.Any, scope: js.Any, options: js.Any): scala.Unit = js.native
  def onReady(): scala.Unit = js.native
  def onReady(fn: js.Any): scala.Unit = js.native
  def onReady(fn: js.Any, scope: js.Any): scala.Unit = js.native
  def onReady(fn: js.Any, scope: js.Any, options: js.Any): scala.Unit = js.native
  def `override`(): scala.Unit = js.native
  def `override`(target: js.Any): scala.Unit = js.native
  def `override`(target: js.Any, overrides: js.Any): scala.Unit = js.native
  def partition(): extjsLib.ExtNs.Array = js.native
  def partition(arr: js.Any): extjsLib.ExtNs.Array = js.native
  def partition(arr: js.Any, truth: js.Any): extjsLib.ExtNs.Array = js.native
  def pass(): js.Any = js.native
  def pass(fn: js.Any): js.Any = js.native
  def pass(fn: js.Any, args: extjsLib.ExtNs.Array): js.Any = js.native
  def pass(fn: js.Any, args: extjsLib.ExtNs.Array, scope: js.Any): js.Any = js.native
  def pluck(): extjsLib.ExtNs.Array = js.native
  def pluck(array: js.Any): extjsLib.ExtNs.Array = js.native
  def pluck(array: js.Any, propertyName: java.lang.String): extjsLib.ExtNs.Array = js.native
  def preg(): scala.Unit = js.native
  def preg(ptype: java.lang.String): scala.Unit = js.native
  def preg(ptype: java.lang.String, cls: js.Any): scala.Unit = js.native
  def query(): extjsLib.ExtNs.Array = js.native
  def query(path: java.lang.String): extjsLib.ExtNs.Array = js.native
  def query(path: java.lang.String, root: stdLib.HTMLElement): extjsLib.ExtNs.Array = js.native
  def query(path: java.lang.String, root: stdLib.HTMLElement, `type`: java.lang.String): extjsLib.ExtNs.Array = js.native
  def query(path: java.lang.String, root: stdLib.HTMLElement, `type`: java.lang.String, single: scala.Boolean): extjsLib.ExtNs.Array = js.native
  def regModel(): extjsLib.ExtNs.dataNs.IModel = js.native
  def regModel(name: java.lang.String): extjsLib.ExtNs.dataNs.IModel = js.native
  def regModel(name: java.lang.String, config: js.Any): extjsLib.ExtNs.dataNs.IModel = js.native
  def regStore(): scala.Unit = js.native
  def regStore(id: java.lang.String): scala.Unit = js.native
  def regStore(id: java.lang.String, config: js.Any): scala.Unit = js.native
  def removeNode(): scala.Unit = js.native
  def removeNode(node: stdLib.HTMLElement): scala.Unit = js.native
  def require(): scala.Unit = js.native
  def require(expressions: js.Any): scala.Unit = js.native
  def require(expressions: js.Any, fn: js.Any): scala.Unit = js.native
  def require(expressions: js.Any, fn: js.Any, scope: js.Any): scala.Unit = js.native
  def require(expressions: js.Any, fn: js.Any, scope: js.Any, excludes: js.Any): scala.Unit = js.native
  def resumeLayouts(): scala.Unit = js.native
  def resumeLayouts(flush: js.Any): scala.Unit = js.native
  def select(): extjsLib.ExtNs.ICompositeElement = js.native
  def select(selector: java.lang.String): extjsLib.ExtNs.ICompositeElement = js.native
  def select(selector: java.lang.String, unique: scala.Boolean): extjsLib.ExtNs.ICompositeElement = js.native
  def setGlyphFontFamily(): scala.Unit = js.native
  def setGlyphFontFamily(fontFamily: java.lang.String): scala.Unit = js.native
  def setVersion(): js.Any = js.native
  def setVersion(packageName: java.lang.String): js.Any = js.native
  def setVersion(packageName: java.lang.String, version: js.Any): js.Any = js.native
  def sum(): scala.Double = js.native
  def sum(array: extjsLib.ExtNs.Array): scala.Double = js.native
  def suspendLayouts(): scala.Unit = js.native
  def syncRequire(): scala.Unit = js.native
  def syncRequire(expressions: js.Any): scala.Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any): scala.Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any, scope: js.Any): scala.Unit = js.native
  def syncRequire(expressions: js.Any, fn: js.Any, scope: js.Any, excludes: js.Any): scala.Unit = js.native
  def toArray(): extjsLib.ExtNs.Array = js.native
  def toArray(iterable: js.Any): extjsLib.ExtNs.Array = js.native
  def toArray(iterable: js.Any, start: scala.Double): extjsLib.ExtNs.Array = js.native
  def toArray(iterable: js.Any, start: scala.Double, end: scala.Double): extjsLib.ExtNs.Array = js.native
  def toSentence(): java.lang.String = js.native
  def toSentence(items: extjsLib.ExtNs.Array): java.lang.String = js.native
  def toSentence(items: extjsLib.ExtNs.Array, connector: java.lang.String): java.lang.String = js.native
  def `type`(): java.lang.String = js.native
  def `type`(value: js.Any): java.lang.String = js.native
  def typeOf(): java.lang.String = js.native
  def typeOf(value: js.Any): java.lang.String = js.native
  def un(): scala.Unit = js.native
  def un(eventName: java.lang.String): scala.Unit = js.native
  def un(eventName: java.lang.String, fn: js.Any): scala.Unit = js.native
  def un(eventName: java.lang.String, fn: js.Any, scope: js.Any): scala.Unit = js.native
  def unique(): extjsLib.ExtNs.Array = js.native
  def unique(array: extjsLib.ExtNs.Array): extjsLib.ExtNs.Array = js.native
  def urlAppend(): java.lang.String = js.native
  def urlAppend(url: java.lang.String): java.lang.String = js.native
  def urlAppend(url: java.lang.String, string: java.lang.String): java.lang.String = js.native
  def urlDecode(): js.Any = js.native
  def urlDecode(queryString: java.lang.String): js.Any = js.native
  def urlDecode(queryString: java.lang.String, recursive: scala.Boolean): js.Any = js.native
  def urlEncode(): java.lang.String = js.native
  def urlEncode(`object`: js.Any): java.lang.String = js.native
  def urlEncode(`object`: js.Any, recursive: scala.Boolean): java.lang.String = js.native
  def value(): js.Any = js.native
  def value(value: js.Any): js.Any = js.native
  def value(value: js.Any, defaultValue: js.Any): js.Any = js.native
  def value(value: js.Any, defaultValue: js.Any, allowBlank: scala.Boolean): js.Any = js.native
  def valueFrom(): js.Any = js.native
  def valueFrom(value: js.Any): js.Any = js.native
  def valueFrom(value: js.Any, defaultValue: js.Any): js.Any = js.native
  def valueFrom(value: js.Any, defaultValue: js.Any, allowBlank: scala.Boolean): js.Any = js.native
  def widget(): js.Any = js.native
  def widget(name: java.lang.String): js.Any = js.native
  def widget(name: java.lang.String, config: js.Any): js.Any = js.native
  def zip(): extjsLib.ExtNs.Array = js.native
  def zip(arr: js.Any): extjsLib.ExtNs.Array = js.native
  def zip(arr: js.Any, zipper: js.Any): extjsLib.ExtNs.Array = js.native
}

